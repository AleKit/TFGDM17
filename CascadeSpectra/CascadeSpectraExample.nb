(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    547925,      10507]
NotebookOptionsPosition[    546229,      10445]
NotebookOutlinePosition[    546585,      10461]
CellTagsIndexPosition[    546542,      10458]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cascade Spectra", "Title",
 CellChangeTimes->{{3.6385392196837587`*^9, 3.638539227770125*^9}, {
  3.656975727748878*^9, 3.656975727875676*^9}}],

Cell[CellGroupData[{

Cell["\<\
This file describes the contents of the \[OpenCurlyDoubleQuote]Spectra\
\[CloseCurlyDoubleQuote] directory and further below examples of how to load \
them into Mathematica\
\>", "Subsection",
 CellChangeTimes->{{3.639076207803432*^9, 3.6390762404838963`*^9}, 
   3.639076317436984*^9, {3.6390765046563883`*^9, 3.639076514397648*^9}, {
   3.644586340142351*^9, 3.644586353618786*^9}, 3.644586384418253*^9, {
   3.644586441815485*^9, 3.644586484755768*^9}, {3.6445972985754833`*^9, 
   3.6445972995183773`*^9}, {3.6569757500214376`*^9, 3.65697575353046*^9}, {
   3.656975998022893*^9, 3.656975999366453*^9}}],

Cell[TextData[{
 "Supplementary material for ",
 "G. Elor, N. Rodd, T. Slatyer, W. Xue, \
\[OpenCurlyDoubleQuote]Model-Independent Indirect Detection Constraints on \
Hidden Sector Dark Matter\[CloseCurlyDoubleQuote] (2015)",
 StyleBox["\n",
  FontWeight->"Bold"],
 "Contact: Nick Rodd <nrodd@mit.edu>"
}], "Text",
 CellChangeTimes->{{3.644586317093876*^9, 3.644586336763632*^9}, 
   3.657207983037204*^9}],

Cell[TextData[{
 StyleBox["Overview: ",
  FontWeight->"Bold"],
 "Files within \[OpenCurlyDoubleQuote]Spectra\[CloseCurlyDoubleQuote] contain \
the \[Gamma], ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["e", "+"], "/", 
    SuperscriptBox["e", "-"]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " spectrum of dark matter (DM) annihilations leading to 1-6 step cascades \
ending in ",
 StyleBox["e",
  FontSlant->"Italic"],
 ", \[Mu], \[Tau], ",
 StyleBox["b",
  FontSlant->"Italic"],
 "-quark, ",
 StyleBox["W",
  FontSlant->"Italic"],
 ", ",
 StyleBox["h",
  FontSlant->"Italic"],
 " or gluon final states. A separate .dat file is provided for each type of \
spectrum and final state. Note all spectra here are calculated using the \
large hierarchy approximation, which can break down in certain situations. \
The contents of these files are designed to be similar to the results of M. \
Cirelli et al., JCAP ",
 StyleBox["1103,",
  FontWeight->"Bold"],
 " 051 (2011), 1012.4515.\n\n",
 StyleBox["Mathematica",
  FontWeight->"Bold"],
 " ",
 StyleBox["version details:",
  FontWeight->"Bold"],
 " this file was written in Mathematica 10. It runs fine (but with some \
harmless error messages) in Mathematica 9. Due to the use of the PlotLegends \
function, it will not operate with Mathematica 8, but if these are deleted \
the files will run.\n\n",
 StyleBox["Content of files:",
  FontWeight->"Bold"],
 " There are 18 files of the form Cascade_{Final State}_{Spectrum Type}.dat. \
Each contains 8 columns and 1612 rows (the first row contains the column \
labels and all others contain numerical values). For all files ",
 StyleBox["except",
  FontSlant->"Italic"],
 " gluon final states and the positron spectrum from gammas, the columns are: \
\n1. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "f"], TraditionalForm]]],
 " value; \n2. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Log", "10"], "[", "x", "]"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"E", "/", 
     SubscriptBox["m", "DM"]}]}], TraditionalForm]]],
 "; \n3-8. the value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dN", 
     RowBox[{
      SubscriptBox["dLog", "10"], "(", "x", ")"}]], "=", 
    RowBox[{
     RowBox[{"ln", "(", "10", ")"}], "x", " ", 
     FractionBox["dN", "dx"]}]}], TraditionalForm]]],
 " of an n=1 (column 3) up to n=6 (column 8) spectrum at that value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "f"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 ". \nFor final state gluons and the positron spectrum from gammas, the \
columns are:\n1. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "\[Phi]"], TraditionalForm]]],
 " value; \n2. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Log", "10"], "[", "x", "]"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"E", "/", 
     SubscriptBox["m", "DM"]}]}], TraditionalForm]]],
 "; \n3-8. the value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dN", 
     RowBox[{
      SubscriptBox["dLog", "10"], "(", "x", ")"}]], "=", 
    RowBox[{
     RowBox[{"ln", "(", "10", ")"}], "x", " ", 
     FractionBox["dN", "dx"]}]}], TraditionalForm]]],
 " of an n=1 (column 3) up to n=6 (column 8) spectrum at that value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "\[Phi]"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 ". \nThe reason for this difference in the case of gluons and the positron \
spectrum from gammas is that we have to use ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "\[Phi]"], TraditionalForm]]],
 " values instead of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "f"], "=", 
    RowBox[{"2", 
     RowBox[{
      SubscriptBox["m", "f"], "/", 
      SubscriptBox["m", "\[Phi]"]}]}]}], TraditionalForm]]],
 " as for these final states ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "f"], "=", "0"}], TraditionalForm]]],
 " making ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "f"], TraditionalForm]]],
 " less useful.\n\n",
 StyleBox["Range of parameters: ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Log", "10"], "[", "x", "]"}], TraditionalForm]]],
 " ranges from -8.9 to 0 in steps on 0.05, covering the entire range where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], 
    RowBox[{"dN", "/", "dx"}]}], TraditionalForm]]],
 " for each spectra is non-zero. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "f"], TraditionalForm]]],
 " is evaluated at 0.01, 0.03, 0.05, 0.07, 0.1, 0.2, 0.3, 0.4 and 0.5, whilst \
",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "\[Phi]"], TraditionalForm]]],
 " is given at 10, 20, 40, 50, 80, 100, 500, 1000 and 2000 GeV.\n",
 StyleBox["NB:",
  FontWeight->"Bold"],
 " if using a value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "f"], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "\[Phi]"], TraditionalForm]]],
 " not in this list - especially if it is outside the range of values \
provided - it is recommended that linear interpolation be used, as described \
in the examples below.\n",
 StyleBox["NB:",
  FontWeight->"Bold"],
 " as we are using an interpolating function to determine the spectrum, it \
can occasionally go negative. This is unphysical can cause issues if the Log \
of the spectrum is being used, and so we set the spectrum to 0 wherever the \
interpolating function would send it negative.\n\n",
 StyleBox["Brief description of files",
  FontWeight->"Bold"],
 "\n",
 StyleBox["Photon Spectra:",
  FontSlant->"Italic"],
 "\nCascade_{Gam,E,Mu,Tau,B,W,H,G}_gammas.dat - photon spectrum from final \
state {photons, electrons, muons, taus, b-quarks, Ws, Higgs, gluons}\n\n",
 StyleBox["Positron/Electron Spectra:",
  FontSlant->"Italic"],
 "\nCascade_{Gam,E,Mu,Tau,B,W,H,G}_positrons.dat - positron (or equivalently \
electron) spectrum from final state {photons, electrons, muons, taus, \
b-quarks, Ws, Higgs, gluons}\n\n",
 StyleBox["Antiproton Spectra:",
  FontSlant->"Italic"],
 "\nCascade_{B,W,H,G}_antiprotons.dat - antiproton spectrum from final state \
{b-quarks, Ws, Higgs, gluons}\n",
 StyleBox["NB:",
  FontWeight->"Bold"],
 " electron, muon and tau antiproton spectra are negligible and so not given\n\
\n",
 StyleBox["Direct Spectra:",
  FontSlant->"Italic"],
 "\nAtProduction_{gammas,positrons,antiprotons}.dat",
 StyleBox[" -",
  FontSlant->"Italic"],
 " Direct {photon, positron, antiproton} spectrum as calculated by M. Cirelli \
et al. These files were produced by those authors, but we provide them here \
for convenience."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwd0W0w0wEcB/BdJ6EkNbfG7AGnaZqnWh5Wbog7pQd3XVetMmbi/jcmzuwy
d1qd9ODOnBe9WFxdSqFxomjH0bIRsdDNJZcuaS7ljYeW+n//L373efH9/e77
4sfLzE/P3kSj0WLJgXbVqxOrfg6J3cTMhGoZNwfy5isLYE038ybk2sooJ2Pe
fIYRVf6zMKC/Ycca7l3kdHiVkaaCFk5PCfwV1K6Fg7wAHSzgGaPWSa2B8fvh
1EPlOAz1lk/C8CGO9x/0Lkp3wlK92s9JujWBwYJV1mQFpO2Ougy/0Dh6mLCk
qIX3+qUj8KuFPgp9M8btkJV7ehpmiYLc/5Ka2+WUhoFILmzpdg+GFa89ZXA4
7zhldcaB+/D8hdv1cNUnphs28kL6odj5I3uDlJnFICDdIFTD5lUL5XXpA/4/
UpN6nnKlgh1GqRiLgPW/z8qcLIfE7U44AXnW5yrIaX3bBPmC6E7Y5drwEuYr
BszaPeSf3IttUNlnTCknNZxaPArZSVtOQh/P5BzY0RFEQI9jAspH2pJSGH3G
XwPp0yYtPNwcp4MjL0wuOtJvxMftkK+MocNQpTAQniu8wYfcZb0AslUe4ZDl
VnQQujXr4qCvliGBzvKFDEjwl2VUrh/LpUzbRUBT4L4r8GllYilsrLmohVOR
o+XQ7vWsEhYbWp5AV/nCEpxdZmzAIs2t3vUQh0Swfq0Ptq14DUGh4pINPv7Z
dzc51iFJHW2qhkrZIJEqdkgKZXNKGKup6OHEOyR5M5peOJnCN0NRrtECDflN
Nhjsa5iAH1hrHjzSd5tHvOCEkcmsITW3fWLD99mJe6G4ThQG5cJDcVC0sk0M
y77PJcH4rpkjcNgnOB16Z7ZKqT17L9FJWquxKuF/YyzDMg==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Photon Cascade Spectra of Final State ",
 StyleBox["W",
  FontSlant->"Italic"],
 " Bosons for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "f"], "=", "0.1"}], TraditionalForm]]]
}], "Section",
 CellChangeTimes->{{3.6390630204859133`*^9, 3.639063025852809*^9}, {
  3.639076336932643*^9, 3.6390763661398563`*^9}}],

Cell[TextData[{
 "In this example we load the photon spectrums of 1-6 step cascade DM \
annihilations terminating in ",
 StyleBox["W",
  FontSlant->"Italic"],
 " bosons for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "f"], "=", "0.1"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.6445976000873127`*^9, 3.644597637650031*^9}, {
   3.6569740152601748`*^9, 3.6569740215851297`*^9}, 3.6569741348752193`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "BaseDir", ",", "load", ",", "\[Epsilon]vals", ",", "\[Epsilon]", ",", 
   "xvals", ",", "flux", ",", "loadspec1", ",", "loadspec2", ",", "loadspec3",
    ",", "loadspec4", ",", "loadspec5", ",", "loadspec6", ",", "dNdx1", ",", 
   "dNdx2", ",", "dNdx3", ",", "dNdx4", ",", "dNdx5", ",", "dNdx6"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BaseDir", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"load", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"BaseDir", "<>", "\"\<Spectra/Cascade_W_gammas.dat\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]vals", "=", 
   RowBox[{"load", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;", 
       RowBox[{
        RowBox[{"Dimensions", "[", "load", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xvals", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"load", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", ";;", 
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "2"}], "]"}], "]"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "3"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec1", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Epsilon]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx1", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec1", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec1", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "4"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec2", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Epsilon]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx2", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec2", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec2", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "5"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec3", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Epsilon]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx3", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec3", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec3", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "6"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec4", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Epsilon]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx4", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec4", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec4", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "7"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec5", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Epsilon]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx5", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec5", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec5", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "8"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec6", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Epsilon]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx6", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec6", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec6", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx1", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx2", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx3", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx4", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx5", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx6", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.12"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)dN/dx \>\""}],
      "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Purple", ",", "Blue", ",", 
      RowBox[{"Darker", "[", "Green", "]"}], ",", 
      RowBox[{"Lighter", "[", "Pink", "]"}], ",", "Orange", ",", "Red"}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<n=1\>\"", ",", "\"\<n=2\>\"", ",", "\"\<n=3\>\"", ",", 
      "\"\<n=4\>\"", ",", "\"\<n=5\>\"", ",", "\"\<n=6\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.638539003567604*^9, {3.63853912444792*^9, 3.638539127218301*^9}, 
   3.639056012020714*^9, {3.639061226178513*^9, 3.639061230000971*^9}, {
   3.6390626177280293`*^9, 3.639062624597332*^9}, {3.63906296534056*^9, 
   3.639062980297701*^9}, {3.639063055035693*^9, 3.6390631177028913`*^9}, {
   3.6390631611248693`*^9, 3.6390632086441917`*^9}, {3.639063255187817*^9, 
   3.639063372221395*^9}, {3.639063453287771*^9, 3.639063453456121*^9}, {
   3.639065249443858*^9, 3.639065249635944*^9}, {3.639065298154196*^9, 
   3.6390653719402437`*^9}, {3.639065422048918*^9, 3.6390654312306767`*^9}, {
   3.639065516186607*^9, 3.6390655534937763`*^9}, {3.6390662025372047`*^9, 
   3.639066307136261*^9}, {3.639066415538189*^9, 3.63906644737391*^9}, {
   3.63906695110944*^9, 3.63906695878749*^9}, {3.63906754287934*^9, 
   3.639067542949849*^9}, {3.639067579548677*^9, 3.639067606031039*^9}, {
   3.639067650511935*^9, 3.639067650589734*^9}, {3.639074796825118*^9, 
   3.6390748073267813`*^9}, {3.6390748438453493`*^9, 3.639074846996669*^9}, {
   3.6390749186703053`*^9, 3.639074953027285*^9}, {3.6390750100090322`*^9, 
   3.639075125887274*^9}, {3.6390751643031473`*^9, 3.639075298122554*^9}, {
   3.639075328947755*^9, 3.639075515143014*^9}, {3.63907635788829*^9, 
   3.639076401263814*^9}, 3.644257377150648*^9, {3.644257434361697*^9, 
   3.644257640256255*^9}, {3.644257707534048*^9, 3.644257735875279*^9}, {
   3.6442600032445927`*^9, 3.644260076895362*^9}, {3.6442601126335287`*^9, 
   3.644260125127042*^9}, {3.644260206635504*^9, 3.644260216755534*^9}, {
   3.644260257841144*^9, 3.644260300439433*^9}, {3.644576371341427*^9, 
   3.644576438767619*^9}, {3.644576479640806*^9, 3.644576479920644*^9}, {
   3.64457654220582*^9, 3.644576615392721*^9}, {3.644576776040201*^9, 
   3.6445767991854687`*^9}, {3.644576834719887*^9, 3.6445768523652887`*^9}, {
   3.6445769381615953`*^9, 3.644576938607382*^9}, {3.6445771076003437`*^9, 
   3.644577147245116*^9}, {3.644577743925811*^9, 3.6445777948429527`*^9}, {
   3.644578047110093*^9, 3.644578096858204*^9}, {3.6445782810736*^9, 
   3.6445783067921886`*^9}, {3.6445783514558153`*^9, 3.644578351709989*^9}, {
   3.644580871103026*^9, 3.6445809542044983`*^9}, {3.644583694406518*^9, 
   3.6445836945720377`*^9}, {3.64458372703931*^9, 3.6445837383126783`*^9}, {
   3.64458377711351*^9, 3.644583837531001*^9}, {3.6445838746916313`*^9, 
   3.6445839220568733`*^9}, {3.644585052730834*^9, 3.6445851006510973`*^9}, {
   3.644585166144863*^9, 3.6445851833791313`*^9}, 3.6445863844322357`*^9, {
   3.644597848860992*^9, 3.644597868618737*^9}, {3.644597923287142*^9, 
   3.644597929359888*^9}, 3.656974933701758*^9, {3.656980023633141*^9, 
   3.656980023762002*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.5, 0, 0.5]], 
       LineBox[CompressedData["
1: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
nTkEjn7BXps1JLwuloFbB86KGhmNYFF/Uz+4FMoA09rvqAsxI5hdjh/3nnwZ
2P/6/Jl/AyPY9rJW2H9ZMtCQofjp8aFRTDMG7nEnyYCm9paDXNMoVt/T4ujw
WAaWkvxZfX6PYWHe+Vmcj2Qgxe8ax7rAd8xaLPhbdYAMdH3ABNt1v2Mb7vqW
HH4y8DK+ffet2O+YKtd7w1e3ZCA2bjLsi+o4Vm3Uc4jZXgbuFa/2v46bwIJW
X7q/tJUBi5Fy5/E3E5hF+tMS6wsykHS+7b3LwgS2+ssUX2YhA7PreJVkwx/Y
kYiP/JZGtHzRs//NZ53EKtqH6IrVZaDzzedjcglTWKnejy6jfTLgSFHapGea
xYp1g1XF9sgAl0fs2TmNWSxfi5i9zE1bX2c46cTtWezZ4Wt3EjllYEXZVFN7
fBaLE10VHGOQgYPlqbkebb8w33VGV49lPFxbCnROKpzHvJbz+04u4mFiZjKr
ZnIe85jT1+Sfx8ORU1VxZ6UXsOvjEVyvf+IBHnUZbOQsYJe691azjOEhIrpl
O8lsEdMvkGJI7cYDS9P59d2Xl7AT2a1u1zrx0LTwdPtg0BKmm+7yCb3Hw+mD
Jxiji5YwjdiSoolWPKSOWrXil5Ywef8jJvKv8dDp5V9a8GgZ23f+ePqbEjxk
VP0Jvl79G/vO7KgyHYqHqi7ew1sWa5i2mFtieDAenK9VZyQEr2EZah7r8o/x
UBoCtYm1a5iVW2DNnQA8WKd1aPYKrmM9vbkqDF548LjURVadWsdep/1QEXHE
g7/24OOkmA1MqHou8c0lGt8bBWmG9g3Mt3t13fEiHr5ML2h+p9/ElHcx1z63
xsMcpT6A/vYmVvIfXlXtLB6InhKaX63/YsmH/lM1x/Cg7RxZOaazja0Zuiet
a+AhRXJ8gfHBNmbu5PUnRQ0PqLNLsgS2Me6k4NqxI3h4VhceF6azgwVtF6i6
y+LBRilxKffUP8yjbVo17AAeknrdB0Tr6ZCJ3RU1WJaG+Sr9Hl9hBvSl/XBr
+KI0KCm+0cs9xoCcVbZNz89LA5+xgun+KwzoLne02/xPaZA+66Y5XMOA8hur
MoXGpMHjqpPtogUj2sbTM/t0SwNvT6BzbQ4TColtjzneKQ25xFfFDV1MiJcu
TpT7vTS4DQza8mwyIcJnvFpBqzToZ7NcrT7LjMzDT7t9pEiD4h3NjnVGFlS8
kNinVCINv4fzpEfvsiJlm0sXt4ukwWCi6ptpCSuCNtKvtgJpcKmN/Cr+lRV9
zKIw2edIg+XW57ufEBuiMx9XjUqRBgnFrKoSNnZ0vlY+cyZEGnqxz3dflnEg
xgctV3OcpOG57dRLHgMu1PlZaY/vZZo+ZpEuuSAulHAoo97kkjT80n4PtY1c
iDDhybZjIw1f2Rn4n4hwIyM9QoGluTSkSp5xy0jlRgm48O+4Y9JAf+LgMvkZ
DyKmmFh5i0nD5P565qHPe9DyMpnujIg0tE28uZv+bw8iGxILpYWk4bHwXkqe
9F5kvE2/3rdfGv7GIv+gW3vRLfvKODku2nl8q5FI4NqHyHi+nu/bUvDQQk3e
6jwfMq78ctLoixTMXUniHxPjR96kFxMrg1IQM8+cqmbOj7KzAh6mfaJhrks6
a8H8aO2J9OvZXin429ExlLHIjzLc3JXD2qTgs/GLyDetAmhBmkHqbZUUFGRO
nVoMEkIC6R/fXK+UguBvRwPGQAgd31t4ka9cCspKddt0/wqhpF1GqU4ltP9P
VVItbwoj7ZEEXsYcKVDoer047SCCopNI9DrRUpCkJ9xOlBdD9VzbGdORUqDx
4uzBfmMxNBHUrRkdLgWKO7ePUdzFkOodD++RICmYSO02MaoQQ6NnXy/cuycF
P1ye/7mhLo6UOEy/1V+RgsL31t+kzkugvns+DUdOSAFFyDagtkUKEfVxQYzH
pOB5d9j8+V9SKIA3y6RfWwpiiZFH1PdII/mCth+3NaWgT/iwT8claRTes5+7
8rAUuLrk2BzZhUfHJasdlSSk4HSwrLGXiQyqblvGyf+ThCVdSiMXnoRwsUGD
21uSkMI+VMBjQUKOtgI5nZuSkB4y1+YcREK8yzqq19YkwcjSeZhzmoTcBZ86
lMxJgpCHhNb5MllEuK5QQxqWhOisfxQ7YzmUusfNXqZOErwnWlvYXBWR+ZaT
eFu1JHSue+nohyoizh8Xv7u8koT7tfecG4sUkV+1mWNxmSS0ZU+fvDqriGys
NFzk8iXBs6PuVcpNJSSUyX7jcKwkqPFEW3WEHkJppCJ/dE0SFl90xFr+OoLM
9+Roj16RBJ8B44mhvcqIcyuN/oELbf9fud/laykjv87oR42XJSEZd05FOFoZ
2dzwDj5hLQkmHxX2xageRcLVek8M9SSBdAVnuZaogjJ0JjPOi0tCJu+oeHCc
Oorje+TLICoJeQrc/cdb1VH4rKhFmZAkvJrmvm31Rx15x1vhWA5IQnyY1txD
Ww109mfH3erdkuC3x9X7n6wmYnxaablvSwJ4j7YqiA1poaujAbwfPklACi7m
UgBVGzlUCc/f75eAOF8vsPimjSzD6t+R+iTg9kLn/KVtbXT8yErAw04JaC+o
Yj+gqYNEQv5bUGqWgIya+8GcZB3Up2DcEV0uAV92p5MvteoiVX/BIOMICXj1
t+3FDvMJZFPgEyURJgF6JQ3WD0gnkH/3QMJasARUZN0u1TA+gVpF4woyHklA
U1ZzsGXCCWQOnO/mfSXAXXFjWIN4Et2g3+F44ioBH9WsjX9Z6aHCR6NPu09K
QK7SiVzen6dQx3MsJee4BCi7d/2H32uAFj6kZXvpSkARjs7TDxmgo1JWlaKY
BGzfGBxZTDBAzc29/e7KEuDbf3GS8ZQhGmVq2s8tJQFvTHFH2etPo/0heekm
9BLgeX6mLL7vDErrck1b3REHb+LchRAmEyS2Tz41ZUscHrjHH1gRN0GE7Oqk
iXVxiEy10Dl/wQSpk9/Ges+LwyrHzGu9HhNku/gz9NkXcdCYMd4+3HQW5VjK
ey5WiQNvaoa+cbcZImQue8RX0uKVFjp7l8xQyY/q2+rl4uD31eh2xF5z9OoW
uhlYIg7k8HdXCq3NUWuEiduBHHHI0+iSDfxpjn7CLQftaHEIOMXDupfXAikQ
a4yjr4jD16//kuKiLdFoo6avrYs4cErIK76tsUQxNo15JGdxqO0kbB4asUQr
Tzq3mi+Jw0fTJesaeStUvzZevGEpDl0yvHV3e6zQyWZulst64vBddNxHWfQC
srt4haosJQ5SPM6tDLO2iHtjYWaXhDjUW7bq/+S3Q29i7vD1iIoD5v5pmueU
HZJqDbh2RVAcftxTGpIrtEMzBxMFM3nFIafyTV+y60XkudnkxUovDtsuzgHl
fvYoMl5Y8ctXMWBwyyitknFAz4zYTH2+iMHhH8sK9CcdUAXT6u39n8WAJenm
C19HB/TpTkeNWb8Y4KRCHv3JckBiFndRR7sY3Eiu4zwgehlV8H02ptSIgd3F
oxSShCMaTIy7lvlUDD689dxaMnJGM2cCnmg9EaPNW3keDrec0TaLW/mXCDGQ
PcwWxZrojCS8j63uDxEDXeHD39ZGndFVy2W/6PtisNd330NHr//QzgGTiAdX
xeAYW9O5ty9ckFQKx/PLJ8Tg6y8cCTt1Fd3BUqY4j4lBr8s1RwGPq6j1O0Gq
WlsMHul1aB3OvIr+kz2ZzqopBpaBP3YLrV1FxeSAJ6WHaPor8zr68t2Q4sjq
7XVRMfDlOfaYb+915KkPPnyrovB8q2/Z98kNdODp12WXRVEwtqY0/y68geo+
b15tmBWFjvKq108ab6CtK8p29t9FQVd9ukNp7QZ6GFmsW9wtCjm7WaIlLt5E
kX1xHFixKBxZ4RxMUbmFcm1c050uisLuiTm2XkYP9MyQ7QbrBVGIaYlI+yXm
gVLVi3SfW4gC6p09J6vlgWIO/JxaNBKF9gFDek5PD/Sg3+WQn6YoPLy6ymP1
0wPZnXZ5G8MvCir5pv0Nn+6gA5r/LVE/iMA++bzI2k4vtFeWpdmhWwSO5Ovf
dZ73QlwCBQlM70XguMif7xpc3oj5z6SGYaMILA0sz9me9Uarlc5Bn16KgBFP
ql/ggDfqk3UWnIsUAdHvD9mDZn1QuKDTCQF9ETDe0JxgPuyH9PV6GS8eEwGC
iJKRgI0fYr6t1ZyDicAXsqKmw2M/FNC+75icsgg48fu8jh70Q54+rdraEiJQ
oHUhxv3BPeQwIKPpvCUMy3+YVVy/3keqsTOHKl4Kw6OH2q/kRwLQ2muL5bXn
wmDpxbFKWg9AlTON5RoFwtDlxMFxgusBktdNVWxJF4YznkyHPqAHSHLJUH4w
TBhMRev8rbMfoN1nSok7jsJwt2lJesbtIfrBfkPMgF8YRGx3l5ziD0Rbw3Zq
I3uFIY4pK93wcCDaW2Zk6sEtDOx/bxRfMQpEx81kAzNYhEHqj4Y53cNAlJ06
ObW8KgTe+2q/WP0KRHYHbctS+4TA7b5d5Z3Wx2jQyACbCxcCTTkUUfU0GC2K
qp1/GCwE//6x5zqUBSOWZZkb+x8JQT3lvLpCZzA6msCUreMrBOVPep7IsIWg
uG/AlOAiBFxWpXeTH4ags+4qndgJIVAIzQzLvRuK2qOlbKJ3BMHe/qNadFA4
stOwKtbYFIT12UXFwoJwtPwj8s/kqiAkCkomj7WFI0GN9TitOUEQ8hKyreOI
QG4/3nXOfBEEDT2Xj3SxEWi3ujs6UScIiDfxOUdhJDIbr5PYvC0I3kk9Mqdn
n6Bh5TM/L/8UAL7+teMy12PQIWETqfIJASivFAj4HhiDQhjPXtwZEQA1E8nm
V6kx6MgH049JnwSg2l80O+NdDIq4YfGms0kAzgWc7ArBxyKt57bJKhkCYGsd
l6U9EYsyxNxOcZgJwNJH+UfUG/HoEkdoUQWZH7Tb+TPSupMQbzInZlLLD3E3
09tlZpJQIz66b66SH2YnrGPbGJORhG7iX8JzfhBqbr9rqJ6Mxr3zjDKT+cHh
19Rvq/xk5DT5Zinckx9seZzvvXiYglzfbKo5KfKDwoq3LdEwDd30cmvfn3sA
FIQsFqdwz9DKnosif27vh46dgBs5kIvyut82OZ3ig3yFrdpUzmI0Kj707ueh
fXBtqgcz9y1DUbl/d/1k3Avr8b0CuL4K9JbSmrYzwwtX5uvfVVRUIbk1lpCs
TzzQkdZYzGpZi3pUHtAt9/KAkF7YZLNDLfLw2fTW7eQBNv1EhvvXalH91i/X
8SYeWGT8b3nqYS3SZ+gzlC7ngfb1zcpnpbXIkTuNqyicBwKo77gbdtWhFJJi
4kttHlCwntUuy61DmFsRF70mD9zhCjmb8aIOjZVKhJxV4QEyuXkmrLYOEZT2
+SzL8YCF7sdFm446VKWyaX1EkAe0u0oUxn/XoZ7jzSK1q9wQrcfyn6R2PWK5
aJlPLeaGvOV+feXeesSoZ+5tn88N5zX6qRGf69EuBRMD+mxuwF4a542O1aOd
Hb153WRucPpblOq3XI9WMlSOtgZzQ9PeKo09vA1o9Btfa4cjN/Clj2v2Gjeg
OruPPz6LcIP3uXOF0NyAqk/21vgKcMNpUdeHj943oFfynaGCfNyg0Py7mdjX
gMp2muVscdygk+bFfmGkARlquc7COhdUYvi3NhsNSIoiw9FVzgWKsfEpcgfJ
aICcazAtzQWGCtxj/WFkZMGs3HZNiAuePNkxexxNRv1nWk785uUCr83kCtkE
Mur7/kN7599uiAmRtLTJIqMOVhmVvUO7geuPkYF1DRkZmta8Su7ZDQPJU0Zv
yWTUnqp3SPTtbijLjPSXaySjt/IucqRXu+FLmb/QZAcZNZoXSWpH7YbuttiT
bN/JSCdDLaslcDdMXLeV0JkiI5h6J2J4dzdMigjn3/xFRhTfGX4Ll92wk+La
UL9GRrXPZLnddHfDz5iHF0xZKejFr9KtxDUcvPDP9RwjUJDcUcxXeA4HJu/J
vO8PUlCJf9d69jgOzKQuEUoVKaiId2G5tAcHliMn+i6oUlCuquLPpmIcHH4n
3++sR0GSD8H5VBYO8rUfGR8wpKDs9yYTXYk4+GYW6ddoTKHNY2OXzKNwELpx
kN7JlIIy7W6OfA7EAT3l5+V/5yhIpJDe9uJdHHCu6nI9taKgtKWnQxM3cRCR
PsUVaUOh+Y+E5RUXHNgW/pwyvkhBKYEVHxfscLDgF/98lwMF8Xfpmt05hwOq
qIp4kSMFJe3/0LNpiINclTusx/6joPji3++Z1HDwyvQYo7kbBUX3HGkU3IMD
N9SctHWHQrvPWlAWGw6qiXZlJt4UFHX5HAVPh4PfEytf0nwpKHztTq3SHCd8
q9DqEfGnoCChmhd6bzmBtbwrvyuYguoqTo9ce80Jzo4swy2hFPRL/ztXXBUn
oOtKndXhFCQ64qVdX8IJ13w31bIiKcj0Du7maA4niOlEdwQ+oaDHHDlZzKmc
0H/c/sClpxRUm6XadzCGE6S13ycpx1LQrErXLrNQ2vonm+6VxNHy1XX5sE8A
J1QkUJLK4inorOPG5UwvThhM2DyVl0BBgZtRcS3XOYExs0A3KpGCZvD1qzy2
nMBe0fJKM5mChCln8KrmnFDges+DIYWCTMx+WNgZcsL2zgwz0HCNP3dtsRon
cJuHjgql0eL35U/3KHLCff1Tiq9pWKREg39dhhM2XS0dzqfT+AadfY/xcULN
0j/c7Qxa/PWtYlccLb5wj/oaDc8wxnx5wsgJsgNZz29l0viUKJrDyxwwIy4m
Z/mMgh69Nb22a4YD6k5W+72h4Wrb6XTCGAfE1qxHSWVR0M/f97qMBzlg62/s
+Qc0LBS2559HNwc0/guqHqDhM2JFCqmtHMAqOOEpk01BD6sx+zcUDmBmiTe6
QcNVp/ujp15xAM6Wc7Cchqe/u77BlXBAmfpsyiwNC/r8WzqcwwET2cl0wjkU
ZMwVL2GdwgHla667smjfH+SRzAKecsDLrgtrizS+VxrwKD+EA4SYSrkO0/BU
77lXHf4ccGf1HocLbf8CLrMTy54cwDOilhVN0xsQx3cSOXHAf19Lz1Np+aok
lXg62XDA/GFycystn5OgUxBuxgFMsOjQnEpBp+fcWAd1OKD+r+DVXNp58Z9s
ar8hwgH9o7Z9jLTzPj1s+TdhHwckbfCQ3tPqI+DWvCyFk5YPO7q5sBjaehn8
kWx/2cGookxrnVZf/MplFIVldrjNa/U9J4oW//74/Lmf7MDzsVzYgFaPFevu
Z7IH2OGBvFXOwzAK+hHJFNDWxQ4TeluWe2n1fEAq9eV8Czu8SFbxyaDVu2G9
4theCjugb0Y+YkEUdN+klUfjFTssNs9veARSUPnkBd1Lz9nhFe9eS86HFDTh
t3QrOJsd/n12+hJH6x+DIqH+D9HscKo857Efrb88F7Xc8SHs4FEoe3/Gi4Jy
VC6y+/izQ4ZEuIQRrT+3WrK0Ra6zA0Ua4X670/zrO77UxZAdLj+3GO2l9fsQ
UV+/QZcdmrwsP69eoiCWm67jOHV2MAw2a+Gl+YX9v+f8lQR22JAxIavS/IVX
SClom4kdatqKX6gbURB22VTcZJsNOi/Tixw0oKCrxbfJ2StskLWubb2f5m/N
qtXLeuNsoCBYrjCkTUGL/gORKUNs8LuxiaVci9ZPb/8Q5nrZQOffW5kAdZqe
cxoXY4ANVtWq63gO0/wwzWZzooYNBJJf6I3KU1D3+L14lTI2kM2c33hGoiDC
LXg/nM4GxucWVv+K0/REnVCVucsGe8qb6OS4KYj5k/MHn1tsEGjV/ziLg4IO
C4dc73BlAwa2xDc4FgqKeN6ee9OSDRQNvG52b5MR1naGh6zMBlJnic4Ms2R0
hetmyW45NrBZPpqqM0lGiRYxepek2KDlUgfmO0ZGixP995j3sEGp++DM0AAZ
ZdNbz5gssoLvjFXjuWYy6tK/+zhnihXeMd/qv0wlo79P0sTWvrHCwUlPwpV6
MiIMUBr0P7HCsK/VrZhXZGQuMmKR2skKwcEbAYkvyIhZw7HpRzErBF0s5Pv/
/ejqcT3N14kV6DlXNUIuk5GAMoGHx4YVHnEPoVAb2n24Ova4wJQVJszuSgee
IyOS1zn3fsQKISm/d7nqkdGMj6auvAArMK6Gq/0m0fT5s0+PdbFAI6ezcdOv
BuQWln/4lCoLmH3oKn9h34CEDO0LR+RZoFTRTqzlfAPq4BAQ9pRmAft/18MH
aPPDwchI5hxeFmj+3HhyXrMBzT3x+Lz1ixkerH9Sad7XgK7H6/q/zGKGR7JB
JbmN9cj92bf2/RzMUDR81ch0fz3qL01fNt7FDMUHMB81znqk2mAjELTBBMO7
JWr56OsR3ach15UpJuAC25s1M3UohmOAtbeZCS7njH59TqlD1Z7dJ8PuM0FA
NKmd9XId2joNjVtLjKBllWeIy6tFYRtZ9WODDCDKqb6VSl+DbgVsNNh0M8Dp
P9wDccvVyJrlLGWghQF+sZj3Ro9XI9I+OuisYIAg5d81cS3VqF3RrqUuggHI
plVtA6HViN1FoOepNgNQwoO+kbirUdinmB86hbugWFknyJKrCoVXPuLO9qKH
vNLLkY5bFaj7fA7vpu4ONdEyb0HldinatPcwCVPaoSqVzLzYNitF+CsnogTE
dqgf4M/1ySOl6L7fFJvG9jb1vcSpvxLrJehgliy9X802dfxp2kXDeyUoZKZy
YVt2mzpofS895PFzpHOvuYN+3xb1Hbxct04tQpXZP4LYpjaoFxVunJnayaP5
2ZSXeP8GVRrgK/33PHQg9aeL2psNKp3UkJl+cx66Hztn4Jq6QZUr5esZDcpD
BoGru9+d2aCKS3R7juLy0KgTU2JI7R8qi8ERGxbpXMRJlC5gCVundslreHfc
zEZIWiZJ1Gud6ljtINptkY1uiRNDVRzXqXe/aq8waGajAX65q/9h69Sjmbeo
HCzZKJtdWeHt8ho1d0rP+k1mFlL9dbwm6MIaVTTo06HM4WfIsczxLZPcKnVb
p+Hc5/cZiO7ETZGLgqvUAUabd5nZGSh16N6dWrZV6ukllNrjk4H6mBIlr06u
UAXEEwLvEDOQts07/57MFWp4g6nEYGQ6EmSTV03lXaGWzSgM8dmnoeoM9Scr
dCvUfa/EXYPV0pDpEb1Jo4XfVH3/QQb9PWko5KJ9HF3Hb6pYXe5K89tUtFYV
s+j0+Dc1ouvv2NqRVNTnsF6o+GeZSindSZgVT0HX/zDQhU0uU+mOf91nS5+C
2KK4z4/3L1NP+Vj0Hx1LRtp1RKaE8mWq71/Vt6LZyaiUy+bS3yvLVJzJwgcf
QjIKIQN/69cl6gnLPZfekJIQ4gsLu9C0SJXLbNFqvJmAunAvqnEVi9RnXVP9
7VYJyIap7zv12SI1pGLYVkY3AXmv8GtI3V+kji6/MSZyJ6DyvqLZX6qL1LqJ
O+7/iuPRSZHY5C2bBeqZqHaFibk45ID7smSvvkBlSvy4mjQQh/y3JAxa9i9Q
/e06+dLfxKHaoYrNyL55Kg8ZXxOXEIdIiX0XRPXnqV9wYtnY8Ti0m5tXRPfw
HPUYW0KZWWEsIv2z8sznnqM67Ktv3oyNRXrzWV3s87+ozxUWC/r9Y1FAh5L/
h8Jf1AKiQwneMhYth5wddRT5RY13PMz7H0cs+kT/NDuYbZbqcHxYm/teDMr8
zSXTOTJNlWm7EiPk+xS1t9X90K6fpjbqe1yLcnmKVtIv576Km6Z+mG/9SDz/
FBno14innZqmRvShkZEjT9Famp3Q1cop6tfe7P6zy9HI+GQpD1vwJPWQfbnc
kkc02koy2DouP0FtBcoDy9EoJHN9pb6WdYLa6XDwdRw1Cpkey/A5OD5ObTFv
df2SEYUK55bW9iSNU3VGN1Tu20Yhc93kpe/049Tr7gbvyEOR6Pns1GTAxzFq
NaWlkKMpAn2Cp3krZWNU9SUkYpcegegSNBxdwsaol46G5jt7RSAL7SdjZ9AY
9XroYEEMKQLtij86LFI0SnUR4I3fGxmOXvmx5/hsfKMm3DYoLkBhqCQipNa5
8huVWvJZqJcvDOWlMXeZXftGfVPBvStgLhQlkHdtyI19pe4/LXnLPDkUMb9q
rH0Q8JX6Fr+c/tc2FP0P3d9u0g==
        "]], 
       LineBox[{{-0.21025061845459195`, 
        0.0037384717695123763`}, {-0.20307268830601172`, 
        0.0034255894563660684`}}], 
       LineBox[{{-0.057470361272283894`, 0.}, {-0.05269597823533677, 
        0.}, {-0.047921595198389635`, 0.}, {-0.03837282912449538, 
        0.}, {-0.01927529697670688, 0.}, {-0.012082085739379606`, 0.}}], 
       LineBox[{{-0.44976098740512027`, 
        0.012151086312283463`}, {-0.44548401653100367`, 
        0.01205866243875891}, {-0.4412070456568871, 
        0.011964852894591326`}, {-0.43265310390865397`, 
        0.011772981577010828`}, {-0.41554522041218767`, 
        0.011371491260591182`}, {-0.41126824953807106`, 
        0.011267251033043185`}, {-0.4069912786639545, 
        0.011161399340233906`}, {-0.39843733691572136`, 
        0.010944719574499603`}, {-0.38132945341925506`, 
        0.010490358601749298`}, {-0.37705248254513846`, 
        0.010372141833740476`}, {-0.3727755116710219, 
        0.01025197986880952}, {-0.36422156992278876`, 
        0.010005612854035001`}, {-0.3454419077947389, 0.009434489536947376}}], 
       LineBox[{{-0.13386048986343793`, 
        0.0006732337894169714}, {-0.1290861068264908, 
        0.0005135756862471837}, {-0.12431172378954368`, 
        0.00035966824738744267`}, {-0.11953734075259656`, 
        0.0002119043621947684}, {-0.11553178265325821`, 
        0.00009297111474065814}}], 
       LineBox[{{-0.33855974467808925`, 
        0.009192052159420323}, {-0.3300058029298561, 
        0.008880668098196114}, {-0.3128979194333898, 
        0.008226501794437555}, {-0.2786821524404572, 
        0.006806048279960025}, {-0.25975198840283165`, 
        0.005968384524335672}}], 
       LineBox[{{0.018919767318870132`, 0.}, {0.02369415035581726, 0.}, {
        0.028468533392764388`, 0.}, {0.03801729946665864, 0.}, {
        0.057114831614447144`, 0.}, {0.06188921465139427, 0.}, {
        0.0666635976883414, 0.}, {0.07621236376223565, 0.}, {
        0.08098674679918277, 0.}, {0.0857611298361299, 0.}, {
        0.09053551287307704, 0.}, {0.09530989591002416, 0.}}], 
       LineBox[{{-0.2007018523806977, 
        0.003322807938249616}, {-0.19115308630680344`, 
        0.0029123953113062394`}, {-0.17205555415901494`, 
        0.0021147589016237214`}, {-0.1672811711220678, 
        0.0019216616025287325`}, {-0.1625067880851207, 
        0.0017316373294805145`}, {-0.15295802201122644`, 
        0.0013619907092968482`}, {-0.15024690728426998`, 
        0.0012598350651549465`}}], 
       LineBox[{{-0.10043980860480803`, 0.}, {-0.09566542556786091, 
        0.}, {-0.09089104253091379, 0.}, {-0.08611665949396666, 
        0.}, {-0.0765678934200724, 0.}, {-0.06946122228040663, 0.}}], 
       LineBox[{{-0.1099885746787023, 0.}, {-0.10828180224035232`, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[{{-0.2230815310769417, 
        0.00039639540038487344`}, {-0.21880456020282513`, 
        0.00036114146780290095`}, {-0.21025061845459195`, 
        0.00029505069193585447`}, {-0.20307251065096407`, 
        0.00024418919269620287`}}], 
       LineBox[{{-0.06224474430923102, 
        0.00001060013860439423}, {-0.057470361272283894`, 
        0.000017656599774423908`}, {-0.05269597823533677, 
        0.000024334985374907678`}, {-0.047921595198389635`, 
        0.000030420006462747363`}, {-0.04314721216144251, 
        0.000035682594160109596`}, {-0.03837282912449538, 
        0.00003987931781853022}, {-0.03359844608754826, 
        0.000042751782957917614`}, {-0.02882406305060113, 
        0.00004402600835158153}, {-0.024049680013654005`, 
        0.000043411781610187476`}, {-0.01927529697670688, 
        0.00004060199259881555}, {-0.014500913939759753`, 
        0.00003527194400206335}, {-0.009726530902812627, 
        0.00002707863833235903}, {-0.0049521478658655005`, 
        0.00001566004065633793}, {-0.00043928453609798015`, 
        1.5574010477235593`*^-6}}], 
       LineBox[{{-0.44976098740512027`, 
        0.003678116593696088}, {-0.41554522041218767`, 
        0.003079216448989197}, {-0.41126824953807106`, 
        0.003005700846827019}, {-0.4069912786639545, 
        0.0029325606763110955`}, {-0.39843733691572136`, 
        0.002787496738964609}, {-0.38132945341925506`, 
        0.002502854047456979}, {-0.3454347206704979, 
        0.0019346181628026066`}}], 
       LineBox[{{-0.14340925593733217`, 0.}, {-0.13863487290038506`, 
        0.}, {-0.13386048986343793`, 0.}, {-0.1290861068264908, 
        0.}, {-0.12431172378954368`, 0.}, {-0.11557726234545851`, 0.}}], 
       LineBox[{{-0.33855974467808925`, 
        0.0018278240268643788`}, {-0.3300058029298561, 
        0.0016973816424245864`}, {-0.3128979194333898, 
        0.0014456206366465162`}, {-0.30862094855927324`, 
        0.001384762713245817}, {-0.30434397768515664`, 
        0.001324799899813941}, {-0.2957900359369235, 
        0.0012076833464513407`}, {-0.2786821524404572, 
        0.0009855439132674775}, {-0.27440518156634064`, 
        0.0009327045728399223}, {-0.27012821069222404`, 
        0.0008810025981004867}, {-0.2597329381795812, 
        0.0007602585563776926}}], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}], 
       LineBox[{{-0.2007018523806977, 
        0.0002283213804842376}, {-0.19592746934375058`, 
        0.00019777250615637495`}, {-0.19115308630680344`, 
        0.00016911049029525468`}, {-0.1863787032698563, 
        0.00014233858901499289`}, {-0.18160432023290918`, 
        0.0001174566289140228}, {-0.17682993719596207`, 
        0.0000944608047788393}, {-0.17205555415901494`, 
        0.00007334346922579581}, {-0.1672811711220678, 
        0.00005409291401120346}, {-0.1625067880851207, 
        0.00003669314273180253}, {-0.15773240504817357`, 
        0.00002112363462929306}, {-0.15295802201122644`, 
        7.359099203940476*^-6}, {-0.15024672962922384`, 
        3.3466305054141934`*^-7}}], 
       LineBox[{{-0.09566542556786091, 0.}, {-0.09089104253091379, 
        0.}, {-0.08611665949396666, 0.}, {-0.0765678934200724, 
        0.}, {-0.07179351038312529, 0.}, {-0.06950670197260697, 0.}}], 
       LineBox[{{-0.25729729806987434`, 
        0.0007330078397252855}, {-0.25302032719575773`, 
        0.0006861398659413048}, {-0.24446638544752458`, 
        0.0005962611659036336}, {-0.240189414573408, 
        0.0005533020855780548}, {-0.23591244369929143`, 
        0.0005116963671740421}, {-0.23025759980085328`, 
        0.0004589156501078388}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0]], 
       LineBox[CompressedData["
1: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
wwY=
        "]], 
       LineBox[{{-0.2230815310769417, 
        0.000019075920453249694`}, {-0.21880456020282513`, 
        0.00001444177814469414}, {-0.21452758932870852`, 
        0.000010140259387438453`}, {-0.21025061845459195`, 
        6.171496849925613*^-6}, {-0.20307251065096407`, 
        2.5731822255661175`*^-7}}], 
       LineBox[{{-0.06224474430923102, 
        0.00002553936340023478}, {-0.057470361272283894`, 
        0.000027386308606374476`}, {-0.05269597823533677, 
        0.000028871759150796796`}, {-0.047921595198389635`, 
        0.00002993201425719313}, {-0.04314721216144251, 
        0.00003049970159274847}, {-0.03837282912449538, 
        0.00003050362820332246}, {-0.03359844608754826, 
        0.00002986862636970808}, {-0.02882406305060113, 
        0.00002851539422890165}, {-0.024049680013654005`, 
        0.000026360330999830255`}, {-0.01927529697670688, 
        0.000023315366648371873`}, {-0.014500913939759753`, 
        0.00001928778582176721}, {-0.009726530902812627, 
        0.000014180045877652708`}, {-0.0049521478658655005`, 
        7.889588827946414*^-6}, {-0.00043928453609798015`, 
        7.591805398613347*^-7}}], 
       LineBox[{{-0.44976098740512027`, 
        0.0007805378097406217}, {-0.44548401653100367`, 
        0.0007539267710327933}, {-0.4412070456568871, 
        0.000727784736803113}, {-0.43265310390865397`, 
        0.0006769462308374961}, {-0.41554522041218767`, 
        0.0005812976855768628}, {-0.41126824953807106`, 
        0.0005586871932343869}, {-0.4069912786639545, 
        0.0005366108769235466}, {-0.39843733691572136`, 
        0.0004940829259396922}, {-0.39416036604160476`, 
        0.00047364066922515955`}, {-0.3898833951674882, 
        0.0004537512628373099}, {-0.38132945341925506`, 
        0.00041564138355443215`}, {-0.37705248254513846`, 
        0.00039742397332380035`}, {-0.3727755116710219, 
        0.00037976544441703275`}, {-0.36422156992278876`, 
        0.00034612075202757465`}, {-0.3454347206704979, 
        0.0002799382518720942}}], 
       LineBox[{{-0.13386048986343793`, 0.}, {-0.1290861068264908, 
        0.}, {-0.12431172378954368`, 0.}, {-0.11557726234545851`, 0.}}], 
       LineBox[{{-0.33855974467808925`, 
        0.0002548415048229856}, {-0.3300058029298561, 
        0.00022529779485991024`}, {-0.32572883205573955`, 
        0.00021125113737022669`}, {-0.32145186118162294`, 
        0.00019769504443283906`}, {-0.3128979194333898, 
        0.0001720727563865269}, {-0.30862094855927324`, 
        0.00016001426336540063`}, {-0.30434397768515664`, 
        0.00014846167270742643`}, {-0.2957900359369235, 
        0.0001268827121061636}, {-0.29151306506280694`, 
        0.00011685884965235379`}, {-0.28723609418869034`, 
        0.00010734582791189437`}, {-0.2786821524404572, 
        0.00008984878136409933}, {-0.27440518156634064`, 
        0.00008186084176733968}, {-0.27012821069222404`, 
        0.00007437582511521036}, {-0.26585123981810743`, 
        0.00006738942067301385}, {-0.2597329381795812, 
        0.000058251192054274646`}}], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}], 
       LineBox[{{-0.2007018523806977, 0.}, {-0.19592746934375058`, 
        0.}, {-0.19115308630680344`, 0.}, {-0.1863787032698563, 
        0.}, {-0.18160432023290918`, 0.}, {-0.17205555415901494`, 
        0.}, {-0.1672811711220678, 0.}, {-0.1625067880851207, 
        0.}, {-0.15295802201122644`, 0.}, {-0.15024672962922234`, 0.}}], 
       LineBox[{{-0.10043980860480803`, 
        4.292325438801609*^-6}, {-0.09566542556786091, 
        7.133164721433048*^-6}, {-0.09089104253091379, 
        0.000010006267559912559`}, {-0.08611665949396666, 
        0.000012872500618340161`}, {-0.08134227645701952, 
        0.000015690086021127782`}, {-0.0765678934200724, 
        0.000018414487801411176`}, {-0.07179351038312529, 
        0.00002099829437130743}, {-0.06950670197260697, 
        0.000022171437865671975`}}], 
       LineBox[{{-0.25729729806987434`, 
        0.00005489002456912268}, {-0.25302032719575773`, 
        0.00004936307959628461}, {-0.24874335632164116`, 
        0.00004430673552058618}, {-0.24446638544752458`, 
        0.00003971103559104635}, {-0.240189414573408, 
        0.000035564730401611724`}, {-0.23591244369929143`, 
        0.00003185521902095692}, {-0.23025069735246148`, 
        0.00002744916808508048}}], 
       LineBox[{{-0.1099885746787023, 0.}, {-0.10832728193255264`, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.6666666666666666, 0.6666666666666666]], 
       LineBox[CompressedData["
1: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
u82yF8+d+0JrZ5ZPZNkmBf8DU5NZ7g==
        "]], 
       LineBox[{{-0.21025061845459195`, 0.}, {-0.20307251065096407`, 0.}}], 
       LineBox[{{-0.06224474430923102, 
        4.971805883748768*^-6}, {-0.057470361272283894`, 
        5.234173942296824*^-6}, {-0.05269597823533677, 
        5.430717542412874*^-6}, {-0.047921595198389635`, 
        5.55172212793328*^-6}, {-0.04314721216144251, 
        5.586930440932468*^-6}, {-0.03837282912449538, 
        5.525520767934433*^-6}, {-0.03359844608754826, 
        5.356084449934195*^-6}, {-0.02882406305060113, 
        5.06660263369969*^-6}, {-0.024049680013654005`, 
        4.644422241178238*^-6}, {-0.01927529697670688, 
        4.076231133168097*^-6}, {-0.014500913939759753`, 
        3.348032442733698*^-6}, {-0.009726530902812627, 
        2.445118053142109*^-6}, {-0.0049521478658655005`, 
        1.352041194378966*^-6}, {-0.00043928453609798015`, 
        1.2939096666599613`*^-7}}], 
       LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAePz6TuLI3L8k3mMBBdEgP3AMeWTP
gty/BVE5YnT1Hz9pHPd5vDzcv3PBTFBTVh4/WjzzpJaw279/bpSo9kAbPzx8
6/pKmNq/qBjFR6O8FT80jGkQOFLav553a8KZfhQ/LZznJSUM2r9rcpjMoU4T
Px6841D/f9m/Kvz+3NMYET8WzGFm7DnZvzjFZTXlEhA/D9zfe9nz2L/XUYI/
rDUOPwD826azZ9i/+ysoy7WnCj/4C1q8oCHYv39eQm88CQk/8RvY0Y3b178J
ltydPoUHP+orVud6lde/HyPAL0MbBj/iO9T8Z0/Xv2pxIlm/ygQ/2ktSElUJ
178/f2vYFZMDP9Jb0CdCw9a/XkXcHZZzAj/Ka049L33Wv7Gw32t7awE/F7EL
O5ob1r+Zw24tDiEAPzhqlKs=
        "]], 
       LineBox[{{-0.13386048986343793`, 0.}, {-0.1290861068264908, 
        0.}, {-0.12431172378954368`, 0.}, {-0.11953734075259656`, 
        0.}, {-0.11557726234545854`, 0.}}], 
       LineBox[{{-0.33855974467808925`, 
        0.000026448833907221896`}, {-0.3300058029298561, 
        0.00002151747371363553}, {-0.32572883205573955`, 
        0.000019241776351324866`}, {-0.32145186118162294`, 
        0.0000170933809386663}, {-0.3128979194333898, 
        0.000013179408788745833`}, {-0.30862094855927324`, 
        0.00001141382771196509}, {-0.30434397768515664`, 
        9.775520378886512*^-6}, {-0.30006700681104004`, 
        8.263979321218768*^-6}, {-0.2957900359369235, 
        6.8784761398343624`*^-6}, {-0.29151306506280694`, 
        5.618050478605399*^-6}, {-0.28723609418869034`, 
        4.481498612596169*^-6}, {-0.28295912331457374`, 
        3.467361639179117*^-6}, {-0.2786821524404572, 
        2.5739132603301322`*^-6}, {-0.27440518156634064`, 
        1.799147144046027*^-6}, {-0.27012821069222404`, 
        1.1407638524998675`*^-6}, {-0.26585123981810743`, 
        5.96157324220224*^-7}, {-0.2597329381795812, 8.992374327981264*^-9}}], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}], 
       LineBox[{{-0.2007018523806977, 0.}, {-0.19115308630680344`, 
        0.}, {-0.17205555415901494`, 0.}, {-0.15024672962922242`, 0.}}], 
       LineBox[{{-0.09566542556786091, 
        2.003606802136887*^-6}, {-0.09089104253091379, 
        2.4960775096027603`*^-6}, {-0.08611665949396666, 
        2.9772125615785775`*^-6}, {-0.08134227645701952, 
        3.4405445997671328`*^-6}, {-0.0765678934200724, 
        3.879196991898845*^-6}, {-0.07179351038312529, 
        4.285866651197694*^-6}, {-0.06950670197260697, 
        4.467072889448592*^-6}}], 
       LineBox[{{-0.25729729806987434`, 0.}, {-0.25302032719575773`, 
        0.}, {-0.24874335632164116`, 0.}, {-0.24446638544752458`, 
        0.}, {-0.240189414573408, 0.}, {-0.23591244369929143`, 
        0.}, {-0.23022990754469116`, 0.}}], 
       LineBox[{{-0.1099885746787023, 
        5.170599879745629*^-7}, {-0.10832728193255264`, 
        6.871154036501246*^-7}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.5, 0]], 
       LineBox[CompressedData["
1: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
tzvfXjI6nfTd0MfpR9ViQITVLjL++mkCtcNs4DO6nTgHZHQRBC1NDptH5+am
6JDRd1xU9hGnv/GdL9gGmmQ8H/s6jszhnvVdDd83k3GFJhftCkcfo4+qa9VU
yfhK3Oc4m6OfWZXMV4EMMp70WmW0g6MvrqfX8YUCGbfqFw1X9HH6o+35XFCW
o498N00mR58UtKy0kiJjY7c56V43Z36NNCoSKZz6aT+0n+foe6v13yLGSjLe
3KDsUNzFBr3Ovie+AmQMTb+ZtJwzH2aH6/LYvGT8zag1PcCZHyePmKw9f0ho
bNkf9quNDTevyCW4D5Ew4vX7V9R3nHwE+O8V95FwbHvPjiNvOHqOGr09/4WE
PX7VEdmc+axIenoj4j0J7fR+NKrXcvQlmxj+XzMJTeNW3T//muNf2SHXJN+Q
sFrWevwFZ777Sowu5r4goXOncZopZ/7HtJSDJ6tIeJ/+bOgWxx/mqkUCt7FI
WJMeq//gGRt4DKfPXC4lYY6evP8/jr8Iv+n0aygg4aeFRG+bcjZQrZ77rM4j
YXdZCy2N409yHRme9g9JaJJnHdbP8S/Nfo/j3++T0KM66o09x9/03S2OqcWT
cPexKsdbOZx6jG85GhhLwlRDhZ9VD9ngvLBoLxhBwhX7j4+JpXPqIR69l3GW
hL3gqvyY47fxiadNfH1J2N8u8rWZ48cPZA4Ysz1J2LflUN50FKceyuv19hwj
4U+pS8oQwcnXoFTd3ZKEpV0f/dtD2PCjIV6t2JSEyj3f6AtBbPhtEaw6b0TC
5ZttDq8L4OTbflRZT5+Ejzqrs1dx7o+Vjob0iB0ktBRR5zHk3C8SfQzaf1ok
bF3mZevnxcnXbZWcpDoJBRu878e7s0HLv0Mql0lCf8uuzndObIjKWuD5vozT
j7mHa8X02fCrxdn+MhcJO4b8ltnrcvxlqaFQclEch6QMd6Zrc86zS3A0+SWO
s1dNozdtYUMZv0b5415xvEKm+TsosOGzh7e7d7U4LmT21cVx7mO9+A/E8kpx
1PPNKB3+y4LsV9spaWXiOGy+/prGHxacWrviVXO+OP72+PHx5QQLeJserVW7
L46mARcOE19YwFTrbf51ThyVGoevlFSwIPrQbsWbp8XRYMmKOVvCgumIwmAF
H3FUzzrF0ClgQXVfCGPfcc75nrqH67NYYHV3TWi5rTh+OStptI/zXinHyx/N
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
zOZQsxmNad3/AYbP5G0=
        "]], 
       LineBox[{{-0.21025061845459195`, 0.}, {-0.2030726883060117, 0.}}], 
       LineBox[{{-0.057470361272283894`, 0.}, {-0.05269597823533677, 
        0.}, {-0.047921595198389635`, 0.}, {-0.03837282912449538, 
        0.}, {-0.01927529697670688, 0.}, {-0.012082085739379606`, 0.}}], 
       LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAePz6TuLI3L+IfeDBQ4nwPnAMeWTP
gty/F/DgAqhr7j5pHPd5vDzcv/To0i1D4es+WjzzpJaw279j5E23uSLnPlJM
cbqDatu/m5mMOufu5D5LXO/PcCTbv/6uMLIy2OI+PHzr+kqY2r/020RQuATe
PjSMaRA4Utq/aqNNgXaG2j4tnOclJQzav5z/x7NyQtc+JqxlOxLG2b8vpeJF
cjjUPh6841D/f9m/HuJwdiBo0T4WzGFm7DnZv+v99Cwaos0+D9zfe9nz2L8R
ZSxeVuXIPgjsXZHGrdi/QHdrNp+YxD4A/Nums2fYv3GXECpfusA++AtavKAh
2L8p71XafJG6PvEb2NGN29e/4OzBtD+DtD7qK1bnepXXvxizBPt2iq4+4jvU
/GdP179tTMwmGqSlPtpLUhJVCde/AuO1AcuOnD7SW9AnQsPWv9527JQUzpA+
ymtOPS991r9YzAV8/qJ/Pi1cKWC4G9a/qkX7XvfICD5zKsvL
        "]], 
       LineBox[{{-0.13386048986343793`, 0.}, {-0.11553178265326344`, 0.}}], 
       LineBox[{{-0.33855974467808925`, 0.}, {-0.33428277380397264`, 
        0.}, {-0.3300058029298561, 0.}, {-0.32572883205573955`, 
        0.}, {-0.32145186118162294`, 0.}, {-0.3128979194333898, 
        0.}, {-0.30862094855927324`, 0.}, {-0.30434397768515664`, 
        0.}, {-0.2957900359369235, 0.}, {-0.2786821524404572, 
        0.}, {-0.27440518156634064`, 0.}, {-0.27012821069222404`, 
        0.}, {-0.25978015153355355`, 0.}}], 
       LineBox[{{0.018919767318870132`, 0.}, {0.02369415035581726, 0.}, {
        0.028468533392764388`, 0.}, {0.03801729946665864, 0.}, {
        0.057114831614447144`, 0.}, {0.06188921465139427, 0.}, {
        0.0666635976883414, 0.}, {0.07621236376223565, 0.}, {
        0.08098674679918277, 0.}, {0.0857611298361299, 0.}, {
        0.09053551287307704, 0.}, {0.09530989591002416, 0.}}], 
       LineBox[{{-0.2007018523806977, 0.}, {-0.19115308630680344`, 
        0.}, {-0.17205555415901494`, 0.}, {-0.15024690728427004`, 0.}}], 
       LineBox[{{-0.24446638544752458`, 0.}, {-0.2231694072417973, 
        0.}, {-0.21786947727628228`, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
fxD5w/8O+epZU/8Heq9kLA==
        "]], 
       LineBox[{{-0.21025061845459195`, 0.}, {-0.2030726883060117, 0.}}], 
       LineBox[{{-0.057470361272283894`, 0.}, {-0.05269597823533677, 
        0.}, {-0.047921595198389635`, 0.}, {-0.03837282912449538, 
        0.}, {-0.01927529697670688, 0.}, {-0.012082085739379606`, 0.}}], 
       LineBox[{{-0.4583149291533534, 0.}, {-0.4540379582792369, 
        0.}, {-0.44976098740512027`, 0.}, {-0.44548401653100367`, 
        0.}, {-0.4412070456568871, 0.}, {-0.43265310390865397`, 
        0.}, {-0.41554522041218767`, 0.}, {-0.41126824953807106`, 
        0.}, {-0.4069912786639545, 0.}, {-0.39843733691572136`, 
        0.}, {-0.38132945341925506`, 0.}, {-0.3454419077947389, 0.}}], 
       LineBox[{{-0.13386048986343793`, 0.}, {-0.11553178265326344`, 0.}}], 
       LineBox[{{-0.33855974467808925`, 0.}, {-0.3300058029298561, 
        0.}, {-0.3128979194333898, 0.}, {-0.2786821524404572, 
        0.}, {-0.25975198840283165`, 0.}}], 
       LineBox[{{0.018919767318870132`, 0.}, {0.02369415035581726, 0.}, {
        0.028468533392764388`, 0.}, {0.03801729946665864, 0.}, {
        0.057114831614447144`, 0.}, {0.06188921465139427, 0.}, {
        0.0666635976883414, 0.}, {0.07621236376223565, 0.}, {
        0.08098674679918277, 0.}, {0.0857611298361299, 0.}, {
        0.09053551287307704, 0.}, {0.09530989591002416, 0.}}], 
       LineBox[{{-0.2007018523806977, 0.}, {-0.19115308630680344`, 
        0.}, {-0.17205555415901494`, 0.}, {-0.15024690728427004`, 
        0.}}]}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-13.815510557964274`, Automatic}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.12}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-13.815510274069974`, 0.09530989591002416}, {0., 
        0.11577016129161738`}}, {{-13.815510274069974`, 
        0.09530989591002416}, {0., 0.11577016129161738`}}}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)dN/dx \"", 
         TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.12}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"n=1\"", "\"n=2\"", "\"n=3\"", "\"n=4\"", "\"n=5\"", "\"n=6\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    1, 0.6666666666666666, 0.6666666666666666]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.4444444444444444, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.6666666666666666, 0.6666666666666666]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.639074931265847*^9, {3.639074993996307*^9, 3.639075126508544*^9}, {
   3.6390751652623243`*^9, 3.639075298714778*^9}, {3.639075331043693*^9, 
   3.6390755160311527`*^9}, {3.639076375523621*^9, 3.639076401822846*^9}, 
   3.6390767166598787`*^9, {3.6442574366310177`*^9, 3.644257640914957*^9}, {
   3.644257708990077*^9, 3.6442577371366043`*^9}, {3.644260004751333*^9, 
   3.644260077952415*^9}, {3.644260115987558*^9, 3.644260126350301*^9}, {
   3.644260188124305*^9, 3.644260218133224*^9}, {3.6442602591886263`*^9, 
   3.644260302050921*^9}, 3.644316648114072*^9, 3.644576451074027*^9, 
   3.644576487542392*^9, {3.644576549658166*^9, 3.644576621616087*^9}, {
   3.644576764562796*^9, 3.6445767820862637`*^9}, 3.6445768574554853`*^9, 
   3.644576945003827*^9, {3.644577113369245*^9, 3.644577140083241*^9}, {
   3.644577753012301*^9, 3.644577802627615*^9}, {3.6445780569311028`*^9, 
   3.644578103866412*^9}, {3.644578289753704*^9, 3.644578315580659*^9}, 
   3.6445783615710917`*^9, {3.644580938831132*^9, 3.644580960697556*^9}, {
   3.644583691767996*^9, 3.644583700885569*^9}, 3.6445837471615887`*^9, 
   3.644583847010324*^9, 3.644583892827443*^9, 3.644583928512251*^9, 
   3.644585111858407*^9, {3.644585173229665*^9, 3.64458519082297*^9}, 
   3.644585513469898*^9, 3.6445863990953827`*^9, 3.644597859482862*^9, 
   3.64459793577026*^9, 3.6569749437404423`*^9, 3.6569800300558558`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Positron Cascade Spectra of Final State ",
 StyleBox["b",
  FontSlant->"Italic"],
 "-quarks for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "f"], "=", "0.06"}], TraditionalForm]]]
}], "Section",
 CellChangeTimes->{{3.6390630204859133`*^9, 3.639063025852809*^9}, {
  3.639076336932643*^9, 3.6390763661398563`*^9}, {3.644597670763866*^9, 
  3.644597688717393*^9}}],

Cell[TextData[{
 "In this example we load the positron spectrums of 1-6 step cascade step DM \
annihilations terminating in ",
 StyleBox["b",
  FontSlant->"Italic"],
 "-quarks for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "f"], "=", "0.06"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". As this value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "f"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " isn\[CloseCurlyQuote]t one of those provided, we use linear interpolation \
to get to this value, which results in a slightly bumpy spectrum."
}], "Text",
 CellChangeTimes->{{3.6445976000873127`*^9, 3.644597637650031*^9}, {
  3.644597777558477*^9, 3.644597832058378*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "BaseDir", ",", "load", ",", "\[Epsilon]vals", ",", "\[Epsilon]", ",", 
   "xvals", ",", "flux", ",", "loadspec1", ",", "loadspec2", ",", "loadspec3",
    ",", "loadspec4", ",", "loadspec5", ",", "loadspec6", ",", "dNdx1", ",", 
   "dNdx2", ",", "dNdx3", ",", "dNdx4", ",", "dNdx5", ",", "dNdx6"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BaseDir", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"load", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"BaseDir", "<>", "\"\<Spectra/Cascade_B_positrons.dat\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]vals", "=", 
   RowBox[{"load", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;", 
       RowBox[{
        RowBox[{"Dimensions", "[", "load", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.06"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xvals", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"load", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", ";;", 
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "2"}], "]"}], "]"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "3"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec1", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Epsilon]vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"xvals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"flux", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", "load", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], ",", 
     
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx1", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec1", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec1", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "4"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec2", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Epsilon]vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"xvals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"flux", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", "load", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], ",", 
     
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx2", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec2", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec2", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "5"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec3", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Epsilon]vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"xvals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"flux", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", "load", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], ",", 
     
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx3", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec3", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec3", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "6"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec4", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Epsilon]vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"xvals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"flux", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", "load", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], ",", 
     
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx4", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec4", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec4", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "7"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec5", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Epsilon]vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"xvals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"flux", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", "load", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], ",", 
     
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx5", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec5", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec5", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "8"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec6", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Epsilon]vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"xvals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"flux", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", "load", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], ",", 
     
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx6", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec6", "[", 
            RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec6", "[", 
           RowBox[{"\[Epsilon]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx1", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx2", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx3", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx4", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx5", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx6", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.06"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)dN/dx \>\""}],
      "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Purple", ",", "Blue", ",", 
      RowBox[{"Darker", "[", "Green", "]"}], ",", 
      RowBox[{"Lighter", "[", "Pink", "]"}], ",", "Orange", ",", "Red"}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<n=1\>\"", ",", "\"\<n=2\>\"", ",", "\"\<n=3\>\"", ",", 
      "\"\<n=4\>\"", ",", "\"\<n=5\>\"", ",", "\"\<n=6\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.638539003567604*^9, {3.63853912444792*^9, 3.638539127218301*^9}, 
   3.639056012020714*^9, {3.639061226178513*^9, 3.639061230000971*^9}, {
   3.6390626177280293`*^9, 3.639062624597332*^9}, {3.63906296534056*^9, 
   3.639062980297701*^9}, {3.639063055035693*^9, 3.6390631177028913`*^9}, {
   3.6390631611248693`*^9, 3.6390632086441917`*^9}, {3.639063255187817*^9, 
   3.639063372221395*^9}, {3.639063453287771*^9, 3.639063453456121*^9}, {
   3.639065249443858*^9, 3.639065249635944*^9}, {3.639065298154196*^9, 
   3.6390653719402437`*^9}, {3.639065422048918*^9, 3.6390654312306767`*^9}, {
   3.639065516186607*^9, 3.6390655534937763`*^9}, {3.6390662025372047`*^9, 
   3.639066307136261*^9}, {3.639066415538189*^9, 3.63906644737391*^9}, {
   3.63906695110944*^9, 3.63906695878749*^9}, {3.63906754287934*^9, 
   3.639067542949849*^9}, {3.639067579548677*^9, 3.639067606031039*^9}, {
   3.639067650511935*^9, 3.639067650589734*^9}, {3.639074796825118*^9, 
   3.6390748073267813`*^9}, {3.6390748438453493`*^9, 3.639074846996669*^9}, {
   3.6390749186703053`*^9, 3.639074953027285*^9}, {3.6390750100090322`*^9, 
   3.639075125887274*^9}, {3.6390751643031473`*^9, 3.639075298122554*^9}, {
   3.639075328947755*^9, 3.639075515143014*^9}, {3.63907635788829*^9, 
   3.639076401263814*^9}, 3.644257377150648*^9, {3.644257434361697*^9, 
   3.644257640256255*^9}, {3.644257707534048*^9, 3.644257735875279*^9}, {
   3.6442600032445927`*^9, 3.644260076895362*^9}, {3.6442601126335287`*^9, 
   3.644260125127042*^9}, {3.644260206635504*^9, 3.644260216755534*^9}, {
   3.644260257841144*^9, 3.644260300439433*^9}, {3.644576371341427*^9, 
   3.644576438767619*^9}, {3.644576479640806*^9, 3.644576479920644*^9}, {
   3.64457654220582*^9, 3.644576615392721*^9}, {3.644576776040201*^9, 
   3.6445767991854687`*^9}, {3.644576834719887*^9, 3.6445768523652887`*^9}, {
   3.6445769381615953`*^9, 3.644576938607382*^9}, {3.6445771076003437`*^9, 
   3.644577147245116*^9}, {3.644577743925811*^9, 3.6445777948429527`*^9}, {
   3.644578047110093*^9, 3.644578096858204*^9}, {3.6445782810736*^9, 
   3.6445783067921886`*^9}, {3.6445783514558153`*^9, 3.644578351709989*^9}, {
   3.644580871103026*^9, 3.6445809542044983`*^9}, {3.644583694406518*^9, 
   3.6445836945720377`*^9}, {3.64458372703931*^9, 3.6445837383126783`*^9}, {
   3.64458377711351*^9, 3.644583837531001*^9}, {3.6445838746916313`*^9, 
   3.6445839220568733`*^9}, {3.644585052730834*^9, 3.6445851006510973`*^9}, {
   3.644585166144863*^9, 3.6445851833791313`*^9}, 3.6445863844322357`*^9, {
   3.644597692813653*^9, 3.644597756499536*^9}, 3.656974927480833*^9, {
   3.656980006348371*^9, 3.65698000687496*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.5, 0, 0.5]], 
       LineBox[CompressedData["
1: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
ee8UccJLxRflPxNGxU1nz7Ur4n7JxtAm88+EYYFXH7xVRFcsexcQ8JnQv36P
MtykiLnSnekdbz8TWyO1rba+VMRAhRexhaH9hID9/oL6e4rYPLNfO3TgCzHE
7K47nqiI36dNxe/3fif2SJ/NSo5XxC3fHDa/ZR4gCndeXNp6hbZuNTj1TXaA
OHo2tjogShG51BM63I4PEJ1dd3QZgxRxZZO65pf2AeJl/oiupLsi2kjOzFjU
DBI5Wqf0bAlFFKvQ30yq/UEsmvlkL+krYo6x744dX34Qth5By7k7FZH3xoxu
1MYPgpQdXzOorYjWvxnJl/YNE3HrZXo+aop43MJaVvzdMHGxZVwvSVgRnzTP
kzSnRwgrp9M7cU4BJx1V9nVeHCf6W7c3Jc8oYLbdg4/deeOEp+66tf1vBfz+
Jdlj5dU4EUZKP/v7pwK+jyii/4/3J0F+9bRIfFAB6YyPDVIrfxLrivTMIe8U
MHrQ5I4H1yRRMZ3VrXlPARsOHfN/MDVF6Di6Oq9TFHC672OrpsRvAltUf7WU
KeAxzYcj381/E723XzC5lCigNqPxmOnD3wSd7Q+9tFwFxPJp5ImaJuxrthZN
JCjgmyxuIvDmDLEp+vWZEg8FdLeclNE4MUe0f9LkD3VTwMvzBu4fwuaIm1qF
tVauCpjzy1K+JHeOUB4OZNtwVMCLe+m6yj7OEYdMlMscbBVQibTq52b3h7jJ
lTzEtU8Bq6ot45Md5gmVXKujwdI0+4cXw5viF4m5uTo6S0kFjPti/PrS/UWi
zkylXEFcAa+PJ5x3f79IWKzTL3ULKaC5S9/Vaqklws/lcaY6jwL2yeW5hNYu
EXWKgp1D6/IYzGfSare8TFg87jc+1C+Pb761hJdX/yWCVR8Mz3+Ux5AFi8M7
J/4SxbejLuf3yWPEpdLNXBJrxOJVhZeTXfJYFym5HB6zRhSe9dFJapHH8/+W
Y0Jt1olpBUb55qfyaMHWttCw6R+Rnq1KvzddHld3cs0retFDLc964XiqPKbS
z3+eiKeH4bh3BunJ8ijuOfzxYxk96AVcDP4eJ486cw09WuP0MHD45XREhDxW
zS7IBJxhAE0O62+1p+Xxu87bp+WJjNAdEfJc20ge3ZqCCJXfTKBiyhW3aZ88
Fs8c2NvAzwxRfLetevbIo9GOl8Hu+sywtaxlxN9AHoVDXbVtk5khuVOI9Hi7
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
2v4OJDVLPzk+xIdJ0st7PE/cgbNt7cD+jQ819d1N3nvfAYuu0Lc1n/jw32Hi
a2bQHdDoU7I/1cuHHXs3PpOu3AHe/p4hgS4+dAiu8jDKuAM9w1tX/Vr4sFI2
IrXz7h2o+tl/RaaRD1WcA83kau5A1u8E3k4qH+6YXP+g2HgHji0PKatX82GC
5NE9ev13YIAjy36slA+fDLLfOMBUCq9I+3/cuM2HClqtB8a5S6FEYPb8/gI+
DJX9UK4oXAqeUmZxtzP58EFHuXSISimYyi/zWqXz4eDMpksJmqWgqlJasJHM
h6TIDO6tO0thSuvfk+MxfOj4nH9I06QUOnTv7WGP5MPXEzJCyYdKodLgaFtN
KB+qm5q4+dqUQsZeZodTgXy44HxV/rtDKVw0fvxDwI8PP/37fb/nRCnYmbn4
NJ7jw/BiUROLk6Wga8X118+bD8MinygFnikF4SO1cTIefOhVLMDAFVIKq0dP
8XW68GG0aDvYxZXCF6fNhZcc+TB2a1a/5fVSeOFWr6LuwIfcGieal4pKIeqc
2N4kSz40ts5ROVhTCif9Wtr0zPjwyrkMu5mGUtgfFOAwZsyHid0mewzelQJL
9Duf/QQfnhM5ZVk3XArjV8L/zu3kQ0qj9ffJ36XQmqQSf1uH5s+LJ3Q1y6WQ
lhlTuLGFD61iNjuLc5DBN0dD9b4yH15+vvL0IT8ZDhd+fXpcng/9nfq6esXI
sLlct71GjA9/F34W6lQlw+K9YYdTQnxoa+rPXKRJhg//XRsW4OfDp1bXDRd1
yVBTRfg2cvNhikQw3/vdZMh9PvnXj50Pq0YGK7X2kSEcs+NlmPlwV864OZ8p
GU68NuLvpOdDV41ONh9zMhCtc4WX1nmR2eXLhpEVGaTfFamqr/Ciwn9yupk2
ZGDoMa/qn+fFIpbg4OcOZPjxcWVv0gwvpr8tPMviSYbGr+R2vV+86O49eGvd
jwzkIZujY2O8+Pjb0EheJBnUF1kSbvfR8MRYYfADMnTqRtPNdfEiB5SyydWS
4WLIarBhOy+a3Sw2O/KaDLVrv7x/NPDiZguNR/s/k8GJ8BzaTuXFfUouLn9/
kIE+6vux2FpeFJS5ubxligymjN1mCv/xYvdPK5s/62T4td+sMeAeL66Oo3w0
UxlcjWs0aCrjxReyqethnGWg1bL7qWAJLx7q6zUY4CuDPrZq9VOFvChkJKtZ
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
qEg=
        "]], 
       LineBox[{{-0.5664794027416444, 
        0.00168242084638239}, {-0.5573124418145786, 
        0.001630137735889673}, {-0.5527289613510458, 
        0.001602769011659328}, {-0.5481454808875128, 
        0.0015745614657450182`}, {-0.5389785199604471, 
        0.0015155662543764696`}, {-0.5206445981063157, 
        0.0013867950773980113`}, {-0.5160611176427828, 
        0.0013522572559239703`}, {-0.51147763717925, 
        0.0013167463598062088`}, {-0.5023106762521843, 
        0.0012427329317871317`}, {-0.4839767543980529, 
        0.0010822160702854905`}, {-0.4796997835239363, 
        0.0010422721508994432`}, {-0.4754228126498197, 
        0.0010013492124258138`}, {-0.4711458417757032, 
        0.0009594306330408774}, {-0.4668688709015866, 
        0.0009164995420899509}, {-0.46259190002746997`, 
        0.0008725388165804448}, {-0.46095910126398604`, 
        0.0008554809381438464}}], 
       LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAtJvIffaq1b+kwpdswDE4P6yrRpPj
ZNW/lXPgMqnPNz+lu8So0B7Vv6dQhRPGajc/h/u8/oQG1L/RhNWKQ7o1P0t7
rart1dG/zfrNck3DMT9EiyvA2o/RvwwNj6VLNTE/PJup1cdJ0b890JHxuqMw
Py27pQCivdC/Mj78wVzrLj8myyMWj3fQv/GG72clsi0/HtuhK3wx0L8PCUH7
UHEsPx72O62sSs+/oosTWUzYKT8PFjjYhr7Ov6/4TZ3Yfyg/ADY0A2Eyzr+V
hMO+QB8nP/FVMC47ps2/WJBjtGG2JT/idSxZFRrNv9IKsP3NByU/05UohO+N
zL+H5klfTbIkP8S1JK/JAcy/V6KAKF1aJD+l9RwFfunKvyDbxNkBoyM/bKuc
lwtNyr8ezgahOTgjPzRhHCqZsMm/82ecpS7KIj/CzBtPtHfIv3rF/w0P5CE/
36MameoFxr+XDXSLoNsfP6ZZmit4acW/e1OJfTXOHj9uDxq+Bc3EvxWvBrgw
uR0//HoZ4yCUw78pgM6ixHcbPxlSGC1XIsG/eRYnFymTFj/gB5i/5IXAv0Ph
/k27RBU/T3svpOTSv7+whvE8eO0TP97mLsn/mb6/jnZLbDWNEj+A7RHWn5G9
v9pg1cVuXBE/1HXxAg==
        "]], 
       LineBox[{{-0.4540379582792369, 
        0.0008322277586491993}, {-0.44976098740512027`, 
        0.0008194928857070383}, {-0.44548401653100367`, 
        0.000806391835472209}, {-0.4412070456568871, 
        0.0007929181463437158}, {-0.43265310390865397`, 
        0.00076482651195674}, {-0.41554522041218767`, 
        0.0007038761779124588}, {-0.41126824953807106`, 
        0.0006876046534838699}, {-0.4069912786639545, 
        0.0006709051376429144}, {-0.39843733691572136`, 
        0.0006361924260093668}, {-0.38132945341925506`, 
        0.000561298003161598}, {-0.37705248254513846`, 
        0.0005413890262752493}, {-0.3727755116710219, 
        0.0005209896544501387}, {-0.36422156992278876`, 
        0.00047868625335215374`}, {-0.35994459904867215`, 
        0.0004567651738106733}, {-0.35566762817455555`, 
        0.0004343195952481821}, {-0.35139065730043895`, 
        0.0004113406705588489}, {-0.3471136864263224, 
        0.00038781942057252306`}, {-0.345387516836802, 
        0.0003794458811641348}}], 
       LineBox[{{-0.1099885746787023, 
        0.00006367304205251132}, {-0.10521419164175516`, 
        0.00006163784971190166}, {-0.09566542556786091, 
        0.000057393260983119126`}, {-0.09089104253091379, 
        0.000055181637459982944`}, {-0.08611665949396666, 
        0.00005290894521581869}, {-0.0765678934200724, 
        0.00004817569193983402}, {-0.057470361272283894`, 
        0.000037923966483691075`}, {-0.05269597823533677, 
        0.00003519018103573096}, {-0.047921595198389635`, 
        0.00003238547895329933}, {-0.03837282912449538, 
        0.000026558002556230993`}, {-0.03359844608754826, 
        0.000023532511697809004`}, {-0.02882406305060113, 
        0.000020430670421345364`}, {-0.01927529697670688, 
        0.000013992252281190522`}, {-0.014500913939759753`, 
        0.000010652774316809861`}, {-0.009726530902812627, 
        7.23114299374624*^-6}, {-0.0049521478658655005`, 
        3.7258471543470363`*^-6}, {-0.00043928453609798015`, 
        3.3425405544114843`*^-7}}], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJwVV3c81W8btsk8w4rsPfvRIHRuJCOSUBFJiewKWUmKkMree55ziLRQSudO
omSFNGgRSjappHrP+9f5XJ/vvZ/rec51yx09Ye/JxsLC0sPOwvL/39OH1qUm
lWmgZ3F5lmtYFcVGY+6gS4kG+vNcNrlaVEWR/zWopFmkgT4O7geXH1dRejJL
73fnamCTsrKmF5FKUe7SmySkaqCxPs/Ft9eplNcGXpScaA08RR0bJS/TKAbi
j6crXDTQdLfX2tUbNRTCBL0pxFkDH9cZ1Qd/qKFM3E6+sPOABpqUf3uZJ3iN
kr7noPikvQZuS/rbRAu4RvkWv7BDfZcGGtSM8DzXrqUUfpcpuKGvgVVfxymb
W+oo//qjrFpENDBhLUImOPUGZSvjKe9hsgYyUksGcutvUAKvCXexEDXwkP5h
kW89NygjsbW2Zvwa+MzLw0RE8Cbl7uYRh+dsGniz/t/nc8k3KSezDd3ezKmj
wfUmI8XcW5RPzqtB35+p40ZPfcug8TsUcXPzzTkd6qjM2/OMlb+BYqeb/l3/
iTrG5A/JP9FtoDzkVQ+PQnU805zMNxnTQMm/73yWvUkdGXE7BbJkGin2UvcS
iJXq+I3XMUs3pIny+GNYoVa0Ol6Tdhx8Z9NMUZW9mPTjjDqed2zmMI5oplw5
nB7+KEIdg+24K9qozRTH97WO+06r49wT1slkjvuUz8Of+M/6q+NWveQLhMf3
KVyvrM92HVTH6JmVa4+sWyiW3TJufnrqyJaoxHp0F1Jq+bVstmxRx9g6l5E6
L6QQbAwM/umq48+AFxTpWKS87nQUzdBWR9oD77P+D5Di8/RST7OSOiaXf33V
8t8jStLjJQqvsDombvQ4riLbSum61yFTPa+GpPLd1vtU2yiB42Gq0bNqWDV3
67PGrjYKkaiq4zCthp2dOlYa/m2U/d6Jpn8m1TDg7jvlyhttlI+iVp57P6jh
lU3f2s4YPqEsB3fW/OpWQ8Md1enVTu2UDdrdW3ZdU8NKnSuxit1PKQ+dz1Jk
qtXQ7bJAwpaVp5QjF7Uslqlq+OapYOVpmWcU6shVp+JyNWSIj+VeCHpG+e+y
7ZnFPDVcb5L3u1Oik2L2pRfzE9XQaTjNPD/yOcW/vN/6m6cavt7OSoWIHsrJ
6S+70jzU8AmjxUi/vocSvPWfld4RNbx2idXh5HgPJbJTwzLWVQ13H/7dVmTf
S0lYjDOTdFDDrBcqY1fE+yjlpnrbrY3VMLNTztaV5wXlzWiB9jUJNXQ+OFh8
lWOAMqJ5S2uvuBomeX5pVVEeoHwMfar5Q0QNj/vvPypqNUCZ4P2uvoPInGek
i+3ZlAHKsq6tyjC3Gp7xsd52QnqQQohlkeX7roqb4jeYdpi9pJgreBL9elVR
9tKh+PP4ihKKRtu3daviA9Paducvryi0Q8I+3M9Vcf+Sg4874TWFJ/cxVrSr
oprgUYuf7q8pnfzyJ0daVJG3so7PluMNxXblfc/uWlVEXsuw4w5vKfufOV35
75Iq6lGMvNN131Hivf67+zdeFXXpl/YuHH1HaWLn+dwVp4pJ/3aOXcx4RxGn
NBn6xKgiS3CS+J7v7yhvb4l8KwtTxaA9/14dvP+e4lbYb0X2UkWhc9YuBPWP
FM8TNtwrpqq49aR/yNXZT5QV9SS1LGNV9B00kHUWHKUkTnRYb6Yw7b9LEK20
Ryk1h3akBm1TxdD/Kj5kBo5S5q0N1s9tVMUsibTAl/OjlChVVY0vG1TRvIGz
yo73MyX9E/uetysqKBHqynfv6ARFscjkVMSyCvrcv/uHfmmC0uB0LkN8UQXT
dNJkhW5OUF73rr7aP6OC7tN684kckxSphwvuA2MqaK3TPMJxfZJCz/8Q1NWn
ggOVYdd/8H6lPHS4n/2wRgXZ9L/yL6x+oyT/LhjwpqtgzPr/7vVqTlPcKqII
ZKoKlmQTnn1zm6b8WdyedLxMBevpZsbDj6cpRul4lpCrgv41+4TSUmcozX1P
jh29qILRiwaT4lvmKI27+3S53FVQUVM0ms9vgRL//caJG4dU0NjRZ7T60gJl
f1Fa7UEXFSSrnv3jR1+gfJ+2V67fr4Ibnc7SDk4sUDZfebneabcK1p6cjhrx
WKTc6nzLUmOggurU6i07/JYodRbjPbtFVHDbg9v3Guu+U2pME/RlySp46dwF
Hez7TqFuVytfJKhgseOx7Jml75TSTQGnc/hVMPm8kOVtgxVKpsx3yU/sKngv
6KbUta4VSuQPDp+QRWX0n4LrYxw/KZY0RfaCXmU87eqzm5yzStlZ3u4f0K2M
gesb1GmPVimmRd5D8FwZl+UzI8enVymGGbXVn9uV8Xi7yrC65W+K9rnNdtoP
lVHYYUx/D+saReSAWdGjWmXM9lz4PHr2D2WU65jel0vKKBa/ds7NkQWMZf1z
LicoY0DWFnX9IBYo3hbyQ/uiMtY8s5zWT2UBZ/+4ptMxyvjqbeCx+i4W6HtR
qccepoyCcDs0wIIVHhaO60kfU8Z9bTIHSWZskKd7XN+Rooxx2jsifQI5YMX6
RO4PQ2WMPvJwancGBzh6hv3M38as/+X9FPe7HEDITbj7abMyJmzJeyfEzgnx
f2j6JzSUceBZ3/O0fE4IefpFP0lcGbcPVdduGeQCOzffbbiohKOnbs9fSVkH
w52b2i/PK6E9gRhIaF4HXnp/7A/MKiGN4ar++PM6OENI9Z/9qoRu7/amNBjw
ArW1oWTDJyU8NuPX2fGFF/4os3JF9Crh3VlHiftH+KFmLqdfp1YJ43fv2K9z
QQi2uB45/KdaCbWNFRY3NAoBPlWffkpTQq3eZ+uNp4TgZVkLp3uFEubumVmt
VCcAi+OYfnK+EjqN+MlKFRDgwF3tkqlEJbws4X6/7gIROM4/8avwVEIh5v+0
wQkydL/RIUd6KCE1bcmKnEqGbN3iZrsjSrjxnoaSyE0yqH4OXffXVQkT7B5r
ZyyRYbeFKs3JUQkFh5LXhUUKQ7bA5VGBHUoIpkeHu1JEQC3fzjlcVgkPccqR
bSfEYHHxAcseaSW8+YR++oigODywVqMrbWDOryPYoWqrONj+Yf3RL6aEbTKe
Wg8TxCHI/XamlpAS/mPZU6ejuR4eKIv2jf5RxBcfFqU4oiXA9vaw+e5hRZQO
0dCIPioF4erXPy+/VsQ3e8v6onKkoLws5kLhkCL20Y/0POySgpUUpYffXiji
02V7SX59aSj2P7El6aki2m//s72dKANzSuyKHQ2K2G1bILnkKwupueqsJqmK
eKjy8IWmw/LQLPSn+MtVRWxVO6K1P0YePsf3GqVeVmTOt2lSskwe9E+HhH+I
V0T+p08/So7Jw8e9D+fOnlXE0r60nSE+CqDDZ/++2VcRe6KnxJsvK0L/2Yj7
m3cqYtsLO49rS8qgZikQz7FDERmX0hnb1qtADKnMbtBYEQ/a0M7fMlYBbdrT
8WAjRaz9Hmmtn6oCl/vECLc3KaLjwnvZDB1VMFNoPKYjr4jxR6pUT51Vg8an
iwLa/xTQvCkkfdRUEwQy4l//WVNAWsvBrGtBmnDskERF96oCMupVd10v1wTS
ool+wIoC9kYK7XVn14ITkmlHa2cU8J36Hu7gDi1QDdzYpD6igGXrhrM0D26E
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
CRf+3RqdJaNWcp/MQlYVTF/3WndmiozRzysGFAqqwG64+zB5goyvvutcGSyp
ggbuLY3XPpHRhTPRgaWyCiQ2F/KbvSOjgSKvSiWtCqLd2T1GXpPxjeuOHw9q
qmDsiu+9kEEyJubdoVnUVYHlvRdCAn1k9FsqFzSpr4K6cX2vqudkdEjm+KnQ
UAUkUumD7R1kVHIcu5D1qArCKNzkoVYypon4WNd2V8GIb6BP4EMyUpsv/vN8
UwUmOS8ZXM1k/LDvmyl+rgLqYyPRkgYyasdMXL87VwUnN/A97q0lo9n90f8i
Oajw0jJovTedjBemhc0oglQwOP3mBEslGR+Wf4vIFqMCew9tg04BGTVbXnT/
VKWC96pg8LNsMq55+qf8+Y8KXcqhz46kk9Hqn0/zZX0q6Di8k1m9Ssb2i9qx
pUCF7HNmoemXyJjexUfaZk6F39eudalfJCNxKznW3oYK7q9JCo9jyLjvycT4
171UeMIRGeESRcZHFy9tX9tPBXWdT71LYWQsN98YE+9ChZRDlspXgsloTefL
uXiYCsuX6qMUT5AxIFzWbeUoFZwbRQce+JJxowtf5UtPKjwcPau2z4uMVx/2
q8l6U0FBaPzczBEy5ovcKu/3oUKioc3QxUNk5HYev/3VlwrTx29rSjuT8VRn
8PIRPyrszZSIbXQk47XPH7/xBFOhEc+/sbVj+neotI9FU0Fi5svGSWsy/vHh
UnFJosLnnU0jYjvIqNxcGSFSSgWrIOlNNyhkvELzt3WoocL14ouXLA3IyLib
cELhDhXCfzhsjdAhY4qHyMcT7VR4p3D/ClGLjE8OsDRN9FDB1E5+rFqVjAob
Xn75PEQFWtSlbaaKZLQP311w/D0V+KvnU97KkNH8R8+k3zgVTr08MBEkSUb5
YsPh2W9UGGJlGPGJkfHbj0enZxaoYKitnFFBYsYPrq059oMKpQevfjUUJONB
8n/ue9eowJmwDIPrmPZeBidusNDA97ZLtj8ns95BSkU0Bw16P7ROc7CS0UmN
vfkuNw0286vvKFoj4Y8APw8XXhrk6aflbflJwjW2nSYe/DT4e+znXPcSCV1+
Eya7BGhwNO2wudccCdsbu99kCtKgo6W98O8UCe83MVKamJjeGqxaN0HCkt1Z
97cwcVKH7B2XURLu8FXcKsj09+/qBt73JBQ6rD4mIEoD2xeRz+++IWG3ZoTW
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
fp1MVlxjC77y614GNFcNCtQmsaJJtcXR8fwMKNfUFFI5z4obqxbLAyIz4PLt
WEJ5GCsaEde55p/MAP9vXlFWgaxIC3gbWe+TAbYKu77MH2PFi/fE5laPZMBG
Fy3HXBdW3HCFf2+4cwYQMggI9qw46EdXUrDLgMXOJY1JS1bsS9R5v7IzAwbY
XuUkAyt27F15NWuQAdlBRSfeabKizMamYn35DAiviRmOU2BFXh0aI0Y4A5xH
PSw0JVhxW47IszecGbDBXl3mDDcrkiPc7GvG0+HvJYHL8n9Z8KhBboTYYDp8
eDS/8myZBa90HH4V8ygdynWaesRHWVB86fRl3bx0iPPJN8DXLNimV/jiRGw6
eJadpR7vZUHfNzu1MvzTQZVoFt34gAX3PZT9HWKYDrxWKlOHbrNg4yXOfBW5
dPgWw7ufs4YFA3uFaHTOdOi6O/OotpQF7b1Tfy58SYPr831ajjlM+7K4XX86
0yBV9U7e76ssOL4+TdPqQRqccs/hrIhjwX+s+QVHG9LAPjfy1K4zLDizdiQH
69Jgc9+hdwunWNCvLY/vcFUaiPCYWOV5s2CDFW//tsI0WAHFBuPDLLhkufuW
TXoavA7jlvuyjwX1u+OOZCSkwb36qSspNiyoVUa8sC4qDXoPVJBWTf8yHLc1
+0l+SIbb5ePx6yZ/MaJ7N/Z5vI2HY/XHOji1vjOm8Yib2ruzwLLzlPRhye+M
8wxjCULZWSh4e/b03XXfGRG+puu6j56Ffs4cBb+JZQaf8Fnz0g9RYOz67Fxf
yTIjI04m+ULLGRhZeDmklrzM6JhvsVoMPANhCaNasVHLDAHTkfBPUmeAJDUX
N+K7zHhdZxFt1hkJ12/9Ht7ivMx4ZPkmWSgkEqwseTalWCwzvN903dgqGQmf
3wknfdmyzPi+smar+S0CYoLlPpkoLjM0R55PRXZEgOQ6bf0C0jIjfnvcNrPy
CGgsNkhZZllmbLilMRBzJgLsN1tM7J5bYuwNntZRc4iAxMPumSxdSwz1m9Ep
xX/CQfG7/zfn5iWGTULAV5e+cGAkRZjepi8xvtR0tniWhcNKQ/q858Ulhrue
tTaFEg7p1iUWjOAlxpD+oOLaunDQ+nStWPzoEsPgX4XV+EAYHON/YvOcssS4
FXvaXfRoGPQf/UH/7+ciY85vcfqnVygE/mRnSZpYZFje/OIjqhAK65IJB8YG
FxlmH0z+iLw7Dcb31Dizby4yujwnN2TuOg3Dtltd50oWGYxLU+V//4RA6GfT
25bJi4yWDyU6CvUhQIrcw1setcjobNY8+uNQCNQJuR757bvI2M59Sj+ZPwQs
q7zvOjovMoTnOTZXfQuGzwanha5bLDIUvPZWnXoWDBJeyS3uisx8E2++E88H
Q+IDXN/+boGxkcNf5sGHIFC07z4p07XA4Op+Z/r8dhAwJt90hDcvMMz97jm5
xAfBCmnptEbOAiNn07LUqHIQpNP/dcVdXGBsdVD07lw+BVoUfsX3wQsM6X2p
b0QfnYJjPkr9qXYLjKYb59QeOp4Cln86alOUBcZnJbi3bsMpKMikxOzQWmCM
Cr96kf/pJPQzDmivrFtg2C+R6wOOnwQQTUpyeTzPuFl1lPLhXiD0CFxvFLg1
z2h88MF5RCsQXDn7Rxml84yGTWvAVRwAU2vfBYNS5hmKAuWibgoBEL683lAx
ep5xDPyuV371B67p7ceH/Jn2HKWM0Tp/yBw7kpHoMs94r+L5UvCkP9zsr/42
rT/PeNV78zzvrB8Yd3aLlajMMyam/YPbq/2g59HCjr2i8wylKQEZKw8/GDwS
rO83OceINb9bH9HrC+bSGXlrrnMMPlKqgftlHzgqMLzgbjDH+M4tdVVjsw+c
W5Pf9URsjsGWs/HS8bfecPftrdWr/bOMQNJxW3YZb1DP6XeRsZxl5IVVT0Yl
eIF5vMSdWKVZhoBZXfJ5CS/wOH2U/wvbLOP3oStvs2o8IeZYzTGbjzMMimvA
y1o9Tyh0WHxwo2WG0VA/dODeo2Nw19RARKRghnGxeY37uuUxeKlzISAifIax
68X4s+/dHrAo2/nk3b4Zxi9TXRmPEg8QJJCkTTfNMDQZHa3mJzxA/Z9zKJUw
w4gIdCjP2+4BFrNlPbyz04zegB8pjrweENOlc26APs1YzmWzHy8+CouJez8e
k55mxF+r3lNy+wgIhufpP/v9jSGxhxPcQ46AxvFPqVpvvjEObNF4aL3pCBzb
ecpkJeMbw/tljP/5a+4wxJpWnrDuG2OTcIHAEs9hWJx/vfptYorR9rU8fYef
Gwh9lHWwa5tivHg1kOP27BBYPrzBvv7cFOPQoSud1eGucKzup8tZ1ynGUuj8
+jvPXOB8ofGdT9umGAM0PY3toi5QfDmR31xsihGkcd9Jx+0gNEf2HatZ/sp4
zVi6GVXmDEM+4i2C/V8ZQu8CVnk/OsGSk7tIcP1Xhjbv0qfHZ52AYEkPeHXl
KyN6qJ4Up+cEmnrzTwx9vzLuqPbliM8dACtlfelSi6+MtH1bs8MqD4CXSEwo
h9JXRmZHOn/OgQNQsiSk0v3hCyOXvzlvtnE/dD69N27c/IURt3nb7EuX/bBc
5FF5J/MLo6aEtXf8zz7YZdkkV2j1hcGrxPncYts+WCl02+B3e5LRferFUuxl
B5AL4hl+f3WSkbTWFC4r7gA2Frfy7L0nGZs3c9FOltlD+QKnmIHUJCPn5NXF
6eq9YGteR1yXMMF4IPRnXEJuD0RIHuiLOjLBMORKd2Rjs4XKeZaUecMJxh+D
n1sthm2g90nN7mOiEwzq+HJM3RNrWM135H89P84I3bgYffGYNSid/Ntp/Xyc
sX6bOZs+izXY7aRfYlSNM9YKRisbcndB1dxvLtrBcYb1wU6/AYYV9LVVPZHY
Ms64Jil01sHWClbz9sQlC40zKh4kXXR7Ywl2ZhWsoW2fGYR0L9/+zxawlrtr
zUz7M0P4Dn+yTe9OUAlcbr7L85nhmfrM0MR4J9jvKI7QHBtjGLPtCthUZwb0
mYUVcu4Yo9xRgNgWuQMGWgsaEoLGGHa5+3INh03hb87OkN82Y4wFB87nR/VM
wdE0b2GUdYxhtpY+EjhqDOfEdtzYPzLKKLYIoajrGEPN9HRgZ+MoQ1frZHHc
CgVePsrWoqSNMvb0Wy2Ynt8OLDnG0zf9RhlfyI05HmxGULG1+NJbr1HGg9YA
waBlQ/gfAuNQ/w==
        "]], 
       LineBox[{{-0.5664794027416444, 
        0.00041415516778719005`}, {-0.5573124418145786, 
        0.0004000878599186401}, {-0.5527289613510458, 
        0.0003927314185429569}, {-0.5481454808875128, 
        0.0003851543651887528}, {-0.5389785199604471, 
        0.0003693217625271049}, {-0.5206445981063157, 
        0.00033482211507367083`}, {-0.5160611176427828, 
        0.0003255807772724022}, {-0.51147763717925, 
        0.0003160836937467376}, {-0.5023106762521843, 
        0.0002963033422109026}, {-0.4839767543980529, 
        0.0002534609400738905}, {-0.4796997835239363, 
        0.00024281029492659163`}, {-0.4754228126498197, 
        0.00023190249813762924`}, {-0.4711458417757032, 
        0.00022073320140133192`}, {-0.4668688709015866, 
        0.00020929799143246393`}, {-0.46259190002746997`, 
        0.0001975923890512758}, {-0.46095910126398604`, 
        0.00019305132998941342`}}], 
       LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAtJvIffaq1b8ZEvMA+WUUP6yrRpPj
ZNW/Wnh54FwJFD+lu8So0B7Vv3eApJ8uqhM/h/u8/oQG1L/3GhJD1xISP0t7
rart1dG/dyUMHM+0DD9EiyvA2o/RvzEJyeblqgs/PJup1cdJ0b8e2jAhdJoK
Py27pQCivdC/btuxzoRlCD8myyMWj3fQv6y4xyTNQAc/HtuhK3wx0L/GWmqt
GBUGPx72O62sSs+/Ed20RUCoAz8PFjjYhr7Ov3HdbqveZgI/ADY0A2Eyzr93
WJbsBB4BP/FVMC47ps2/zC9qFiab/z7idSxZFRrNv041FNkaWP4+05UohO+N
zL/aw3xYhrz9PsS1JK/JAcy/kFx8wLwc/T6l9RwFfunKv865Ngg/0Ps+bKuc
lwtNyr9K3GG2/w77PjRhHCqZsMm/fX+uwh9I+j7CzBtPtHfIv/yBRHYOqfg+
36MameoFxr+0Pt42fyL1PqZZmit4acW/bHzI7RYx9D5uDxq+Bc3Ev/MPZXEi
OfM+/HoZ4yCUw7/Z9naAFTXxPhlSGC1XIsG/Z77HEKSx6T7gB5i/5IXAv9vt
WQvkXuc+T3svpOTSv7/f7qqn8fzkPt7mLsn/mb6/t52lhYSL4j6A7RHWn5G9
v8nrJtfLbuA+X1b6ag==
        "]], 
       LineBox[{{-0.4540379582792369, 
        0.00018739184547047886`}, {-0.44976098740512027`, 
        0.0001843663230239958}, {-0.44548401653100367`, 
        0.00018125495062951176`}, {-0.4412070456568871, 
        0.00017805621779025578`}, {-0.43265310390865397`, 
        0.00017139051367316252`}, {-0.41554522041218767`, 
        0.00015694172939112962`}, {-0.41126824953807106`, 
        0.00015308720937902979`}, {-0.4069912786639545, 
        0.00014913239048713767`}, {-0.39843733691572136`, 
        0.00014091491302805666`}, {-0.38132945341925506`, 
        0.00012319851805639006`}, {-0.37705248254513846`, 
        0.0001184917027666959}, {-0.3727755116710219, 
        0.00011367000398867713`}, {-0.36422156992278876`, 
        0.00010367413351672713`}, {-0.35994459904867215`, 
        0.00009849597730532983}, {-0.35566762817455555`, 
        0.0000931949677435516}, {-0.35139065730043895`, 
        0.00008776903740976022}, {-0.3471136864263224, 
        0.00008221608805288547}, {-0.3453874020373451, 
        0.00008023923157737978}}], 
       LineBox[{{-0.1099885746787023, 
        7.4909461238248604`*^-6}, {-0.10521419164175516`, 
        7.2515117308119615`*^-6}, {-0.09566542556786091, 
        6.752148350955191*^-6}, {-0.09089104253091379, 
        6.491957348233288*^-6}, {-0.08611665949396666, 
        6.224581790096317*^-6}, {-0.0765678934200724, 
        5.6677284635098854`*^-6}, {-0.057470361272283894`, 
        4.4616431157283615`*^-6}, {-0.05269597823533677, 
        4.14002129832129*^-6}, {-0.047921595198389635`, 
        3.81005634744698*^-6}, {-0.03837282912449538, 
        3.1244708889683524`*^-6}, {-0.03359844608754826, 
        2.7685307879775296`*^-6}, {-0.02882406305060113, 
        2.4036082848641605`*^-6}, {-0.01927529697670688, 
        1.646147327198885*^-6}, {-0.014500913939759753`, 
        1.2532675666835132`*^-6}, {-0.009726530902812627, 
        8.507227051466165*^-7}, {-0.0049521478658655005`, 
        4.383349593349455*^-7}, {-0.00043928453609798015`, 
        3.9324006522488055`*^-8}}], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[{{-0.5664794027416444, 
        0.00009441306623586101}, {-0.5573124418145786, 
        0.00009093506545403959}, {-0.5527289613510458, 
        0.00008911779169667185}, {-0.5481454808875128, 
        0.00008724702699166633}, {-0.5389785199604471, 
        0.00008334100247539409}, {-0.5206445981063157, 
        0.00007484189216848447}, {-0.5160611176427828, 
        0.00007256772029617893}, {-0.51147763717925, 
        0.00007023157585172923}, {-0.5023106762521843, 
        0.00006536879576550272}, {-0.4839767543980529, 
        0.000054848213029877295`}, {-0.4796997835239363, 
        0.00005223498383098012}, {-0.4754228126498197, 
        0.00004955947456265143}, {-0.4711458417757032, 
        0.00004682063584172476}, {-0.4668688709015866, 
        0.00004401740262796483}, {-0.46259190002746997`, 
        0.000041148694003789224`}, {-0.4609136215717857, 
        0.00004000489049321545}}], 
       LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAtJvIffaq1b/mFL8sqSzvPqyrRpPj
ZNW/MzYDcPd77j6lu8So0B7Vv/44SFaWxu0+h/u8/oQG1L+J7rAalMDqPkt7
rart1dG/t72zQc654z5EiyvA2o/Rv8tA0VGsv+I+PJup1cdJ0b8zh4b4mb/h
Pi27pQCivdC/7JdulHpa3z4myyMWj3fQv2LSnj99Nd0+HtuhK3wx0L+dOOi8
zQPbPh72O62sSs+/xc9tKn551j4PFjjYhr7Ov/uRgxFvINQ+ADY0A2Eyzr8c
E46yz7nRPvFVMC47ps2/mmyS6MyKzj7idSxZFRrNv9tfqDf3acw+05UohO+N
zL+kfRhdsp/LPsS1JK/JAcy/N1YGbUXQyj6l9RwFfunKv6nVvmKYIck+bKuc
lwtNyr8yrMiK0ifIPjRhHCqZsMm/5y7pzSgnxz7CzBtPtHfIv/5mrAGjEMU+
36MameoFxr9b8Hm6/4rAPqZZmit4acW/L/hXRqCsvj5uDxq+Bc3Ev5FLUZBA
M7w+/HoZ4yCUw7+WCBUuTA+3PhlSGC1XIsG/VXvLQr/zpz7gB5i/5IXAv/xV
kcipD6I+T3svpOTSv781maC9Ag2YPt7mLsn/mb6/GuzP6l1ehz6chkfQpI69
v9ZXzcqvJ0w+tfcD4g==
        "]], 
       LineBox[{{-0.4540379582792369, 
        0.00003876604622002277}, {-0.44976098740512027`, 
        0.000038104865371420836`}, {-0.44548401653100367`, 
        0.0000374251658057124}, {-0.4412070456568871, 
        0.00003672662264109636}, {-0.43265310390865397`, 
        0.00003527168125822823}, {-0.41554522041218767`, 
        0.000032120824368183516`}, {-0.41126824953807106`, 
        0.00003128085609402494}, {-0.4069912786639545, 
        0.000030419261612979718`}, {-0.39843733691572136`, 
        0.000028629700944559}, {-0.38132945341925506`, 
        0.000024774323250768997`}, {-0.37705248254513846`, 
        0.00002375061383552146}, {-0.3727755116710219, 
        0.000022702141994842968`}, {-0.36422156992278876`, 
        0.000020529229053735224`}, {-0.35994459904867215`, 
        0.000019403931219074515`}, {-0.35566762817455555`, 
        0.00001825215731295997}, {-0.35139065730043895`, 
        0.000017073462824144675`}, {-0.3471136864263224, 
        0.000015867396619661866`}, {-0.34540863693141577`, 
        0.000015447852713470373`}}], 
       LineBox[{{-0.1099885746787023, 0.}, {-0.10521419164175516`, 
        0.}, {-0.09566542556786091, 0.}, {-0.09089104253091379, 
        0.}, {-0.08611665949396666, 0.}, {-0.0765678934200724, 
        0.}, {-0.057470361272283894`, 0.}, {-0.05269597823533677, 
        0.}, {-0.047921595198389635`, 0.}, {-0.03837282912449538, 
        0.}, {-0.01927529697670688, 0.}, {-0.012082085739379606`, 0.}}], 
       LineBox[{{0.018919767318870132`, 0.}, {0.02369415035581726, 0.}, {
        0.028468533392764388`, 0.}, {0.03801729946665864, 0.}, {
        0.057114831614447144`, 0.}, {0.06188921465139427, 0.}, {
        0.0666635976883414, 0.}, {0.07621236376223565, 0.}, {
        0.08098674679918277, 0.}, {0.0857611298361299, 0.}, {
        0.09053551287307704, 0.}, {0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.6666666666666666, 0.6666666666666666]], 
       LineBox[CompressedData["
1:eJwUV3c81d8bN7JKXPe6F5G9V9JQyGNEVhKys0KJUpKiYYaUHYoyLveW0s78
0ucJqWRVmqRCSHZWVr/7++vzer/OOe/n/bzP8znnPDI+wXZ+HGxsbKar2Nj+
/z25ny8tqUgNHb9qvpbr6zOwVht3dStQQ4uqA0dyOfsNZP92KqjfUMN4K/mw
TfL9Bm1XCv9rvaqGb5XS2Fv8+g0UW3QGSWms9RvszqYP9xt80vU3yDmvhpa2
ByZ0F34a6Io2jBS7qWFTgnvCsv6QAWngVmWoixreXKujzO47ZDDwOCXG1EkN
/Qba76ldGjLI2OMqOminhrwpks7Tn4cMfsdPmqhaqiFJ5O60Vfgvg+szUnkP
tqlhYtVbzuanwwb/3p61qKOq4Q/RkbaemFGDrcTL1Z4UNaw5tLcqr3zU4Ogd
4RY2ITUMM/N7cGlo1KA7tsxmJ78aPn6w6RXHnjGDqs3d9q851LC4QuCMgeS4
wbFsPY/P46roLOCt4H1gwuCHy0LIzCtVJGm95GEzmDIQNTPbnPNCFTfJKIrS
3acMbLUzZrY9Z43XJ3l4npkyeLpa9fRZVMXS7v/+qVRPGeT+53KOs1IVdZcO
Lv/Z8sfAbn11glCJKopH1M54mk0bNHw/dV3jvCqOXdDbaxg7a6AsfSFp7owq
UnY22NMZswaXPTNOPwtXRXXHULO9r2YNHHrKHPadVMXmI8JDdZQ5g/6uH/zn
glQRy+5LOdyeM+D+aHWuxZWl/4H4U62eeQPzVimPQB0Wlow2+xKwaFDGr2G9
ZYsqOp3kO8WfvWhAstbV/aetisNcTeIB9YsGn5odaJmaqtgrymVbKL5kEPDy
YluNgiomqJBSF9uXDJIa/hisFlbFtHFBF07DFYOW6hdSpRMqiBvnJ2ruscHR
n6eUz4+poKbTm6mbL9lASEh5o/2ICqrXUw7c6WUDx0OJxsuDKrgtaVXmNI0d
vtMs/PZ+U8G+7XE9iVHsMH2i+fbfVhWkB+rdOeXEARKarVss76jgjo77gX83
rYKnLucMpEpVkG144/cuu1XgfUFj1zRTBa906z35cHwVMLuTnfPpKpjKlyAu
/GAVaF2yOTN1TQUP9ffVFGtwwc6hdsxNVEGPwgNXjDZzQxD9rdVvPxXMu2BN
DjrGC8dGhizTD6jgQJ57zI6rvHBi6z8LHW8VnJvR8dJAXohoVjOPdVfBF1Ja
834kPkiYitspbq+CfHonJ8If8wHdWGeHlaEKvjH61PJIZA187s3TvLNOBc0c
DfUzltdCt/ojjb2iKhhdv67BU1MAvoe9VJ+jquDosfX0Dm8BGFg9o2oipILT
5B3vLV8JwLS2jVIXjwp+O2KqlZErCKRYNuk1M8podJ3xeIpOAjM5P6HAdmXM
+XqySz2IDGGov2N7qzLGfnO1/JFIhpv7hQN4XrPGSUFpdxlk4L3agMVNyvgm
w/Pg5W9kaOaXPdZdp4xfp0clXR0oYDPb07a7TBnvrum37jcSBsdXzpe1Liqj
9dBlzy5LGsT7a1WtxCvjKgNq4UQQDSo5eftb4pTxhEGqjFQqDUQNKvUCopRx
/SFOzaZ3NPjyiPq76JQy8pXO39ngIQIe199aUPyVMaSHZ/tyuCj4BVvzzBor
4zGr3mieiXUwq5qkkmWojG1BS0dRXBwSB15YbTZQRjvr0ds5u8Th9n6TtJDt
yphdfZ89v0AcJqx0xcY3KOPZlOSUP7YScFZZWW1IQhnbF85fk+lcDxk/OPd8
mVXCx82SEhJR0iB/w+h4+LQSdlUpf+XJlYZy58hM0SklHI0Oyrd8Ig2f2hc+
Oo4qYfdi0P6ZEWlY/3TS612fEp77jnbhnjJwK/dbSEuHEurM3Pjbay4LT+3/
y356Wwl7E3e1vdgmDymLee8O3VJC4xumbQ9d5MGj+CyJwlTCju172soj5GF5
akfSwSIl7L+UOsJXJw/6GXiOdFUJKfScm53GClDT8dzX54ISXs0ip56yU4SK
3R3a3F5KGKThsWbDLWWIn3kQ/GC/EjZKuypvbFcGxxvpZa5uStjz94iH9awy
zIzYKd53VEKvwg771ztVYPPl92LOu5WQ88Il9o+9KvCo+QvbbV0lPO6dyXdZ
Qw3u7vrZtpvK0lMfp+a1ogG3jRO2SVOUcEtNwjY9FU1g7lChT5GU0JwWsFnF
QRMKNx05mcOvhGzH6c90b2vCFakZ8R+cSng/ce/n7e4bIGJuVUDolCIq6N94
z31UC8xvynPmtSvi9ieyt/bNbwRTelPQkVZFpLNvGbMX0gbjG4c+wGtFbFL6
t9yuqg16mWWl/U2K+PmQhXGHtzZoRm621XyqiGblrqIVHdpAddp541mZIm7V
IGUSDzdBL7evztBFRZQ3LxfOjN8ChtJBOZcSFNH/tJijXekWyN8eOqd5QRGd
LHyaVVq2gEtQXOXJKEVcv797VJK8FTrelOhwnlLEu6sc8kgFW+Hp9Z86kr6K
GLt0d0NYrQ5c0z64zcGApVfbn5ShpAuzVsFX5/QUMVy2gORnqwsOfqfmc7cr
YvPaKs3d4bpAuppQ9WOzIgqPG9u4vNaF+OWb24LVFHFN993MXcf0IPTl0LYk
UUXUdNwd1Yr6YOtxeDtOKeCJSS2eH/cAupo3NV2aUEAt/bBwqy4Af51lO6cx
BeTV9bL8wWkIZ0hpQWO/FNBO5uX+AC1DYNaXF0j8UEAOl03Z9y4awrIiO3d4
uwJea5AxzNpjBLfHc95uLFPAC93uLuQBY9ji7u25XKqAn1ZHWjz4Zwz4UnXk
5U0F3GffOGwrZgLvi+q4vIoV8JZNX2u2jQmwOfRtS8lVwBjjSy8W0AScqjQL
hhNZWLA6yPLWTlgV/Tyw2E8BQ65p/QuONYPWzxspEQcUcGu8eOP1YjPI1s6v
sfVWwJfz5YOfGsxAuT+Mb8VdASnAwX1u1S7YvUv5prODAl4yjp45EL8Lstde
6l1rooDf+/fyi182B5VcW5fT0goYtJIhf7rcEqamatn2SCrgQTnJmRtfLKHW
SuWWgoQCWoknh3T8swSbZfa5tyIKaBD+0N/Z0gpCvB5f0RBUwNAtjI9fv1lB
rSKto3dZHmeqFnYsrdkNNo+7zHZ3yWN+8bmCT3l74LTqvf7pT/J4b7Oes3Tz
HqAXRcVc/yCPYSeN4fj8HphNVXj6+408StjM3r+iagv5QcFbkl7KI9+l/Tb+
CbYwrsAp/6JcHmW5T7uuMt0LaVdV2Y3S5LG0/E7T7192UCO4nD+ULI/8hfrP
966yh/74dv20S/JI2fyzoFzSHradDD39LV4eu9dHGJ6wt4fve5+OnzvHiieb
x6iss4eNa+x6ag7Lo2lTft2eMgd4ey78v82m8tjA6bRofMkRVMzXxq8ykUe9
hQ6N4JuOEEUusu00lMfUc1kw2eQImjdf/jyhL48mtyJNBLmd4FKHCOnxJnlM
ppQn5cc5wU65Ct+NsvK4tvtcg0uMM1S8nFqr+U8OH1v13eNPdoW1mfGflpfk
cOdrG9lfD1zBd/+64tYFOWwSPijW3OkK5CmjbUdm5fCXo+23LAk3CBZP9ykb
lcP5R6f/217mBspHN1SqdsvhcuFpjpfN7pBHCfJSqpbDDYb6Ygc2eoLDkp/M
ywo53NHI1ue23xP4f3r2Hnoihw78x8tsL3rC2Qp739v35dCA/n1O6YcnuLvo
HdJgymGmaXTtBnMvkChYfWxTphxqBUesPJjxguuqpZFwRA7tivYevB3lAw6U
YsPvh+VQPevwHv1rPsC/dJ09+pAchqhff1P/0AfOtqbF1h+Qw1cMvl2lvT7g
fux0gqmrHJ7VFBOoNTkA6yt2pVrtksMjh4PE0yR9Id9oIN9JRg5XIw9kf/SD
K7TYCE4pOfx2mHtUeMoPLv2WcrwvIYcemT2kM/z+cDrLZS2PqBzaFl+vbbXw
h72/Ws5UCMjheJ3yxqFGf1iV/tiZuiSL1t1uJiXVByHwexT53QdZbAPycsLd
APApXz92vlMW1/XwP5ppDwDnpJpXqm9l8dfbwEaXqQDYuXk6KqZVFiUuqd75
t/UwSCYeHN/YKItSkUfO5hGH4e0Gm5a0h7L4mNFVhy2BsC1SPN7msizyTUY0
DYkeBfeb4SmySbLY+ddRx0r/KES2f8yeTZBFNhkDeo7nUWiSunIzP5bFZ9xz
cYhxFByQ/9VYhCz+zTwwDxuD4Rj7yprUAFncfqNLb17uGNyK/Z7ebiaLLWs4
nsV6HYeWOwa5xTtlMdH0P6fPJ47D+Lvr9FPGspjdd0ZfIuE4bJV3eSxlIIvj
vXqq/nePQ2Pjm87gLbKY9GaV8vj8cfjO1SBCkpdFJntI1DQ9BEQSGTds2WXR
P2J07dWlE3C9LeD6zIoMejsxBLdSQkGaqpmXuySDh3zYmh+qhIIyveJq/5wM
dr2p0tV3DAXd2heZp8dkMIoxJ6hWFwr7J35dLOySwQtfA+/7pp2EYmfNsIly
Fp+zX4Cc+inYoFJpk3ZYBl/05uVkf4iA7/X6EfsPyeDh6fwvktMRkOFez1D1
l8EEwdibF4TOwHRq61KjtwyeT36QPmR1Bmpm+27/dZbBE9lBne+fngGzRhLP
gV0yqJR3LrQx7yx4eB4mtsjLoLxkupBewXlIzlqv1fVVGk+fymzcfCAaCnfz
2YV3SWNm+k2/4dBoeMQ1c0LkszSC5h+f0Pho+HCypdK+Uxp74n5PrtyKBmnH
M9DSLI29JLVFnhnWfNpnm7pKaUw5xHlu/kYMfMq5cqQgXRqPgcLPro+xIJ+7
5s4BU2mkVgVe1WbGQ4l7wA0/Tyn08b+x/kXDZbgk7me6zlwSW+8lWfSWp8PP
1cekLcXW49WJyCSTqixoTpN3T1sRR2oPp8ff59ege8ueXwd+rcNbRqTwT1M3
wHvNxdJHtWKoEDglGCxVBORr/Aa2VWI42Kcq76RaBPWKaW9HH4thYElo2srm
IpA1zllUviOG9s/P5sZZFMHb9nVpTUwx3PS4r9rTvghi9ufL+9LFcK95yOY/
7kXQd5qxu+CaGH794DOkF1wEV7hVevWzxPDazT2+o6eKYOeVsrAvaWK4664e
7okqgpL7jwuoiWL468SgkVRaETjs0Nn8OFYM363WPpiYUwSrXte8tI0Uw9rX
ewJz84vAb+DZ5KUwMRR+YXTvwZ0iCHi2sN1PSwxvFq9+46NEh3V7zrdxqIuh
Kseff/VadGjuZj9QqCSGQcUfM99up4PqPO/lLkkxFDK6+W3Okg5fLlyWDl8n
hut/Sp3ls6dDEoVUTqOx8g8PMqt3pcNvTZGevWvF8Hc2V7N0AB2u1+aGjPOK
4RkVlKwPpoO1pSRP8ioxPKrT95E9jA5LH4vyVNnE8MqvDXe+nqFDmZ+C1stF
UXSvSN1pH00H9z+3Gv3mRLHv7ZipVzwd+KPVXTj/iOIbCdoujkt0qBV4MFo4
JoqUM3Hvt6bS4cj1TTEGw6J45fGu0MUMOkiqVtK6f4qizJPOvN3ZdGir1L0T
/kMUQ62/Vateo8N506cg8lUUOX8vmU/coIPmO6POJ59EcX49vDpTSocer+eH
7DpFUX2HtAnxhA4pY+bL4+2iePVN6vsqgg7jfLaKai9EsRC0sps66VCY867m
Zb0oNm3V+fShhw62Ck57/J+KYo+9jmvWEB0eGHqcLioXxbG9lT+FF+ng1faD
Hx6K4jGz87VvOIuB5O5X1F0mivs2JxzZzF8Mx08FNYuUiGKS02hGr3gx9BvV
WjkViGKKyeKWZ3LF4MjP35qdK4oKXzrU1dSK4eUHN5sPWaK4m3gVsV67GHSL
7rRT00Ux+c4eata2YigLXLTdd1kUF8sK+1IMikFyq9XbKwmimBV/5SnPzmJI
Y8uz74wRxWpV72NL5sXA8Xq4k3JeFLV3ezwJ2F0MGZIB3wSdRXHPy8mT8bHF
sOpXldcee5Z/tbTuBynFEPaYtzfFRhS/J/l2hF0rBlfzW/1rTUXRs2AlrPlu
MbSQ5/12G4qixfOiDLvKYjD4umvwsp4oNlrfFwjEYpANGfy1RlsUB9TDDxq9
KYYr+jqBVhqi+PiYi9HfT8XAzZMwkqQsirt+nz655XsxnH7z4UizHGs/XN/0
TA0Uw3Ce4jiflChS/z2x0BwtBnf/sGMW60Qx/W/6if6pYmjTappMpIqiW+2T
1eT5YjBcpJ54SRJFwct89x4vFcOj537TPPyieIH/68hzthKYpnhKzp8Qwfia
wDrDhhLoq5ju3B0sgiuO/x1RaCuBty5Jl4oPi+CMul5B/qcSuF9QPm/jLYJt
wRVbTUZKIN/Y6n6JuwjWju7rPDRTApd/fvdbcBJB7gAOH5GVEjisxv+OYSOC
MVXvlDgFGODSVnRx0UIErW+oqepSGWB+XMdwr6kIst+JezAqzoCtwq2zTEMR
DO5lO7tOlgEKlT53l/REkO/ejEGdEgOEXecP2OmI4O7u+9ffqjOAYzl53S1t
EbR6slXFaSMDJgvk3ixriGC9tEDAri0M+G5cnWCvIoIvxuY6CrYxoP2njUGp
vAhul3jy3F2PAU8T+6dXpESwShvzInYwoEwt4o6DuAiG36HmzBgwIK9N0Oc2
TQQvOQ8OvwIGJB1niLKRRbCifX/1HxY+LazXvm+tCMa9s6MEs/DByo4Ld3hF
8GTFmnkd1npHV3999lUiaDT7p+mVCQNMlxenHP/RUF6pruiZDQM2F6aXli3Q
UK+HYmHpwgChgVqa8yQN9y3HOnAcYQDbRbvWuyM0fCjmXq8WxoAxtaFYziEa
8md3CH45z4CW45TJez00rMq81lCVwoD/hEtvrvrCwjcn6nuzGHC70sDD9T0N
OX6deBd3nQFXXTuFH3TQsFTr6vU8OgMSlgNec7XQ0KUrs0LuFgPCCv9Fu72g
Ycai9G2xuwzwNcna9rCehioFBhPhDxlgP6A6zv2UhkXyk5OG5QwwvogM92oa
Tlxn5w2sYsBGdUf3R09oKLC1NmK6hgHS7b/JvA9o+Pn23ejPtQwQCIl+tf8O
DdOfeJrQnjJgWVgk6jGThjYRwu+ZLDxSWbaVj07DWwtRugks/MXVeNTjBg1/
BMb7Pa5jwKvlj8VPrtIwOWV4ixKLr6rwiOvqKzRcGhMI76lmwE0TTiGvVBrK
Kvakj7LiZw9cfVGeRMPjA+m5Z54zIO6i5vk18TT0W5OqdqWdASfUGzd7R9Ow
vTZff/NnBvi0u/yuOEvDlWNJlc69DLANGS/iP03Dyfe9p1aGGaBZtU6w6igL
TxeP4QID1rs9eL72MA1ljFdRPrIzgX/F9OwBPxqGSZg7e/MyYbGwS7vai4YD
cUf2uAswYdjk+C8BdxpSazvCGylM+DzAXejrRMMHgyPm2aJMeHnxumONHQ01
n4tLtkkwoUJdey3JhqXf38HykDQTGO0vGvwsaFgxPbTWW44JY6Lf360xpaG7
hW5zugITtvrM9z00pKFGT1TxBiUmRN4hTTvp09BRk+mvo8zin1ZetaJDw/DJ
je8YLCxkYCRcsomGU99F8k6xsGuCi7zlBhomNcf5lLLWF3cc3zyhSsPZ0duE
jiITRsSSdmYr0rCHnqwrJc+ELQfoDvqyrP3d2WLtLsOE82U1vr3rafjTJ8j7
93omvJh5G5ooRsOLTw5w/GFhEvyO06TScKFlveAOFr9LImdWJ4mGpDCdTeJa
TKC/EWdE8NPQZODj16RtTNjsa/28iZPFF0u1FjZnwrm7vu+D/lFx9LFNhfIe
JjTNnv1JXqSisePkn4Z9TBA0zJqpmqXikHyIXp8bE5wv3uXynKKi29ugylhv
JhS9fU7lGqOix45T8XR/1n6I9yjc+UVFNq7pGv1AJmj7zW7Z+5OKLhH9rnuC
mXDmnoDZ3HcqzoxWe34MYULjnKLjjW4qPnVUrHhzkrXfRuBv8omKnLYjO/RO
M2FfklPYr3dUDAu694oUwYT8d8Hxqe1UrOuqk9xzhgmDEonZW15T0cxraHqK
hbX8C5ldTVRczDCdnWfh8PtVFdH1VIwJ4ST2s3D9fEeT0lMqntDT/rqexbfG
+NeH1moqbk5I7djCiudwiX3wRDkr33u2q+ksPTc6xebEHlJxJHhkxIOld2C9
Ng+WUdGkve/1oaNM2HDQUsT/FhWjtyf9/i+ACacf+Cjxl1BR7Hft630HmfDs
b4TOowIqEl/bEjiPMWG1SeYu5zwWf+iDGWDFs798x2klm4qPTvgH8kYx4fr7
hoMlGVTUeZq2yTWBCT8lu09ZplDRSRGStVOYoHloOmHiIhW/3Xh+J+UKE049
5L+afYGKW1pSKwJzmYAL8rf0o6m4kWv6ZVMBE3h37qjqPUtFzQKuqeslTNib
vO9l4mkqcjD9N/++xYTcD0c+aYZS8dmQaPy9Mib0SsUPdQZTkcvLpqPvPhPU
AvLnIwKpeHp423jCIyaEPqrglTlIxb37Pz/MecKEusU20Rc+VLw40PpZsIIJ
3KaDykc8qGj6VEp8lIX3pPzbRnGloq4CSUK9kglXP4pYVO+jYtLd/tBXrPEf
0lounnupeOf1o/vPypmgetg8gGs3FQfKVM2FWPwnHnuF3zGnYo+t950nD5lQ
u3T64t6dVMzru6Zz6x4TuMzSr80BFaP2CegP3WaCTWpp6Q09Kl7VrJw/xmRC
zqdn1SY6VIzPJecbFDHhu8yXV7+0Wft/e9h6dx4Tft982rRRk7V/s6vz2XKY
MKtR3BCuQsXure+P57P8Y3uSgM/kqVhlOZf14CarXnSD6vikqRh5oSFuE8sf
GtrW7BWnYuMNo1tyrHykzbZUXqNR0fPZb5dztSz/WsSe/BCiIol5uFe/nnWe
2K08UFnLyifDNtzjBROMPvXePc7Lql+Pdzt7XjPB2uPF7WpOKlrsv+BS1c4E
x/47N9n/CeMFWFsz9JYJ3ofTSiwWhFGys9sx8D0TgiZCi9JnhDH18cBa/Y9M
CAtzyf88wRpvtrvt+IkJ0Us78mRGhPH50439FSx8OUb2asCgMLppb/ByZuEc
Xp6sh73CmPbW+P5W1np6yu/0v1+FMUTfy2Y3i79MuCPF6LMw/ixVYOaw4lfm
Prl0sVMYa/wurhZi6auXvpb4pl0Yc9jja540M6GFee6C2Gth3Gzx/Nu550z4
qO4T490kjBvGLFIOEqz6emQWWfqMpXdQpDGoinX+bVM7O1krjPZRXYcSHzBh
7qlg+PYqYfy4xvuu1B0mcJhOn4x+LIytHbfU+1j1x//6U8ire8K49TgaU2uY
ILK3LljotjC+Wbt1zyNkguzHoiAXhjByPOwprGhigvr++ICiQmHMLE8/KdnC
BJ2+w/6/8oTxjFzf358dTDAO2HNgY44wSv/rNudj5Ws9vskrPIMVP74yMI7l
j9NJ0f3PkoWx3DXNxb6LCT6LSy58F4WxNkl67vhXlv/RPxz3xgkjOeE4rbuH
9T/yNNlfi2TlP5YWlvyNCTHJt21/RLD822zSEM3Clympu1XChDFCrvzKE9b8
nGsnLI8fF0Y1efVgGRYfXcp5V3WQMLJ5lNc3fGH5z9DfyX5IGAdy3g1ns/an
Uk3GyOKAMCp+U9PMfsfy/yGXQbqHMM6NaD2tbWP5rzOs+9mFlY9ZawXXK5b/
dW06MvuEUZ3ELxnEqr9ek8ebA2yFUTkH+4ZZ/o2+ytn40IqlN1L9x1mWv/N7
zmr+NRPGhuslnyRKWf5/8FIzMhbGIxb3XfPoTFjrbqp8cYcwcu59t/0Ua1y0
V0XhzTZhNNlrfK2W9T/IHhKQFdvM8uPD8rODrP9ZY2xK0nuDMM5G/fkdyoq3
LfSjeKmqMNpSKnd8f8oEk4X/RCcVhLEkQK+FwdJnE1VI3S4jjEK+SbnPWPXj
zH2BHC0hjO8rz1zb8JIJBy4HCL4SEcYhxuGbv1n5HSXb8AtRhDEsYzh1klV/
p69q87kICCNveMSaHaz/KVZShLuITxhJ23WIV6zxlJJFjl+rhDGr4rJ+Jmv9
nw4fl2g2YRy5mK9Xx/ofnZdf3RdboqCyqVTYFlb8OpWN3I/mKCh9DGTmn7Hy
c7zqbvmHgjuvW/mws/QnxPx71DtGwT3Wx2x2V7Pq+Z4/35lhCsqsOjf88TET
bLtaPSkDFHx1jql64y4Tynm2VNz5QcHnbOZTV1nn07rN1/l3fqWg96diyot8
1n3vxXmg+xMFzQboe+SymdB3+XB1aCcFeW0y95VeZoJ59RvBtR0UvLB1oN4h
hgl3f27zZ7ym4KbIKtvBc0wgkwtrd7ygYJuqarhHLKseDXgoH+opuESzPmWT
yITuw0cDjj6lYGN75NYnLD6jnPcEdw0Fa7wXrlxOYwKzQZ9WUE7BZFLGgc5M
1nk3URyk85CCnM6X/BJZeo5JrGloL6Pg5GY/W8ZVJrw3DxE7dIuC9Mclr5VY
94/uyc/BbCUUVHtWcIyfdb7mFxk2XS2gIG3HruY9LMzZdlNiYx4FH5hPOIyx
5h9aEDjxKpuCJ95InO+/xqpfxbBX3hks/fYmJZos/o32X6UWkimsfiCL9iqL
CdmRO8MyLlJwivul8IMM1nvwzp0W1QsUPPKos+0b6370+kSWa4ii4Getel+H
JCY8XxUR7naWgkWK/gN8F1j3y8Yf7X9OUVDCXdl+6TwTUvebK14+QcGY2sZr
Sqz7ePri/bPywRR0C+O/msC6r10qaO9qD1PwsC5zneghJjztPaeyz5/lR3Zr
d6cHE+QEf0aOelPwoZ9QYrUDExL1rD9c2E/BFXehJ88sWPVw8LG6pAsFVQt1
B4Z2sO7fK+tiKxwomLnryXlHfdZ7FKM/29hS0OLkcOFLQ1Y9jA5tGLSi4M1V
T9/f38l6b4rZxkfuouCtWr1FXtZ7rd+0slvEhKWXoPZ2WDLBIkRy0wMDClYX
H9u9ajcT7uVfuGiuS8Hs9/enCmyYQHk98u37FgqGGBiFF7Led6fn7LeGb6Tg
/g2HIjhsmfBV7r/LQhoUPHOZJ7qeNW5sK9tXqkzBi1sD+b6y1t88e3G7sTwF
39wnRduw+PlLJ1K/SFFw+e9RM4oVE46/dxoIEWftR2ndLSWWvg/shP4aEVa9
bvhvMIGlX09TMbOYTEG0DNmkxcqv0DX5l54ABXdUrNyR0GPd3wnT0MlHwUtT
tt4WW5hw+LFbdhAXBbsMJ+0eaTKh/Vv9yCp2CpYTz4LtWe/bzfyqJjeWyKh7
m8hSlmLCtW3p17bMk9GxoiFdg8aEFd/58dY/ZOxPMZLy4Ge9l+uarq8Mk/FZ
4Wys1iwDbtWfUL47QEa6sOGW1az+I+mF9BO3XjLebbJr4P7KgKCWVljdQ0aH
TWFtL1jY5k3E66rPZJShc42q/mCA1gclp4PvyXhWlTTE1c/qL7s6e6lvyFj9
t6Fx3wADpr5FH21sIWOU3M8zIkMM6OzXXAh5ScbEPQV/d/1iQMWvrgsyjWTM
bnBc38/COWOJQh0EGZkvTlcPsfDpP1tunP+PjDPeVpl2LOw636usUUnGqkO1
PpIsPv3l1Cddj8i4fXDDW3NWvPUcOwyT7pGRrXP3+bY+BqxwD7/edpuMldT2
mTvfWf36mhynQQYZIzotqr92M6CetLMvq4iMq6jLul6fGFBMnTy68wZrPC+v
Z8M7Vj+3Ln9h6ioZDSi0v+atDPCXsoovukJGp3DfjptNDDCXnxeyTSNjZ5NN
njnBAFUVxo2VSyx/P22OVqpkAL+mncrdBDKOZby/ZniPAaPa/564xZJxXJc6
mlrCgDadMsPVkWR8zdsQIpTLgAf6Li1VEWQ8Pryf/IzVb2cYcTsfDCOj26lP
9NwYBoSaPe6jhpAxX8h9+NpJVv9v5RXceISld+Oa/JqDDNCxXbsYEkDG7++P
Bbn6MEB0X028jB8Z9fb36vP4MWDB5SC5w4uM8jNXQtVY87s9hPPPu5Mx/ZOx
eOMhBtQdeKai4UzGDdt2q7cFMCD/0NHyLnsyPtBOyTY7zICoI+JGSXvIGKeq
qq/Kwj4hL1u2WZGxPcxr6iRr/s5TJ50HzVj6j7hFK7L4FM/K9mcZk/Frw79i
1skMPNHtwTsNyBi98z+e0gMMGLpwdnFqOxmPfbCzDvViQHOSSkLRFjIudN7n
zHFnQFnqB7LtRjL2Pil7uNaZASlXYvNX1MlYM/39dacdA45d01K9q0zG9Y5B
1UPWDNib/7XcTZ6MqvufvTU1Y4B2cZLRammW/5Rg7yEDBgjf0mmtEiejnOBw
QctWBsyW9TsfFCHj7YcO1WMaDPj4ML2fSmH5XWb2ylKe1f9XGBxrFCDjwcrM
rm4xBuT+93sxZDUZ78UIjRQKMOAsXk2Q4Sajxxf3gQwOBux/bkrpYCej0vIN
xr2ZEjBonso/vyyEljLW0+ODJSDdXqCq8VcISxQmLtl9LgGOTuuKrmkhtP+X
p9rcWgJ9n/4aJU0IYc+Lp19ftJdA41dm67YRIUy7l+a2400JMHvtXQYHhfCf
QN0jpbclkDjI9jOrTwhFVap/xrLw4ZG7x3Z+E8IpRvawDQtbT7ouTX0RQp6z
729fYK3XmOVJLPoghG1aWzgVOkqgQyeabeqNEPrbD7rOseKHhi+cNm4Vwgmv
yATB1yUg8t+JyYyXQpi0Uccu4EUJ1CyNBPQ1CKH+x5jjbA0l4GHg37uJEEKV
dc8TO+pKgD3qm2tcjRBu6+RQfl9ZAiXPnN91lgthv1LWa76HJWDO+dZK4aEQ
SqR86QooLYGRnVaNJ8uE8FbFQNlEYQmkxjfqN90UQg6djeev5ZSA9ssd5bRi
IZzjMInwTC6BD3yVGgfzhfDRbZ+KHTElEGGlxay8JoQXXEB7Q1gJrE8uleTN
EkK29NyPmgEl4Eu6Llh6SQhjHkp9MLEuAV47auLfeCF81bI2w0a/BO5kprBZ
xgghyu/Wt1MrAZv3POG554Swwuy8moBcCUzRoieHTwvhcn19spx8CWQ5LwTo
hQphFvvl/BwW3pZ7ovdSsBC+yHXI92fh7q4R1+7DQvhO6FntZdb6yPX+79T9
hbDgk5sot2wJyHp+szrnLYRie2yftkmVQFOhc2OruxAerZG/3StRAgG9b/Ql
nYXQQuvE8x1iJcAvb1V+1F4ItUOKBruES+CBX6MGYSOEMuU576sES8D+5g6m
oKUQ7tgbZtTBVwKzQxWSXqZC2LDPsnk9ZwnkqmrlPDAUwvElXLy+WAwGQaWC
7PpC+HDx826LP8Xw465s4l4dIeQvvSovOVwMceN5bHRtIWycf9xO+14Myhup
4VMaQji70zRJ830xvA5JmTRWYe1/78kIr1fFcPQJz+FMeSH8Ha728GZtMZTr
LLhuFhfCp+aBr7wLi8E5/MS7OJoQxkkFeTanFcNSzYjVeyFWfXBtKNkUVQwF
S36NCmtZfP6bt189WgzGBt/0w3hZ/tAUNsT6FMNApHN5E6cQ8imp7etl4YvP
3miI/COhVvZZPToLq3NaMQ8ukPC0zOPNhHcxdOxslKyaIWHv4u+YLV7FEBq/
I4d3koQfLC44sXsUg8jLCkGXERJO5n95K+lWDDV8WomlgyQ8H862KsmpGDys
StkWekn4rfL8kIF9MXAky4Zb9pBw/arVQdttioHRljeZ+5mETRv1D500LwZz
EvXw704SqiVZlYwZFcPI3pRevQ4SCnA+6yzULYa0TB63y69JeM1NIy9Buxg2
vY96191EwjbxrxfyVYrhA23BSqOehKtCLgn+kCqGCOcTjefqSOg7TCmwpBbD
+twR/bYqEoouySZ84CsG7PIrl3zC0n/wJ1fUMh14PJ2ZxG0SPkhtcRLtpcOq
XQ6nvZgkRAOHYZ5OOnBssLVkp5Nw9zTjkMxzOrCJWEvQb5CQw1K/0KucDisr
u8aMr5Hw2GLq7mcldFgaMMG+Kyx9nz6JQyYd/rZBRlwaCc22Vl/nTKPDbIWe
r8JlEjIPGlw9lkqH6XydrU0JJJSLtP1jn0KHqfhNvAdjSZgY2l53+zIdxo9u
+MITSUJndbfF40l0GHFUK7sVQUK+YIViZgIdhg2UzluEkfCfXkOBaRwdhhTl
bIePk1AqbLnNKooOPwWkZC8dIWHuYCF7xRk69M6um1YLIOGn3N2LUWF0+N5D
a2rxJSFnvGlI6TE69DSRrx7xIuFcvK6g+mE6dN0TOCzgTsKNd8WPcB2gw6fs
1fr3nUho3/5DVNuNDh/OcwvY2pOwNcAt/Z4dHTr9Ob5P2JBQtXHO7JQFHd7Y
rDxMtyRhgWt6XiLQoUVydt87IxI+PTnnEaZCh2buKaXQHSRco1NiZrWeDi/G
Rv8Kbyfhj835T11IdKh/+vOGoxYJG776MinTRYDMH8FzaiR8bFYmVNlfBE9T
vhpdVSLhqQyCM66zCGrDPlO2y5GQJ91hb1hDEVR7vP/5WZIVv8Xi6cWHRVBh
9qYyYh0JXW6aBO65VwRPNFsvitNIqGd/qEf8bhE8or1yqxUiIe3PUpH3nSK4
v9KosX8tCQ3uZ31ZX1oEZQP4b5mXhCbCfYW7mUVwu632Tf4qEpofu8A+Ri+C
WxVVxcBGwq3p35YW84vAakfAb5wTRPqPofjQ3CIwW+udyjEuiDq9K/EOWUVg
/NV5084BQTy4XP7xamoR7Lhr+/HCV9b441Izg4tFsO2c+ZkXnYL4fJ31FaOY
Iti021CKr0UQPSqfnCiIKALN9dsaLBsE8X7+0SSHkCKQr1Na0/ZQEFOThO9X
eBaBVLLUfcFSQSRtSKl331cE6/aL2O8tFGT1J2tErS2LQGiZO68zRRA/lx2d
mdtYBPytKwa0eEG013ETuCtfBLw3ZnudzgmiRNDvpOu0IljRH1DtChTErOtf
lMXnC+Evf0+bxAFBPMrxxpM+WAjT3e9DPFwFMUlMQcHhQyGMl7XSCvcK4kI/
uKk3FsLw2ec1P8wFMU/GPZH7WSH8tK7zkDNk5VP1r3wXUQjfJco5/HQEMfjV
g1GuukLoHiljMjUFcehRUJBBTSF8rC2xHFIQxIueVQfGKgohXqLy3q4X/MiW
80R7LPI6WJZKdL5LW43jmenqlfdzICD06PUIP17001aPEo7OhHVblIWE3Hmx
0lSA9vJoJjTP/Lhw044Xz0meiAt0ywTVU/uCO4EXraNSBQI3ZsIXHcH+w1t5
0bDg97n/1mVC0vxLZ3YNXjw7YR3Uz5EJutUxrTlyvMjmFdvw7VcGDIfrG2uu
40VNHX77m+0ZcDhy9dCPNh4MPPzGWX1rBqwzbHQ//ZwHZX/6r76tngHNbOff
CNTy4FGjslBH2QyIeKZjxnjEgzNWq4Q0RDJANWayRq+UB72PDO5UWZMBX4zv
bHhbwIN2nZneZivpkMTpV3IomwfVjtYWR06kw++4T8lZsTzoynlTdtPbdLhu
msGhHsGDcRbqwcXP0sGa2/pU/TEeXCnlY5N4kA5lCYTX+H4e9DgaIyGUlA7u
5uHvLzjwYKy2MXfsyXTg59tkKWHFg+S60fFBz3QISmJustjGgw9ahc+HbkwH
CSuvW980eZCoa2hIE02HljXr1ocp8OCLDVxWF1fS4GzLu3R+CR4s1Dmi6NyX
BurJydzFZB48NyGwZ64pDbp37zqznY8Hd7mJlHiVpsFlAfaJ9n/c6F1Wrq5/
PQ3022t8/We5sSq+lCGSlQajqaGfl0a4USPXw3pHchrk22raZPZx46hAp3Jp
XBrYCA3Vq3zhxo7J2I1OZ9Jg5U2RDnZwI/2rhJXJ8TS4l+FW5viCGzfn6JoH
+KeBhz1VZrSOGzOvrv/V6JoGAsLtWbFPuFE/wbtrr00aHM0yjnxQxI19d6PX
jGmngaTj0h+zq9xY/1/lzmm5NGijVRz6msKaf+bgczHhNNC8qmK3+iw3StgN
HfPsS4Ue576mwhBuLH85xafxNBVSxG7o6QRw40Yli2vknFQYyyUp+Dpy46+J
bK1l41TId2u+tmDNjTKXxrNGqalgIxEnkG7CjdJ1f2+3DKTASveOWCVdboT0
d3dTy1Pg3o25uTotbnR8bHtPLSYFPDweBjkocaP2N+PkLOsUEJAK/DG8nhs/
ZhGLz4RT4Ok3ecdoYW60Swrwk/ubDMGFPc0ia7jx2/kCv9HhZOi8e2PKhoMb
SaZeEme6k2Hbf+7r4v9yoU7AH4uelmS4/lLcuG6CC7triEFSbTKwffgSMD3I
hXttjn7gv50Mvn3X0tW+cSHfdPLX19nJ8GrCudrnAxdK+G+5sysmGTLWfOR9
08iFLgK9HW77kmFWNFuLt5YL2c7u5xjUTwY3xX3O8JgLb21MLBOWSwZ5o3c3
7xZxYcEL/z96vy9Dok1Ge/9VLmw2ikxRar0Mo25758TTuNCIZph/7e5lqAhr
N0s6z4V3rZ26/wRchnVxKUefneRCnvZl6VbTyxCZvjt7PogLf62QuAWlL4N5
2euf/m5cqPl3U+rd9ktQVp20Nt+OC9uQsF8ouQSkFxZb3ltw4Xj7i/nU05cg
tJN3P78RFzZorjfwt7wEn3+8iDPZxoXSUSn1oesugcF4fFnEBi5kihzlfDyU
BPQl086HilwoJmeo6f8lCbhXcy0NrefCIC4n37mWJDgs0ignTeXCH3o/yRFP
k6BNPtbKiZ8LPeUTm4buJcEmbeMTKZxcuNktcmZHfhJcBfa85wur8ME6l38n
LifBkjXWL02uwrBjN9QvhCdB0t+imh+fOPGx0ZWebnIChET9/c+9nRNvRL76
7DIXD648e+s+PufEt3Z3OwO/xIMqlQ1bH3Fizpnv/lrX44F83emZeSknzj0t
Cn8XEQ8LsvfrGwo4scLlV/SIUzw0a3k8r77MiTqXTCc818bDo8ryps2xLD4t
r9rSnxcg12Dty/vhnGhcNWFuXnsBYp77vlI9xolLm76NaqdfgMPWtc0Mf04M
+ZH71cv3Ati9o7RI7+fEKZM4+VdbLoCua2Brnj0n1vjJ/RyhXADZH/VtNEtO
fN9/XIiX+wKsPrSuI92QE68LlQytm4uDqbHjb/h1OPFc4+BjqcE4+HLy1dsE
DU5MvUUrJn2Ig9uxp9+fW8eJdcapagUP4iBjdceHeRInXlM3pWtdj4OIdKVP
J3g4caT712xWfBxYFvy/oDnw8IezzfVOcaCtqNndP8yBP9JvW50ziIN1dy98
9fzBgT28vvcm5eJguGbz931tHGgY6P1tZDgW3hpd/tHRyIEnKVeb/FpioeZl
X6/Vfxx4ZZ0tni2LhaQPGT+NbnFgzCXF1wcPxULI/uGB2nwO3JcysqS+MxZc
+42GdLI4cCA1LjpEMhaMA6/9enSJA+0eVuVozcWA6tTEsEYMB4bUv3L3bIsB
crj5yK3THDit+uv1bHEMLPwrGJUL5sCtbx7UjZ2Kgd74ubF8Pw7c/8tlUM0z
BprX7pkQc+dAy6HKzdv3xsCjK8zJK3YcmKRvJLHPOAZyxVemBC04cM6w71iE
dgwcVrk7w7WVA1NP+uu2CMaA3YNVc1HqHMi0sPoxuhQNujru84uyHHjzb4Yz
569oWG26ZnFSkAOf+fNR/tRFw9Rrn6Ugbg5kvHR9/owZDV/sapYHl9gRky8p
HEmJhtteAWw9v9hxeD74sZFrNGQMIrvLd3aMM/wU5WEQDRFHRTk7P7DjOsoT
XZCJBsuzL7iaG9hRUvh2vHZfFGhzSvGY1rCjOlR16dRHwbqkMF58wI7VtUAf
KIiC4RyFNRU32PH1hy+v5J2i4K3kOf6NV9ix8ckyB1MrCmoYnWvLktgxzOml
+xPeKKCrqwsqRbOjSOzOkbSnkXDpcSyJfoodoePFoY7rkRD02/+sxVF2fJWv
/7YkOhJs5CyHJnzZkV6rXvvONxJImSQEO3bce+V27XrFSJhq/qM2aM6ObG/F
XimuioR3HB9zUoAdHz3LMfT/fh6yQ24Ef1Vnx+NPo277ZJ6H07ejuuLk2JG0
drUD/+Hz4NJ7YJf6OnZ0zrz+/rnBeZCwU5U6w8OOPmFl7Ia954C+sbJNtJcN
PdkD3quTzkFcQK4ufmLDuMh7utofzoJf0TnmwXY2nF+4s2Xq2llQFtp5vqKW
Ddt+nuw6se4srLZQGt7/mA1vfvHmlPx4Bn5HrXbkus2G1dTn1fbpZ6ClavRZ
WSEbkpayCV6LM3BvokPDIYcNz5Vp0rVWIiBN+cm1xWRWvOR4jrvvIuC4Vw5X
cRwbRhfd2PG0OgLsrkYctzzDhmdDknud8yNgc8f+r5PH2VDEdc2Gk9ERQOU1
srh2iA372+1hzYEImAX5ckNPNoxfYaylmETAp1M8MkP72HDiQN3xOJkIqL4/
fDnVmg3PnLSQdloJh3anYvKC8Qpxjjny9HhCKCx4hdombVwhbvd3OCbvDwXF
w6Yp66RXiB3N3pc2aIfC+bODfHrLy8T2H2SRkQ8n4PaFql2vfy8TZp+kbOeZ
J+B9ysULbl+WCUGF30NHT54A9SI19rOVy4RhmM/Lc2tPgPPtJQN+5jIR1SIg
wPMxBGIft569fmWZiKTcfNCdHwL3avNr1GOXCVLamZ+zviHw5XnwfO3xZSKc
Kz17rW4IcLcbbt3ttUzcavXb3SEfAhs/CYV+tVkmHLh/e+QJhEDi8OPxZbVl
Iikq6r7Ot+Pw5E+cRsq6ZSJkjsfm3/Pj8G1pX6Ak3zLBubaYq/bOcdgqOD9g
MLBE1NSIlrKFHgcf0Vfy7Z1LRKD1YafzjschWSbXx7NhiRj0US3u1jkO/Zv0
eyILl4hzxSHlCnPHgLRjrQQpdYkgNhle5Xp/DPTMelwKzy0RB5oDbR88PAYZ
zlHv0XWJkJuoubjn4DEwOtfYwk5dImzXWDvJxgdDUHzW6gzOJeKww80qc41g
uJrqby47tUg8TwrVZ7w5ChNFvI3G7YtEvHmoW6vQUZC485n9Xd0iscFN5s35
u0dg15PbcKBskdBufyGhbXYEQurOnPuTu0h0qXbWbZkNgvwm6/9iLy4S9zc+
ErvYHgTN7ev/Uk4vEvq5avM6N4Ng5tPY1hL/RYLAj8G654LA+nfao0aTRSL3
n8igmHwQLAi+L+VaWSDO5ItzuroHgqIYczBrZIHofLszo04hEPbKnlJQ7Fog
yIndn7VGD8OtzWJFZlULhPGhMZps2GHo3DHc84G5QKg8LQlN1jkM/8z+kziY
tUBcOa3r2jcbAI4u+68mhCwQYrk8s0rBARDjo/lBxHuBWPov5BeHcgDcDfxH
ubVngThySaCnsOcQrDpflPpSfYGoraZlL+08BFoJIa3O4gvEyDVLV8b0QXBP
M1nzi2+B+HBSVHqw6CA8pv+M5xv8S9gY/vjFN+MPA/mDp2Q6/xJXXD98Es/0
B9G8X4e2P/tL9E+Wb4i39gernN8ue+/9JYRFvv3boeQP5zNHLQPy/hLV6S+2
u7H5w8PUcb3oxL+E8e/RtPcf/aD/0qT6tZN/CZ57wlkld/1AJPHP+oc+fwkL
hycPiWg/sIybEXi15y/xRCxQQ9LBD777ceUkVs0Th7+lbjUpOQAUH57EQsY8
cckzJN3D7wCYefCFV2XME+N+Nwv3yx+AO45r3YaC5gmqmeCH7jwf6LETtGZz
nSeaB95f3OXgA6Q9QjtEd80TUF2xJnC1D4TtokqZy8wTBxNu5d0P9oZSExGS
l8A8kfBga2O1pDd0gxj76cU5wm2T75jNay8Q0BefSh2aIyRzugmHDC8w2ra+
7+b7OUK6qzT+RIgXhG6W6iTq5wjToaL95nu9gKkl8/zj/TnimOKX0hZNL+BX
UbjJkzRHDKRG26a/9gRQULoqdWqO+Ne8W9XvvCeEyKhc1PGdI/YF3v3opekJ
H8U0Ag8azBG5yqd4si94wGraBvdItTliLFpk/SN1D9Anb9ydIzpHPPvWrvpf
x36gr96y4cXULPF3dXeuo+B+eM+tI/3t2yzRtfFu6qtSd+Dl3C401zJL+ORe
Khg2dIcji/p/FG/OEunlRntmfN1g28jOyni3WQI3PDLfG+MCgUNmt/LNZ4kL
uwd3urG5QH6/+bWKLbPEvmBmdmKEM3R8t0xqk50lzoZ/y26acALOr9ZnBgRn
CdNoXxGLq06w9bNN0MrSDKEsc9nfyNcJDr233U8bniG+78qO0Nd0grZWBzBr
nCHklV94kGsdgb3ZUcvj4QzxQnx1+KdIR9jc5CwTlj9DBPsL/j5l5AjXnrpz
Mk+z+Ja4z4s83Qe+931fcGnMEIkmYvUFeQ7AZnpc0lN8hhCKvLzW1M4B8r6c
O1nFN0NUNSs7/cftAG+5cuQCB6YJTU0VnDpkD4buryI7CqaJSZN7GoFCdtA9
+f6DSso08Sx+bc2p8r1wKqFXI/bsNFF907SbzWkvkNePx3Ufnib+OyFouThj
C/ceLXZtcZkm2h+Rkt0ybMHCnHdT6q5poohTj4Ombgv9X4WThrZME6XTHM1R
Y3sg6oTMDyP5acJcu788pngPiPNpbssjTxMGWXLT8/v2QEW+buo02zSh4R2W
+pFrD9ht3jWwe/wPEb6N5wD5sQ0kenpdYWv5Q+y0r9YI5LKB2fKMCb8Lfwjt
xf43JonWkGFVsIs48Ye4rr2yWCBjDRo/7uSL+vwhbKsHN01UWoEv/3Pr1wZ/
iOfWEe82d1nCW5+5W1rzU0R6W/TbmgVzODrPyZY0MEUYFKR8l48wB74UklNf
5xShanPCcu3sLjCsVuHKfjhFaO6WWhLrM4Mum63u4wVTRH7ONQFJBzMI6zd+
bJ4yRfD4JZO8npkCOWLPavrZKcIj6ot5u6op3BV09148PEUsrxvvT76yE8wZ
h6ocXKYIo/Oqt3w8d0K/7knBe7umiDiDyKzTyjthnX9KnZf8FBGcVLJlV7kJ
JNaiWNPXSWLVmJRdbJUxyNu1HpNqmSSeRY7zhIUaAzH4+cXpmkmCqAim+Gka
wyz5z0m1nEnijRrPBsp1I/ANUHibZjtJ7Pi5K6FkvyGw/duoMmwwSbA/OTIe
zGsIeVcMokw0Jom9rg/evPMGeEs4ac7yTRLhJN0cVkcEQEtKcmuYIGbPpA1d
+qELbWvvVax9NEHw9Vh5f6fogjvX216icILgGCUPiRhth+GlGYGQ1AnCaP2N
D7vTt8HpaTE9+fMTxGGt+uAyy23APbLj4IegCeL6Kgp2s2+DK33emYluE0SV
y/j3zgodePi29PfItgnC3Slg+7SYDhg2t4oUKLH4TJ7/4H65FdqeTZrspU0Q
MU0CelUntkKn94ltgYPjxGe9GKWWhi1gJpl5bcl9nMgN6P0Ua7oZfNZ2TXrp
jhMfJByEnL9tgsglWcvnIuNEh9amhWNhm6Dqy6OF5LdjhDC/zVXD69qgmvPW
Tcp8jHjRcH58oVELzOLXPYlVGCPii6+2XtulBQdO+vAPcYwRfT0RnFopGyDK
97av9fdRQpUSxNMRrwnX7adqH9SNEvdGXm+YP60BVca6VGreKLGuQenGZV91
eL8x5kj46VFC6+IhL7ndajAl3fz8675RYtu9hmP+s6ogQCJLGm8aJTrvtwDp
hiqo/nMJY5JGiQcykRSqkSrsGitqWz02QuTORq8K6FWBqJaNke9ujRDxB3Jq
WiVUYCpx73dfyRHC9eaJOPVgJRA4fW3bq8XfxLGepcu7lxRB7eCPNI3Pv4nw
tPpXTvGK4Gt63Gg28zcRdv5/AdYCKf2JN/GQJT/WAZGihwnrv4hOPLmtfiM/
8vDY+uvm6r9nqCubj/EiPw/gIFNQxOq/EgDm6+dgIj9IvrADGX/qv0b1jlO+
NCE/ZK34W31c6r96uAEVHZkgP4GcQLThOeq/biJKMWfzHz+ei4gMRhfqv00Y
RTvjrB4/unrQZKr06b+MPy5LjV4dP9ZpGL0O0um/45Jv50MIHD/zWGAVc6/p
v0xZ0QxFbRs/EEiobdeM6b/PwiVOZgobPyw38MU7aum/Jw0Bc6ukGj9JJjge
oEfpv9MY5qsHPBo/ZhWAdgQl6b+Envj3bdAZP5/zDyfN3+i/hT8tyyPwGD/K
yLnlQLrov62Qiz1HcRg/9J1jpLSU6L9UODeSre4XP0pItyGcSei/0eW/5Prd
Fj/2nF4ca7Pnv1pBx6+PjBQ/IXII296N57+mA0Wvw+0TP0xHsplSaOe/4+Wk
wqJKEz+i8QUXOh3nv0T3YUkQ9xE/TkatEQmH5r8X3opPsjAOP3kbV9B8Yea/
LsI+ozCpDD+k8ACP8Dvmvzi3nAmsFws/z8WqTWQW5r+oOf8t7qAJP/qaVAzY
8OW/XH9i6Wk3CT8lcP7KS8vlv2rMxbugygg/UEWoib+l5b9OzHXLgloIP6Xv
+wanWuW/dcLE7wdwBz/QxKXFGjXlvwsfyAGK9QY/+plPhI4P5b8yptBJdXcG
P1BEowF2xOS/peYdeEJwBT/8mEr8RC7kv2Vrm1XEMwM/J270urgI5L848BME
n5oCP1JDnnks4+O/2H3UYVH9AT+o7fH2E5jjv2SuO7PutQA/08KbtYdy47/V
K0GgsQsAP/6XRXT7TOO/34euWfi5/j5UQpnx4gHjvzD6BwKp4/s+fxdDsFbc
4r9uQh4/b2r6Pqrs7G7KtuK/EUryEZrn+D7VwZYtPpHiv1pqSRf9Wvc+AJdA
7LFr4r9HzTY2a8T1PghHCMTnY+K/x9l50iax9T7G7QG3
        "]], 
       LineBox[{{-0.5664794027416444, 
        0.000020049182252197726`}, {-0.5573124418145786, 
        0.00001929588204589406}, {-0.5527289613510458, 
        0.000018902355460961602`}, {-0.5481454808875128, 
        0.000018497296009726468`}, {-0.5389785199604471, 
        0.000017651712171674265`}, {-0.5206445981063157, 
        0.000015812421248778983`}, {-0.5160611176427828, 
        0.00001532039197941797}, {-0.51147763717925, 
        0.000014815003066453898`}, {-0.5023106762521843, 
        0.0000137631613005705}, {-0.4839767543980529, 
        0.00001148810231181435}, {-0.4796997835239363, 
        0.000010923106322503563`}, {-0.4754228126498197, 
        0.000010344686096907828`}, {-0.4711458417757032, 
        9.752615635681544*^-6}, {-0.4668688709015866, 
        9.146665568769642*^-6}, {-0.46259190002746997`, 
        8.526603107994667*^-6}, {-0.4609136215717857, 
        8.279384622263507*^-6}}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQvWX2idpvq67uZ4CCNavdJj9OQfCX7j6y4oIcgj/v
tNO+vTeuwPnTbh+4vGoSgt/+e8+/FjYEv4HbWqTowGU4v0J6p2Z8FYKfab01
xPLdJTjfu3rtqrdXL8L5Lt3aB271I/g2s1dePe6J4OvuXsqwaO8FOF/um/Xa
NV7nEe7/KsNa9/IUnJ+zes50bl8E3yRRRmvmhpNw/qEz0v5byk/A+fcXS818
xXoMzpcMktANVzoI5/PxlG2OddkB5/OmlNw0Pb4VzpetVXeqW70JzgcAvlRq
PA==
        "]], 
       LineBox[{{-0.4540379582792369, 
        7.884219374244237*^-6}, {-0.44976098740512027`, 
        7.65498717077367*^-6}, {-0.44548401653100367`, 
        7.419950866773786*^-6}, {-0.4412070456568871, 
        7.179011079691889*^-6}, {-0.43265310390865397`, 
        6.679016038680168*^-6}, {-0.41554522041218767`, 
        5.603642957458164*^-6}, {-0.41126824953807106`, 
        5.3184679499444*^-6}, {-0.4069912786639545, 
        5.026538833531606*^-6}, {-0.39843733691572136`, 
        4.421962157583421*^-6}, {-0.38132945341925506`, 
        3.126646026449308*^-6}, {-0.37705248254513846`, 
        2.784160654453158*^-6}, {-0.3727755116710219, 
        2.433963546947943*^-6}, {-0.36422156992278876`, 
        1.7099208681644665`*^-6}, {-0.35994459904867215`, 
        1.3358139076986897`*^-6}, {-0.35566762817455555`, 
        9.534723799112472*^-7}, {-0.35139065730043895`, 
        5.627607087733835*^-7}, {-0.3471136864263224, 
        1.63541316309017*^-7}, {-0.34540863693141577`, 
        3.2588657197498174`*^-8}}], 
       LineBox[{{-0.057470361272283894`, 0.}, {-0.05269597823533677, 
        0.}, {-0.047921595198389635`, 0.}, {-0.03837282912449538, 
        0.}, {-0.01927529697670688, 0.}, {-0.012082085739379606`, 0.}}], 
       LineBox[{{0.018919767318870132`, 0.}, {0.02369415035581726, 0.}, {
        0.028468533392764388`, 0.}, {0.03801729946665864, 0.}, {
        0.057114831614447144`, 0.}, {0.06188921465139427, 0.}, {
        0.0666635976883414, 0.}, {0.07621236376223565, 0.}, {
        0.08098674679918277, 0.}, {0.0857611298361299, 0.}, {
        0.09053551287307704, 0.}, {0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.5, 0]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[{{-0.5664794027416444, 
        4.599350122636303*^-6}, {-0.5573124418145786, 
        4.298518955904683*^-6}, {-0.5527289613510458, 
        4.142017903955464*^-6}, {-0.5481454808875128, 
        3.981360717559835*^-6}, {-0.5389785199604471, 
        3.6472732695966785`*^-6}, {-0.5206445981063157, 
        2.925804062671898*^-6}, {-0.5160611176427828, 
        2.733860192630037*^-6}, {-0.51147763717925, 
        2.537118097473142*^-6}, {-0.5023106762521843, 
        2.128893268777922*^-6}, {-0.4839767543980529, 
        1.2509811887238002`*^-6}, {-0.4796997835239363, 
        1.0339016512992736`*^-6}, {-0.4754228126498197, 
        8.120152105902913*^-7}, {-0.4711458417757032, 
        5.85242579820348*^-7}, {-0.4668688709015866, 
        3.535033004709434*^-7}, {-0.46259190002746997`, 
        1.1671572587997768`*^-7}, {-0.4609136215717857, 
        2.240341118430991*^-8}}], 
       LineBox[{{-0.33855974467808925`, 0.}, {-0.3300058029298561, 
        0.}, {-0.3128979194333898, 0.}, {-0.2786821524404572, 
        0.}, {-0.21025061845459195`, 0.}, {-0.20547623541764481`, 
        0.}, {-0.2007018523806977, 0.}, {-0.19115308630680344`, 
        0.}, {-0.17205555415901494`, 0.}, {-0.13386048986343793`, 
        0.}, {-0.0850709586997171, 0.}, {-0.07292927851766647, 0.}}], 
       LineBox[{{-0.4540379582792369, 0.}, {-0.44976098740512027`, 
        0.}, {-0.44548401653100367`, 0.}, {-0.4412070456568871, 
        0.}, {-0.43265310390865397`, 0.}, {-0.41554522041218767`, 
        0.}, {-0.41126824953807106`, 0.}, {-0.4069912786639545, 
        0.}, {-0.39843733691572136`, 0.}, {-0.38132945341925506`, 
        0.}, {-0.3471136864263224, 0.}, {-0.34540863693141577`, 0.}}], 
       LineBox[{{-0.057470361272283894`, 0.}, {-0.05269597823533677, 
        0.}, {-0.047921595198389635`, 0.}, {-0.03837282912449538, 
        0.}, {-0.01927529697670688, 0.}, {-0.012082085739379606`, 0.}}], 
       LineBox[{{0.018919767318870132`, 0.}, {0.02369415035581726, 0.}, {
        0.028468533392764388`, 0.}, {0.03801729946665864, 0.}, {
        0.057114831614447144`, 0.}, {0.06188921465139427, 0.}, {
        0.0666635976883414, 0.}, {0.07621236376223565, 0.}, {
        0.08098674679918277, 0.}, {0.0857611298361299, 0.}, {
        0.09053551287307704, 0.}, {0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
v6ZB65JuCnQ99uPWvYtf4r8AAAAAAAAAADLxHOI=
        "]], 
       LineBox[{{-0.5664794027416444, 0.}, {-0.5618959222781115, 
        0.}, {-0.5573124418145786, 0.}, {-0.5527289613510458, 
        0.}, {-0.5481454808875128, 0.}, {-0.5389785199604471, 
        0.}, {-0.5206445981063157, 0.}, {-0.4839767543980529, 
        0.}, {-0.4796997835239363, 0.}, {-0.4754228126498197, 
        0.}, {-0.4668688709015866, 0.}, {-0.45489305211013803`, 0.}}], 
       LineBox[{{-0.21025061845459195`, 0.}, {-0.20547623541764481`, 
        0.}, {-0.2007018523806977, 0.}, {-0.19115308630680344`, 
        0.}, {-0.17205555415901494`, 0.}, {-0.13386048986343793`, 
        0.}, {-0.07292927851766647, 0.}}], 
       LineBox[{{-0.44976098740512027`, 0.}, {-0.41554522041218767`, 
        0.}, {-0.3471136864263224, 0.}, {-0.23840376624859735`, 0.}}], 
       LineBox[{{-0.057470361272283894`, 0.}, {-0.05269597823533677, 
        0.}, {-0.047921595198389635`, 0.}, {-0.03837282912449538, 
        0.}, {-0.01927529697670688, 0.}, {-0.012082085739379606`, 0.}}], 
       LineBox[{{0.018919767318870132`, 0.}, {0.02369415035581726, 0.}, {
        0.028468533392764388`, 0.}, {0.03801729946665864, 0.}, {
        0.057114831614447144`, 0.}, {0.06188921465139427, 0.}, {
        0.0666635976883414, 0.}, {0.07621236376223565, 0.}, {
        0.08098674679918277, 0.}, {0.0857611298361299, 0.}, {
        0.09053551287307704, 0.}, {0.09530989591002416, 
        0.}}]}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-13.815510557964274`, Automatic}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.06}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-13.815510274069974`, 0.09530989591002416}, {0., 
        0.05007673491884507}}, {{-13.815510274069974`, 0.09530989591002416}, {
        0., 0.05007673491884507}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)dN/dx \"", 
         TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.06}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"n=1\"", "\"n=2\"", "\"n=3\"", "\"n=4\"", "\"n=5\"", "\"n=6\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    1, 0.6666666666666666, 0.6666666666666666]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.4444444444444444, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.6666666666666666, 0.6666666666666666]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.639074931265847*^9, {3.639074993996307*^9, 3.639075126508544*^9}, {
   3.6390751652623243`*^9, 3.639075298714778*^9}, {3.639075331043693*^9, 
   3.6390755160311527`*^9}, {3.639076375523621*^9, 3.639076401822846*^9}, 
   3.6390767166598787`*^9, {3.6442574366310177`*^9, 3.644257640914957*^9}, {
   3.644257708990077*^9, 3.6442577371366043`*^9}, {3.644260004751333*^9, 
   3.644260077952415*^9}, {3.644260115987558*^9, 3.644260126350301*^9}, {
   3.644260188124305*^9, 3.644260218133224*^9}, {3.6442602591886263`*^9, 
   3.644260302050921*^9}, 3.644316648114072*^9, 3.644576451074027*^9, 
   3.644576487542392*^9, {3.644576549658166*^9, 3.644576621616087*^9}, {
   3.644576764562796*^9, 3.6445767820862637`*^9}, 3.6445768574554853`*^9, 
   3.644576945003827*^9, {3.644577113369245*^9, 3.644577140083241*^9}, {
   3.644577753012301*^9, 3.644577802627615*^9}, {3.6445780569311028`*^9, 
   3.644578103866412*^9}, {3.644578289753704*^9, 3.644578315580659*^9}, 
   3.6445783615710917`*^9, {3.644580938831132*^9, 3.644580960697556*^9}, {
   3.644583691767996*^9, 3.644583700885569*^9}, 3.6445837471615887`*^9, 
   3.644583847010324*^9, 3.644583892827443*^9, 3.644583928512251*^9, 
   3.644585111858407*^9, {3.644585173229665*^9, 3.64458519082297*^9}, 
   3.644585513469898*^9, 3.6445863990953827`*^9, {3.644597709149899*^9, 
   3.644597727397072*^9}, 3.644597767321594*^9, 3.656974936784327*^9, 
   3.656980015420948*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Antiproton Cascade Spectra of Final State Gluons for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "\[Phi]"], "=", "50"}], TraditionalForm]]],
 " GeV"
}], "Section",
 CellChangeTimes->{{3.6390630204859133`*^9, 3.639063025852809*^9}, {
  3.639076336932643*^9, 3.6390763661398563`*^9}, {3.639076412252461*^9, 
  3.639076429227652*^9}, {3.655488386909247*^9, 3.655488387753139*^9}}],

Cell[TextData[{
 "In this example we load the antiproton spectrums of 1-6 step cascade step \
DM annihilations terminating in gluons for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "\[Phi]"], "=", "50"}], TraditionalForm]]],
 " GeV."
}], "Text",
 CellChangeTimes->{{3.6445976000873127`*^9, 3.644597637650031*^9}, {
   3.6445980312314053`*^9, 3.644598048158736*^9}, {3.65548839460959*^9, 
   3.6554883957627993`*^9}, 3.6569741280149107`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "BaseDir", ",", "load", ",", "m\[Phi]vals", ",", "m\[Phi]", ",", "xvals", 
   ",", "flux", ",", "loadspec1", ",", "loadspec2", ",", "loadspec3", ",", 
   "loadspec4", ",", "loadspec5", ",", "loadspec6", ",", "dNdx1", ",", 
   "dNdx2", ",", "dNdx3", ",", "dNdx4", ",", "dNdx5", ",", "dNdx6"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BaseDir", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"load", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"BaseDir", "<>", "\"\<Spectra/Cascade_G_antiprotons.dat\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m\[Phi]vals", "=", 
   RowBox[{"load", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;", 
       RowBox[{
        RowBox[{"Dimensions", "[", "load", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m\[Phi]", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xvals", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"load", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", ";;", 
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "2"}], "]"}], "]"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "3"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec1", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m\[Phi]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx1", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec1", "[", 
            RowBox[{"m\[Phi]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec1", "[", 
           RowBox[{"m\[Phi]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "4"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec2", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m\[Phi]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx2", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec2", "[", 
            RowBox[{"m\[Phi]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec2", "[", 
           RowBox[{"m\[Phi]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "5"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec3", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m\[Phi]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx3", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec3", "[", 
            RowBox[{"m\[Phi]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec3", "[", 
           RowBox[{"m\[Phi]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "6"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec4", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m\[Phi]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx4", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec4", "[", 
            RowBox[{"m\[Phi]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec4", "[", 
           RowBox[{"m\[Phi]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "7"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec5", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m\[Phi]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx5", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec5", "[", 
            RowBox[{"m\[Phi]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec5", "[", 
           RowBox[{"m\[Phi]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xvals"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "8"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec6", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m\[Phi]vals", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xvals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx6", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"loadspec6", "[", 
            RowBox[{"m\[Phi]", ",", "x"}], "]"}], ">", "0"}], ",", 
          RowBox[{"loadspec6", "[", 
           RowBox[{"m\[Phi]", ",", "x"}], "]"}], ",", "0"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx1", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx2", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx3", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx4", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx5", "[", "x", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"dNdx6", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.04"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)dN/dx \>\""}],
      "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Purple", ",", "Blue", ",", 
      RowBox[{"Darker", "[", "Green", "]"}], ",", 
      RowBox[{"Lighter", "[", "Pink", "]"}], ",", "Orange", ",", "Red"}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<n=1\>\"", ",", "\"\<n=2\>\"", ",", "\"\<n=3\>\"", ",", 
      "\"\<n=4\>\"", ",", "\"\<n=5\>\"", ",", "\"\<n=6\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.638539003567604*^9, {3.63853912444792*^9, 3.638539127218301*^9}, 
   3.639056012020714*^9, {3.639061226178513*^9, 3.639061230000971*^9}, {
   3.6390626177280293`*^9, 3.639062624597332*^9}, {3.63906296534056*^9, 
   3.639062980297701*^9}, {3.639063055035693*^9, 3.6390631177028913`*^9}, {
   3.6390631611248693`*^9, 3.6390632086441917`*^9}, {3.639063255187817*^9, 
   3.639063372221395*^9}, {3.639063453287771*^9, 3.639063453456121*^9}, {
   3.639065249443858*^9, 3.639065249635944*^9}, {3.639065298154196*^9, 
   3.6390653719402437`*^9}, {3.639065422048918*^9, 3.6390654312306767`*^9}, {
   3.639065516186607*^9, 3.6390655534937763`*^9}, {3.6390662025372047`*^9, 
   3.639066307136261*^9}, {3.639066415538189*^9, 3.63906644737391*^9}, {
   3.63906695110944*^9, 3.63906695878749*^9}, {3.63906754287934*^9, 
   3.639067542949849*^9}, {3.639067579548677*^9, 3.639067606031039*^9}, {
   3.639067650511935*^9, 3.639067650589734*^9}, {3.639074796825118*^9, 
   3.6390748073267813`*^9}, {3.6390748438453493`*^9, 3.639074846996669*^9}, {
   3.6390749186703053`*^9, 3.639074953027285*^9}, {3.6390750100090322`*^9, 
   3.639075125887274*^9}, {3.6390751643031473`*^9, 3.639075298122554*^9}, {
   3.639075328947755*^9, 3.639075515143014*^9}, {3.63907635788829*^9, 
   3.639076401263814*^9}, {3.639076434207601*^9, 3.639076487532075*^9}, {
   3.639076690007765*^9, 3.6390767031080008`*^9}, {3.6445771538368177`*^9, 
   3.644577154500536*^9}, {3.644577235378191*^9, 3.644577356050426*^9}, {
   3.64457739648755*^9, 3.644577513568507*^9}, {3.644577544232073*^9, 
   3.64457754799872*^9}, {3.644577605357257*^9, 3.644577624050283*^9}, 
   3.644577673866103*^9, {3.644578087963068*^9, 3.6445780888099413`*^9}, {
   3.644578251564781*^9, 3.644578254195959*^9}, {3.6445808713366413`*^9, 
   3.6445808713648157`*^9}, {3.644580921951578*^9, 3.6445809266978807`*^9}, {
   3.6445809743232603`*^9, 3.644580978731881*^9}, {3.6445810985910177`*^9, 
   3.644581141708456*^9}, {3.64458119834447*^9, 3.644581198567319*^9}, 
   3.6445837383232327`*^9, {3.644583956159071*^9, 3.644583973382719*^9}, {
   3.6445848902302*^9, 3.644584890748803*^9}, {3.644584932860217*^9, 
   3.644584948499735*^9}, {3.644584996744629*^9, 3.6445850332899446`*^9}, {
   3.644585191186246*^9, 3.6445851953794117`*^9}, {3.644585405650796*^9, 
   3.644585428326337*^9}, 3.644586384471479*^9, {3.6554883904755487`*^9, 
   3.655488390913857*^9}, {3.656974151600212*^9, 3.6569741518050528`*^9}, {
   3.656974868342043*^9, 3.656974892887167*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.5, 0, 0.5]], 
       LineBox[CompressedData["
1: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
9amxCHPe4ARsRwtrx78Yy3UW4cyQvKD/lGlB2XLliMRYEaaqV78XHKKBNZX4
XZd4qfiif7Ye9NKACmlRYVGIin2Kzt471kkDkSefnjokQcUKXHvPVdXRwFxZ
WvA8mYqfzHapONyiAeWsu00xiIpflE2mpB6gAWces1eXPak4e6xjWduYBsqX
rv146UvFMRIV3v27aeCVyu+lHwFUjFLDDVTkaeDpT8PQ5RAqbjrJMNVGSwPX
dznEBsZRsYVlZ9nw7D/iW7DnPukEKt5Rf/Pyrv5/RIIok31LEhVn5ErrfKj5
RxSKfns/nEbFhS4GmWwn/xHkL8FMLvlU7PWO7qSLyz/iSyT57rUiKpbTbzV5
aP6PmFgp2p96h4pLhR0XzWT+EUND8d/WS6g4KFm0I5PzH2FqZ4ozS6lYY3Xo
zsjGJjFRnu8uWkbFNV+DHOJ7NwmHrvKnM5VUHL1PW7n7zSbh+EjEjlK1Fc+L
dXqpyk0i3bkuNqJmK56spMpXVzeJU54/NGvqqLjzUDH3qtEm0bbIEHm0iYpX
j4bZJKtvEpLLrW00zVv6AkyuCUtuEuViGlXX31LxuZgxZv2NDSJy/zuDS21U
/PBSjdm7XxtEoteBmrF3VPzpWtIll28bRPOk/FW9DipWLlKijaneIPi6VJ+U
d1Kx08N1xHZvg6B7xZr9sYuK4ys7YnIzNggeUqbY6Iet+tXl1yrHb52XuX92
rJuKv70JWq4L3iC+xqU8e/aRird1GmpbHt0gVA9qeFB6qFi9lyvsP6sNwt33
zeOnW+w6OFRxgrJBFP94/o33ExUnTlbObChtEE6s/nLeW/zsz0WVa8IbhNCV
hfbCLf6xfvC4OPMGoebymendFrNsky958nediL5cwv5zi7U5lkfR6DoxFvaF
a2KLPQVbSZ0968RIkcne/7b4qlS255HX64QX8a+L2OIaxeOFMxXrRD9d/4+0
LR7eZdB/vnCdsL4un2GzxZwUdlHO1HXi0aAa278tvfqm/c6FZ9eJbwuLR3O3
2Ne67JZa4DrxC5ffVdjidKfYT3B4nfAg+Y0Vb8X/ysOWx3bfOuH54YLyji2e
DJC2HdRZJ2KOmYQd28oXf9ifa8Fy60SJjmdV2VY+95xtaqflWyc4FwOHRrfy
HZhwkyWdfktfmdMPti3OSvU1l55fI46fnEyW6vx/f+gkPB1YIzJ15V+Q3lPx
bNH2JqPONYLsV7eLf6ueoo++0n6sXyPSODxfLG7V2+zZQ+xVukYYmOlsNG71
Q0h99Nk/2WuEREDrO6dWKs5vPvAyPmmNqPpatidvq3/aOsVWeCLWCM2KjsD2
N1S82Dutfcd3y9+sKXf0NRUf+JX2tMl4jUi8LY7+I7b6keNTCePmKhF6qN38
+1Y/ywndG7s5tUoklgkGBDyjYlvpcFm576vE297zhaMVVPxAU6jItGaVUCq4
SX9/a14cnd2yLods2ddOOlhszVucp+pnAY9VwricfdZ0ax4fH//H88B6lTgy
numtlkPFDOeKUluUV4m6toni9gwqrqSOJDCPrRAVul/fyV2m4tH8sXCpnhVC
J61WFcdTsWDOhN/uhi17XTaJ5fzWfNz4vd8/Z4UgqaZkfzxNxfsvLu5otV4h
OF0qTNS39s/Z2L//BgxWiIQKu1oWNyouj1mZXSavEIc5t5HbD1Ex3+mNbgWG
FSJk5pnJdksqHvBhvJVYs0z0fx8cDdSmYh5PpsTCu8uElHUxXFWjYlN35sia
9GWiIbZlX5YiFT9yZHcZD1wmGCNPnwwQp+IzZnwS5lLLxMLRhg//GKiYjSx7
nyn5L1G72zgsva0IY1n5LInwv8T1Uw+zirb2c4gUOUnH+y+RxTQ/m1lbhL8I
qRw/hv4SdoW2E1oPt/Yzi9bOt/NLxO3Cfd+sEouw7tTe6gSXJcKz6WW6gGER
Pj5u+iDffImgjS69eE+7COcPm9+u0loi1As6mcRUijD9fweiRzmWCGflvtpj
QkX4fYcDNm1aJHbr/C5YnS7E3mXebxlVFgnW3pg61puFmMYkWPyIyCKRrDwe
TEouxDnfzp6uYV4k7N1azRXOF+Juxlsyx0cXiMJ9irTzfoXY0LX1fFfBAkFj
WZ+eql+IRZhVdXO4FwjD6/Zn7aoKcLfn3wdqy/MEY2vBRCJjPj65TE+TPDpP
AJCrhCfyMPM1zkM/e+aJ49WWaxfb87DhCzJjZsU8EUne0B5Kz8OPOVw91gLm
Cdp7MTN3xPJwYh0INf83R7z0fuj+QSIXY/7kZJfXswTSjuq6xZiN37M/qWJ/
OkvkdXo6Rf+8jV0Zu4eIwlkipJRaTGm4jSMWhPRJ52YJhoAffflRt3FFd8mv
Kd1ZYqgzyjduIgubit+4ve46QxQZP3Xd3nAL7+DkFjfa9ZuYWWRkK3G7iQv+
cMh3/BgnGmQPclx3TMNtLS9GDGvHiZc7GovtFNPwQp7XnWcZ48RdZY3Dh9ZT
8X7zaqncfeOEf9D9TdcDqXgp1130eOUYMWnjez905iq2Mn3MxXx5lKj4zDe2
w+QKXs/av75XdZgQ4MxTEt6WgOVPLtTWbB8mhoPPvTZ9fgnbGedHKv/8SUhI
TL2h8bmEH/yeW+LJ+kkQJ3UrFZsvYgej23NDtD+JbLr1ufzUePzo19ho7KdB
InqSPRXvvICfxbAUR670E29rtDOqbkbi0pTEGt/K/q350kqaEY/Ed3O3vbc/
0U/sCTnxLr8kAmfW0a2oDP5HlL55bnD0dTiedvRJi439j+Bva0ielQ/H/wNY
h3FZ
        "]], 
       LineBox[{{-0.21025061845459195`, 
        0.0012467714791572805`}, {-0.20547623541764481`, 
        0.0011989895089651204`}, {-0.2007018523806977, 
        0.00115267532224801}, {-0.19115308630680344`, 
        0.0010644816178716563`}, {-0.1863787032698563, 
        0.0010226107229034229`}, {-0.18160432023290918`, 
        0.000982224507899052}, {-0.17552450626446567`, 
        0.0009329388950181202}}], 
       LineBox[{{-0.44976098740512027`, 
        0.005361393500215247}, {-0.44548401653100367`, 
        0.005251956346088878}, {-0.4412070456568871, 
        0.005143812669465379}, {-0.43265310390865397`, 
        0.00493153785278912}, {-0.41554522041218767`, 
        0.00452388651417292}, {-0.41126824953807106`, 
        0.004425652673600715}, {-0.4069912786639545, 
        0.0043289377306804135`}, {-0.39843733691572136`, 
        0.004140143099509755}, {-0.38132945341925506`, 
        0.003781514709330952}, {-0.3471136864263224, 
        0.003141105645704704}, {-0.345387516836802, 0.0031109580583985707`}}], 
       LineBox[{{-0.1099885746787023, 
        0.0005425893967314092}, {-0.10521419164175516`, 
        0.0005225882956695876}, {-0.09566542556786091, 
        0.00048487725493204605`}, {-0.09089104253091379, 
        0.0004669674011327276}, {-0.08611665949396666, 
        0.00044954074141513464`}, {-0.0765678934200724, 
        0.00041564167954587054`}, {-0.057470361272283894`, 
        0.0003476467891632218}, {-0.05269597823533677, 
        0.00032964770432235616`}, {-0.047921595198389635`, 
        0.00031087394010447916`}, {-0.04314721216144251, 
        0.00029111670851043864`}, {-0.03837282912449538, 
        0.0002701540809139647}, {-0.03359844608754826, 
        0.00024775043343563084`}, {-0.02882406305060113, 
        0.00022365587301133102`}, {-0.01927529697670688, 
        0.00016931951159133513`}, {-0.014500913939759753`, 
        0.00013850113073921128`}, {-0.009726530902812627, 
        0.00010483738436237004`}, {-0.0049521478658655005`, 
        0.0000679977057421698}, {-0.00043928453609798015`, 
        0.00002994168536854367}}], 
       LineBox[{{-0.17205555415901494`, 
        0.0009058885541589618}, {-0.1672811711220678, 
        0.0008699211513116242}, {-0.1625067880851207, 
        0.0008354026917889676}, {-0.15295802201122644`, 
        0.0007706336903963778}, {-0.1481836389742793, 
        0.0007403326524946584}, {-0.14340925593733217`, 
        0.0007113790895394374}, {-0.13386048986343793`, 
        0.0006573595729801614}, {-0.1290861068264908, 
        0.0006322026586042618}, {-0.12431172378954368`, 
        0.0006082107439823686}, {-0.11557726234545851`, 
        0.0005671304750662191}}], 
       LineBox[{{-0.33855974467808925`, 
        0.002984208972802763}, {-0.3300058029298561, 
        0.0028295796195339233`}, {-0.3128979194333898, 
        0.0025370701562172277`}, {-0.30862094855927324`, 
        0.0024675600796663106`}, {-0.30434397768515664`, 
        0.0023995343097956883`}, {-0.2957900359369235, 
        0.0022679958707315564`}, {-0.2786821524404572, 
        0.0020232748256678607`}, {-0.27440518156634064`, 
        0.0019659547194782667`}, {-0.27012821069222404`, 
        0.0019101807408901945`}, {-0.2615742689439909, 
        0.0018032524433289762`}, {-0.24446638544752458`, 
        0.0016075626058405657`}, {-0.23071345570925184`, 
        0.0014670861534093543`}}], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[{{-0.21025061845459195`, 
        0.00021230039740702296`}, {-0.20547623541764481`, 
        0.00020072392608407315`}, {-0.2007018523806977, 
        0.00018959894515090375`}, {-0.19115308630680344`, 
        0.00016871482132100525`}, {-0.1863787032698563, 
        0.00015895943375557968`}, {-0.18160432023290918`, 
        0.0001496629508520289}, {-0.17552450626446567`, 
        0.00013848832869073585`}}], 
       LineBox[{{-0.44976098740512027`, 
        0.0013883955013259761`}, {-0.44548401653100367`, 
        0.0013511462937577615`}, {-0.4412070456568871, 
        0.0013146218458247583`}, {-0.43265310390865397`, 
        0.001243790624165328}, {-0.41554522041218767`, 
        0.0011112544858165084`}, {-0.41126824953807106`, 
        0.0010800638101780755`}, {-0.4069912786639545, 
        0.0010496606236906389`}, {-0.39843733691572136`, 
        0.0009912274525894784}, {-0.39416036604160476`, 
        0.0009631995432234185}, {-0.3898833951674882, 
        0.0009359631294247972}, {-0.38132945341925506`, 
        0.0008838528689656579}, {-0.37705248254513846`, 
        0.0008589690129744642}, {-0.3727755116710219, 
        0.0008348564680039992}, {-0.36422156992278876`, 
        0.0007889056498246011}, {-0.3471136864263224, 
        0.0007057100084154841}, {-0.3453874020373451, 
        0.0006976319360065147}}], 
       LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAA+r0tEzYovL/v50EorF8QP4gpLThR
77q/TowJS4dJDz8WlSxdbLa5vzMIcGJ5+Q0/pQAsgod9uL/4Ixo4vMsMPzRs
K6eiRLe/IFljMJC8Cz/C1yrMvQu2v1cbD93kxwo/UEMq8djStL+ZvlpGVekJ
P9+uKRb0mbO/klyhESQcCT9uGik7D2Gyv9EreYQ3Wwg//IUoYCoosb/MfClj
FaEHPzG6TlTBbK2/2eiDG0spBj9OkU2e9/qqvz9CurCkXgU/amhM6C2JqL/2
JirSwoAEP4c/SzJkF6a/LmJgcAWIAz+kFkp8mqWjv4rULOxPbAI/we1IxtAz
ob+AsgfSAyUBP7yJjyAOhJ2/QSIGzfZR/z72N420eqCYv/olpQQI3fs+MOaK
SOe8k787WtB4sNb3PtQoEbmnso2/56szwTMp8z5IhQzhgOuDvzHm4cQue+s+
d8MPErRIdL/OTqaPV+7dPsGHV7f4yTy/pgSyVAqkpj7CVK6U
        "]], 
       LineBox[{{-0.17205555415901494`, 
        0.00013244466295689357`}, {-0.1672811711220678, 
        0.00012451940188660135`}, {-0.1625067880851207, 
        0.00011704602047058675`}, {-0.15773240504817357`, 
        0.00011002009479787483`}, {-0.15295802201122644`, 
        0.00010343601309038371`}, {-0.1481836389742793, 
        0.00009728691114170674}, {-0.14340925593733217`, 
        0.00009156460525253809}, {-0.13386048986343793`, 
        0.00008136062881639192}, {-0.1290861068264908, 
        0.00007685535310770603}, {-0.12431172378954368`, 
        0.0000727295101248664}, {-0.11953734075259656`, 
        0.00006896721919139856}, {-0.11557726234545848`, 
        0.00006610986307749563}}], 
       LineBox[{{-0.33855974467808925`, 
        0.0006610087346663543}, {-0.3300058029298561, 
        0.0006166798434279968}, {-0.32572883205573955`, 
        0.0005953336195503918}, {-0.32145186118162294`, 
        0.0005745415307143367}, {-0.3128979194333898, 
        0.0005346418988893403}, {-0.30862094855927324`, 
        0.0005155436963476324}, {-0.30434397768515664`, 
        0.0004970182270146607}, {-0.2957900359369235, 
        0.00046169564648244633`}, {-0.2786821524404572, 
        0.0003979848955576042}, {-0.27440518156634064`, 
        0.00038349476223309707`}, {-0.27012821069222404`, 
        0.00036957289544579263`}, {-0.2615742689439909, 
        0.0003434109224728565}, {-0.24446638544752458`, 
        0.0002975778812438279}, {-0.23071345570925184`, 
        0.0002665723660190253}}], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0]], 
       LineBox[CompressedData["
1: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
Ql476sIWKX0Y/w/Y7boY
        "]], 
       LineBox[{{-0.22735850195105828`, 
        0.000036351542657009495`}, {-0.2230815310769417, 
        0.000034078819722356015`}, {-0.21880456020282513`, 
        0.00003190232946612706}, {-0.21025061845459195`, 
        0.000027840281925417223`}, {-0.20547623541764481`, 
        0.000025742684600183795`}, {-0.2007018523806977, 
        0.000023767017132589074`}, {-0.19592746934375058`, 
        0.00002191333163729506}, {-0.19115308630680344`, 
        0.00002018144496450686}, {-0.1863787032698563, 
        0.000018570924975609392`}, {-0.18160432023290918`, 
        0.000017081076273624096`}, {-0.17552450626427463`, 
        0.00001535697182259047}}], 
       LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAePz6TuLI3L8ukMFuWkk0P3AMeWTP
gty/mOK/KqWZMz9pHPd5vDzcv5SKLxxt7jI/WjzzpJaw278e++70pqUxPzx8
6/pKmNq/HvQmeaWXLj80jGkQOFLav8/r5SM/gi0/LZznJSUM2r8bWW7jTHYs
Px6841D/f9m/QDSSwb16Kj8WzGFm7DnZv4k9urwSiyk/D9zfe9nz2L++6WIT
v6QoPwD826azZ9i/N5vmis3zJj/4C1q8oCHYv4H023r6KCY/8RvY0Y3b17+S
sCHhE2clP+I71PxnT9e/pUu6nmL9Iz/aS1ISVQnXv3l+w34zVSM/0lvQJ0LD
1r90ewVQJ7UiP8prTj0vfda/LfpYwfocIj/De8xSHDfWv8XqlhtjjCE/C+vG
R9Ma1r8YloBFVVAhPzVKnZ4=
        "]], 
       LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAA+r0tEzYovL8pyT4csT7gPogpLThR
77q/0poQ0H1i4D4WlSxdbLa5v6jZWxkMouA+pQAsgod9uL/4kuevu/jgPjRs
K6eiRLe/2cSGyJBh4T7C1yrMvQu2v94jX/sv1+E+UEMq8djStL9kvqME2lPi
Pt+uKRb0mbO/3aqTXmfR4j5uGik7D2Gyv2cKhLNDSeM+/IUoYCoosb/Mg7Mm
abTjPhTjTwqL3q+/hvabclsL5D4xuk5UwWytv+J8bdsiRuQ+TpFNnvf6qr/B
51P0RlzkPmpoTOgtiai/e6sdNslE5D6HP0syZBemv/S50GUf9uM+pBZKfJql
o79DAK/JLWbjPsHtSMbQM6G/riwhK0GK4j68iY8gDoSdv3EB86MIV+E+9jeN
tHqgmL9+kIFqHoHfPjDmikjnvJO/Y+/STGp02z7UKBG5p7KNvwqJmVRSbdY+
SIUM4YDrg78yUR+Swk/QPnfDDxK0SHS/uY5TMk78wT7Bh1e3+Mk8vzRTY6uR
fIs+7W7IOA==
        "]], 
       LineBox[{{-0.17205555415901494`, 
        0.000014459205270865855`}, {-0.1672811711220678, 
        0.000013324339457730657`}, {-0.1625067880851207, 
        0.000012304425252179966`}, {-0.15773240504817357`, 
        0.000011397216534587225`}, {-0.15295802201122644`, 
        0.00001060010580138466}, {-0.1481836389742793, 
        9.910105537233807*^-6}, {-0.14340925593733217`, 
        9.3238288799456*^-6}, {-0.13863487290038506`, 
        8.837469555059874*^-6}, {-0.13386048986343793`, 
        8.4467810563041*^-6}, {-0.1290861068264908, 
        8.147055047442592*^-6}, {-0.12431172378954368`, 
        7.93309896029807*^-6}, {-0.11953734075259656`, 
        7.799212762978632*^-6}, {-0.11557726234545848`, 
        7.744469201497881*^-6}}], 
       LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAAtJvIffaq1b8B5iGTbSUgP6W7xKjQ
HtW/C80tQ4N8HT+ey0K+vdjUv/niyT1TJhw/ltvA06qS1L9L0IepmdsaP4f7
vP6EBtS/VAPIguBoGD+ACzsUcsDTvwQA6uQCQRc/eBu5KV9607+jvCEz3yQW
P2k7tVQ57tK/98TYc9sPFD9iSzNqJqjSv7dDfa/6FhM/WluxfxNi0r9dT07q
0SkSP0t7rart1dG/mDS3M25yED9EiyvA2o/RvxMZL9QPUA8/PJup1cdJ0b/T
4/G5BNINPzSrJ+u0A9G/X+TEnnBqDD8tu6UAor3Qv3rfZXv7GAs/JssjFo93
0L+2C3QWP90JPx7boSt8MdC/EM72Wca2CD8e9jutrErPvwYgpQt9pwY/DxY4
2Ia+zr8i1Oytcb0FPwA2NANhMs6/+IyG4TLmBD/zp/BK4ofNv7UpaQOL+AM/
mgam9g==
        "]], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.6666666666666666, 0.6666666666666666]], 
       LineBox[CompressedData["
1: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
5OswO0rDiRasPVNjYr7iL7WezK2e4ED/Azggch0=
        "]], 
       LineBox[{{-0.22735850195105828`, 
        3.1770738809287485`*^-6}, {-0.2230815310769417, 
        2.793328066160554*^-6}, {-0.21880456020282513`, 
        2.4315559625982745`*^-6}, {-0.21025061845459195`, 
        1.7741991428270933`*^-6}, {-0.20547623541764481`, 
        1.445737087372299*^-6}, {-0.2007018523806977, 
        1.1447912733624524`*^-6}, {-0.19592746934375058`, 
        8.712787097264969*^-7}, {-0.19115308630680344`, 
        6.250597039541647*^-7}, {-0.1863787032698563, 
        4.059346682164236*^-7}, {-0.18160432023290918`, 
        2.1364080024861398`*^-7}, {-0.17552450626427463`, 
        7.079828404782532*^-9}}], 
       LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAAePz6TuLI3L/CmDsItgEPP3AMeWTP
gty/h39m4zyzDT9pHPd5vDzcvw3Hv+TEbww/WjzzpJaw27+KI/keKAoKP1JM
cbqDatu/e+GiBSLoCD9LXO/PcCTbv7g/XAJa0Qc/PHzr+kqY2r+W8MB2lMUF
PzSMaRA4Utq/ny+Bn5PQBD8tnOclJQzavxPgS8TJ5gM/HrzjUP9/2b9cvnTP
nDQCPxbMYWbsOdm/7i+rpAxsAT8P3N972fPYv6KO3cRYrgA/APzbprNn2L/f
QHVY0KX+PvgLWrygIdi/AqNbYpdp/T7xG9jRjdvXv4egH7KWQfw+6itW53qV
17/86/jQSS37PuI71PxnT9e/Ib8MXxws+j7aS1ISVQnXv2FheVtpPfk+0lvQ
J0LD1r/jiy1memD4PsprTj0vfda//29d+4aU9z7De8xSHDfWv0DpZaiz2PY+
uMP9jsIa1r/qflXm6Ib2PvlNvYA=
        "]], 
       LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAA+r0tEzYovL9OHJyGdtWBPogpLThR
77q/8kEGyrbzkT6lACyCh324v0sIifKl0qI+NGwrp6JEt79iSKHz3ACoPsLX
Ksy9C7a/hdydykQ/rT5QQyrx2NK0v5Ao41CkO7E+364pFvSZs79m/mhLZsiz
Pm4aKTsPYbK/yRBGdg45tj78hShgKiixv39E01Luf7g+FONPCover79+KwLC
eY66PjG6TlTBbK2/a97Rsz1VvD5OkU2e9/qqv7mYFITWw70+amhM6C2JqL/t
5vQB5si+Poc/SzJkF6a/9jCWHwlSvz6kFkp8mqWjv1HfGEfNS78+we1IxtAz
ob8IQjZSpaG+PryJjyAOhJ2/vr6TId49vT72N420eqCYv1qU19CSCbs+MOaK
SOe8k7+TuHOEoOy3PtQoEbmnso2/5PAEzpnNsz5IhQzhgOuDv72IGkhzI60+
d8MPErRIdL/4h3LTqzmgPsGHV7f4yTy/a+QOMU0AaT5oEr5x
        "]], 
       LineBox[{{-0.17205555415901494`, 0.}, {-0.1672811711220678, 
        0.}, {-0.1625067880851207, 0.}, {-0.15295802201122644`, 
        0.}, {-0.13386048986343793`, 0.}, {-0.1290861068264908, 
        0.}, {-0.12431172378954368`, 0.}, {-0.11953734075259656`, 
        0.}, {-0.11557726234545848`, 0.}}], 
       LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAAtJvIffaq1b8iaC7/kpn0PqW7xKjQ
HtW/BbEQLGlI8j6ey0K+vdjUv+NVM9vaL/E+ltvA06qS1L+E89ToGSLwPof7
vP6EBtS/283U2o5O7D6ACzsUcsDTv3OjoGmhdOo+eBu5KV96079ur4gqubDo
Pmk7tVQ57tK//4lR8gxr5T5iSzNqJqjSv9e2im896eM+WluxfxNi0r95JLMf
W33iPkt7rart1dG/9vSxOLnN3z5EiyvA2o/Rv7R3xuPJd90+PJup1cdJ0b+f
6fT6REzbPjSrJ+u0A9G/ALbfwZRK2T4tu6UAor3Qv7N/2yMKctc+JssjFo93
0L+FGLOC28HVPh7boSt8MdC/2IL3eiM51D4t1j+C0tbPv2J6jZ3f1tI+HvY7
raxKz7+n5ice75nRPg8WONiGvs6/v3JcdhGB0D4ANjQDYTLOv22d+vnJFc8+
86fwSuKHzb8oLeR4+BfNPl4ZxzI=
        "]], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.5, 0]], 
       LineBox[CompressedData["
1:eJwVl3c8V/8Xx0n2+lBG9vjYkdXX7B5UCElWSCIjM0JKJUpJkoQyPh8ySigp
FRq6J2UkJGnRQDbZO/Tz++e+H8/H+/0+5/2659zXvVf6ULCt9zoGBoZDa5f/
j8cOsCcn5KmgY1hwi5bjTcJKZdxl/00VDGBJbFdKvEnILLbLbc5WwUOvIn1O
1dwkWtJynzdnqCDmW3VuEs4l5Jt0BijJKjiwPy6COT6X+KrvQ6SfUUHSfDlg
KiSP0Bd+PVqwXwUN9MpC9/oVEJT+ospwZxXM26zlkZtQQPQ/Sjq3c58KJr+s
KFW4V0Ck7HERHrBVwVNMqsNd4wXESNzkdmULFUxiVKllO3mLoM9K0h7oquD9
9cHHL2TeJv61nd5VLaCCrgXsLCWsRcR/ZAPHwQ0q+PROqoKudhFx5O7GJgY+
FVQ9zP9ZyKOI+B57z3oHlwpGL5ZqtzwvIqq0v9u9W6eCFYVBsQrHiomQGwZu
38aV0XmTSgb3QgnR7bwUOvtWGW+rBDw/YHKfEDY11U6vV8aPPtPCxifvEzaa
KbO6tcoY9va3U0L5feIlh/KJ06iM6dt49+yllhFZz52jmCqV8acAu/MhlgeE
rfjTi3y3lDE7OMW1ZuEB8brrOF31jDKqp/7ppbM9IhSlLiTMn1LGgYaeFCul
R0TiwZQTryKV0W/U1UXd4hFh//OevcMxZVyxwKr0xEdEb2c3V1SgMvrL7mnl
3PiYYPliGdXkooy1p0uXu1SfEObNkm4BOsp4975wfd/VSuIel6rV1q3KGHLk
jZtyVSVBsdLX/6epjGr3jIrLuyqJr432gqlqytic7a6erFlF+DVcankmp4x3
WJ7yJn6rIhJeTxMcG5Xx/LUWjQntZ0TT03rJ4gklvPzziup+ajVxpO+44pkx
JaSNiD7/a19N8PEpatiNKqEOqaEzeqGacPSNN1kZUELhIiEKOVhNdAnu8t77
SwkF9/l065e/JGbCGksWm5WQ4U/7dLQyEmJqzVst7irhIlNjvNvYK+KlcxQh
WayEZ7u+Vytz1RAeF1TNZgqVsCtl+KmCcg1R+P2KU06+Et57N27yxKeGUL9s
fWoqcy1/SaaeQk8NsWPwPWbFr/HN3ZPXe14TgfltliPeSmgXlhnQz1lHhIwO
WlzzVEJb9ZHo01p1RNh//3bpeCihzNi+K07764iTjSrmsa5rejfV+vferSMu
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
Ozkm5geZmVJ8VHTDAPE/kAZONg==
        "]], 
       LineBox[{{-0.22735850195105828`, 0.}, {-0.2230815310769417, 
        0.}, {-0.21880456020282513`, 0.}, {-0.21025061845459195`, 
        0.}, {-0.20547623541764481`, 0.}, {-0.2007018523806977, 
        0.}, {-0.19115308630680344`, 0.}, {-0.17552450626450394`, 0.}}], 
       LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAePz6TuLI3L8JZ/ua5gDkPnAMeWTP
gty/jAIM7BHn4j5pHPd5vDzcv5wadDLB2eE+WjzzpJaw2785C9ciocnfPlJM
cbqDatu/r0sTDW/63T5LXO/PcCTbv55qIlRfRNw+PHzr+kqY2r894Fk7USPZ
PjSMaRA4Utq/FqvPgQu41z4tnOclJQzav4AaL0tYZdY+JqxlOxLG2b/IEePP
9CrVPh6841D/f9m/ZYvPu5AI1D4WzGFm7DnZvxbbUIjN/dI+D9zfe9nz2L9c
FILQPQrSPgjsXZHGrdi/SHafn2Qt0T4A/Nums2fYv/yTWLm0ZtA++AtavKAh
2L/jhcm3H2vPPvEb2NGN29e/PT5W94syzj7qK1bnepXXv95tnPAoIs0+4jvU
/GdP179hUdSVSjjMPtpLUhJVCde/o1elWhxzyz7SW9AnQsPWvw5QOnSf0Mo+
ymtOPS991r+GN4MKqU7KPsN7zFIcN9a/FVM3WuDqyT5yQYDopxrWv8mouugK
sMk+9t3NTg==
        "]], 
       LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAA+r0tEzYovL+3htUZa8JrPogpLThR
77q/pjtBqOkSez6lACyCh324vzcCYC5X5Io+NGwrp6JEt7/EqY1/OsCQPsLX
Ksy9C7a/Tb2S7s/6kz5QQyrx2NK0vxrDb4TPFpc+364pFvSZs7/GKC7haAia
Pm4aKTsPYbK/MRRVFhDDnD78hShgKiixv9pji9V1OZ8+FONPCover79gTxGt
v66gPjG6TlTBbK2/yZWzBR+QoT5OkU2e9/qqvwkrwWrzOKI+amhM6C2JqL8U
M1Wb5KCiPoc/SzJkF6a/tCsm/yK/oj6kFkp8mqWjv7XK5N1iiqI+we1IxtAz
ob9NPilt1/ihPryJjyAOhJ2/MiCqsy0AoT72N420eqCYv8033oAOK58+MOaK
SOe8k7+Yb09p6VqbPtQoEbmnso2/ELqJPeB3lj5IhQzhgOuDv8U/00quaJA+
d8MPErRIdL8ZsfUClCWCPsGHV7f4yTy/LOBo91fJSz5zKLgc
        "]], 
       LineBox[{{-0.17205555415901494`, 0.}, {-0.13386048986343793`, 
        0.}, {-0.1290861068264908, 0.}, {-0.12431172378954368`, 
        0.}, {-0.11953734075259656`, 0.}, {-0.11557726234545848`, 0.}}], 
       LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAtJvIffaq1b9oYI2BTALHPqW7xKjQ
HtW/qnTOtXO9wz6ey0K+vdjUv6baEX+QMsI+ltvA06qS1L8YKuHqkLfAPof7
vP6EBtS/Rj5dK3Xjuz6ACzsUcsDTv+JRH40tTrk+eBu5KV96079Rl4Xfd9m2
PnArNz9MNNO/mNyPhGyFtD5pO7VUOe7Sv1OXMCwYUrI+Ykszaiao0r9wTGoz
ez+wPlpbsX8TYtK/5Q1O+xGbrD5Le62q7dXRvwt6LO5alqU+RIsrwNqP0b/K
YsS5x3SiPjybqdXHSdG/85xI6Qsmnz40qyfrtAPRvxCp+OHK4Jk+LbulAKK9
0L8sXqduJhiVPibLIxaPd9C/SGFGvC/KkD4e26ErfDHQv4IVWktX6Yk+LdY/
gtLWz79odxlPHiqDPh72O62sSs+/X3LV1e6hej4PFjjYhr7Ov3lLCbztrnA+
ADY0A2Eyzr8NMxCi6dlgPvOn8Erih82/a6O1ElxFIj4Rw75T
        "]], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
3nFjq3/tkUCUNNmWXQn7RbanT0EasxXxP6U+Yg8=
        "]], 
       LineBox[{{-0.21025061845459195`, 0.}, {-0.20547623541764481`, 
        0.}, {-0.2007018523806977, 0.}, {-0.19115308630680344`, 
        0.}, {-0.1755246839195516, 0.}}], 
       LineBox[{{-0.4583149291533534, 0.}, {-0.4540379582792369, 
        0.}, {-0.44976098740512027`, 0.}, {-0.44548401653100367`, 
        0.}, {-0.4412070456568871, 0.}, {-0.43265310390865397`, 
        0.}, {-0.41554522041218767`, 0.}, {-0.41126824953807106`, 
        0.}, {-0.4069912786639545, 0.}, {-0.39843733691572136`, 
        0.}, {-0.38132945341925506`, 0.}, {-0.3471136864263224, 
        0.}, {-0.3449562227173629, 0.}}], 
       LineBox[{{-0.057470361272283894`, 0.}, {-0.05269597823533677, 
        0.}, {-0.047921595198389635`, 0.}, {-0.03837282912449538, 
        0.}, {-0.01927529697670688, 0.}, {-0.012082085739379606`, 0.}}], 
       LineBox[{{-0.17205555415901494`, 0.}, {-0.13386048986343793`, 
        0.}, {-0.11553178265326344`, 0.}}], 
       LineBox[{{-0.33855974467808925`, 0.}, {-0.3300058029298561, 
        0.}, {-0.3128979194333898, 0.}, {-0.2786821524404572, 
        0.}, {-0.23069649189176908`, 0.}}], 
       LineBox[{{0.018919767318870132`, 0.}, {0.02369415035581726, 0.}, {
        0.028468533392764388`, 0.}, {0.03801729946665864, 0.}, {
        0.057114831614447144`, 0.}, {0.06188921465139427, 0.}, {
        0.0666635976883414, 0.}, {0.07621236376223565, 0.}, {
        0.08098674679918277, 0.}, {0.0857611298361299, 0.}, {
        0.09053551287307704, 0.}, {0.09530989591002416, 
        0.}}]}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-13.815510557964274`, Automatic}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.04}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-13.815510274069974`, 0.09530989591002416}, {0., 
        0.036788257053311395`}}, {{-13.815510274069974`, 
        0.09530989591002416}, {0., 0.036788257053311395`}}}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)dN/dx \"", 
         TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.04}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"n=1\"", "\"n=2\"", "\"n=3\"", "\"n=4\"", "\"n=5\"", "\"n=6\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    1, 0.6666666666666666, 0.6666666666666666]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.4444444444444444, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.6666666666666666, 0.6666666666666666]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.6666666666666666, 0.6666666666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.639074931265847*^9, {3.639074993996307*^9, 3.639075126508544*^9}, {
   3.6390751652623243`*^9, 3.639075298714778*^9}, {3.639075331043693*^9, 
   3.6390755160311527`*^9}, {3.639076375523621*^9, 3.639076401822846*^9}, {
   3.639076469427896*^9, 3.639076488218067*^9}, {3.639076704542169*^9, 
   3.639076717305942*^9}, 3.644577159564115*^9, {3.64457729122045*^9, 
   3.6445773608921213`*^9}, 3.644577402036332*^9, {3.644577432209478*^9, 
   3.644577519554563*^9}, 3.644577554891653*^9, {3.6445776113653603`*^9, 
   3.6445776301037283`*^9}, 3.644577679022887*^9, 3.644578222132937*^9, 
   3.644578262695685*^9, 3.64458100205402*^9, 3.644581163799165*^9, 
   3.644581226672163*^9, 3.6445840561751328`*^9, {3.64458488311733*^9, 
   3.64458489793933*^9}, 3.6445849846531363`*^9, {3.644585180434134*^9, 
   3.644585201868363*^9}, {3.644585409788192*^9, 3.644585435218499*^9}, 
   3.644586406127926*^9, 3.644598056429336*^9, {3.6569741460690603`*^9, 
   3.65697415907928*^9}, 3.656974827319139*^9, 3.6569749001614523`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Positron Direct Spectrum of Final State ",
 StyleBox["b",
  FontSlant->"Italic"],
 "-quarks for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "f"], "=", "0.3"}], TraditionalForm]]]
}], "Section",
 CellChangeTimes->{{3.6390630204859133`*^9, 3.639063025852809*^9}, {
  3.639076336932643*^9, 3.6390763661398563`*^9}, {3.639076412252461*^9, 
  3.639076429227652*^9}, {3.639076546090394*^9, 3.6390765590298443`*^9}}],

Cell[TextData[{
 "In this example we load the 0-step positron spectrum for a DM annihilation \
proceeding directly  into ",
 StyleBox["b",
  FontSlant->"Italic"],
 "-quarks for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "f"], "=", "0.3"}], TraditionalForm]]],
 ". For other final states, replace the 14 in the flux row with: 5 \
(electrons), 8 (muons), 11 (taus), 14 (",
 StyleBox["b",
  FontSlant->"Italic"],
 "-quarks), 18 (",
 StyleBox["W",
  FontSlant->"Italic"],
 " bosons), 22 (gluons), 23 (photons) or 24 (Higgs).\nNote for certain direct \
spectra, like the positron spectrum from final state electrons, or the photon \
spectrum from final state photons, the spectrum is actually a Dirac \
\[Delta]-function and it may often be easier to just use this analytic \
expression."
}], "Text",
 CellChangeTimes->{{3.6445976000873127`*^9, 3.644597637650031*^9}, {
   3.644598060861582*^9, 3.6445981089747334`*^9}, {3.6445982623169527`*^9, 
   3.6445983408554983`*^9}, 3.656974193760705*^9, {3.656974233478744*^9, 
   3.6569743216982307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "BaseDir", ",", "load", ",", "mf", ",", "mass", ",", "xval", ",", "flux", 
   ",", "loadspec", ",", "dNdx0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BaseDir", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"load", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"BaseDir", "<>", "\"\<Spectra/AtProduction_positrons.dat\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mf", "=", "4.18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mass", "=", 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "]"}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"in", " ", "GeV"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xval", "=", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"load", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", ";;", 
          RowBox[{
           RowBox[{"Dimensions", "[", "load", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "2"}], "]"}], "]"}], 
      ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"x", " ", "=", " ", 
    RowBox[{"E", "/", "M"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xval"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "14"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mass", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xval", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx0", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"loadspec", "[", 
         RowBox[{
          FractionBox["mf", "\[Epsilon]"], ",", "x"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"dNdx0", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.07"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)dN/dx \>\""}],
      "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Darker", "[", "Gray", "]"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<n=0\>\"", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.639076588298305*^9, 3.639076666827195*^9}, {
   3.6445840003231363`*^9, 3.6445840120261393`*^9}, {3.6445851269240093`*^9, 
   3.64458514902188*^9}, 3.644586384478674*^9, 3.656974862833619*^9, 
   3.656974915776977*^9, {3.6569800476470346`*^9, 3.656980047766233*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
       LineBox[CompressedData["
1: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
ABVtWXI=
        "]], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}]}, {}}, {{}, {}, {}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-13.815510557964274`, Automatic}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.07}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-13.815510274069974`, 0.09530989591002416}, {0., 
        0.059898924253009626`}}, {{-13.815510274069974`, 
        0.09530989591002416}, {0., 0.059898924253009626`}}}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)dN/dx \"", 
         TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.07}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> 
     {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"n=0\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.33333333333333337`, 0.33333333333333337`, 
                   0.33333333333333337`], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.639076611805574*^9, 3.6390766683190613`*^9}, 
   3.6390767190461483`*^9, {3.6445839842947693`*^9, 3.644584014261587*^9}, 
   3.644586407561598*^9, 3.656974333286442*^9, 3.6569748645354233`*^9, 
   3.656974917386509*^9, 3.656980049533836*^9}]
}, Open  ]],

Cell[TextData[{
 "NB: recall \[Epsilon]=mf/",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "\[Chi]"], TraditionalForm]]],
 ", so above when we specified \[Epsilon] and subbed in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"mf", "/", "\[Epsilon]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we could equally well have specified ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "\[Chi]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and subbed it in. An example of this is shown below"
}], "Text",
 CellChangeTimes->{{3.656974350305602*^9, 3.656974455523155*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Photon Direct Spectrum of Final State gluons for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "\[Chi]"], "=", "25"}], TraditionalForm]]],
 " GeV"
}], "Section",
 CellChangeTimes->{{3.6390630204859133`*^9, 3.639063025852809*^9}, {
  3.639076336932643*^9, 3.6390763661398563`*^9}, {3.639076412252461*^9, 
  3.639076429227652*^9}, {3.639076546090394*^9, 3.6390765590298443`*^9}, {
  3.656974478721797*^9, 3.656974493337208*^9}, {3.656974618027175*^9, 
  3.656974622130679*^9}}],

Cell[TextData[{
 "In this example we load the 0-step photon spectrum for a DM annihilation \
proceeding directly  into gluons for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "\[Chi]"], "=", "25"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " GeV. This is an alternative to loading via specifying \[Epsilon] or ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "\[Phi]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (the latter being appropriate for gluons). Note for a direct spectrum ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "\[Phi]"], "=", 
    RowBox[{"2", 
     SubscriptBox["m", "\[Chi]"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so specifying one fixes the other. See the previous example for further \
details."
}], "Text",
 CellChangeTimes->{{3.6445976000873127`*^9, 3.644597637650031*^9}, {
   3.644598060861582*^9, 3.6445981089747334`*^9}, {3.6445982623169527`*^9, 
   3.6445983408554983`*^9}, 3.656974193760705*^9, {3.656974233478744*^9, 
   3.6569743216982307`*^9}, {3.656974466867167*^9, 3.656974473993824*^9}, {
   3.656974505592162*^9, 3.656974570188876*^9}, {3.656974608285205*^9, 
   3.656974615178609*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "BaseDir", ",", "load", ",", "mf", ",", "mass", ",", "xval", ",", "flux", 
   ",", "loadspec", ",", "dNdx0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BaseDir", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"load", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"BaseDir", "<>", "\"\<Spectra/AtProduction_gammas.dat\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m\[Chi]", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mass", "=", 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "]"}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"in", " ", "GeV"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xval", "=", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"load", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", ";;", 
          RowBox[{
           RowBox[{"Dimensions", "[", "load", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "2"}], "]"}], "]"}], 
      ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"x", " ", "=", " ", 
    RowBox[{"E", "/", "M"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flux", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", "10", "]"}], "xval"}]], ")"}], 
    RowBox[{"load", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "load", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "22"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadspec", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mass", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"xval", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"flux", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "load", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dNdx0", "[", "x_", "]"}], "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"loadspec", "[", 
         RowBox[{"m\[Chi]", ",", "x"}], "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"dNdx0", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]], ",", "1.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.25"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)dN/dx \>\""}],
      "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Darker", "[", "Gray", "]"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<n=0\>\"", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.639076588298305*^9, 3.639076666827195*^9}, {
   3.6445840003231363`*^9, 3.6445840120261393`*^9}, {3.6445851269240093`*^9, 
   3.64458514902188*^9}, 3.644586384478674*^9, {3.656974575860723*^9, 
   3.6569746061487617`*^9}, {3.656974644414455*^9, 3.656974675490058*^9}, {
   3.656974854999372*^9, 3.656974855427026*^9}, {3.65697490323083*^9, 
   3.6569749048837137`*^9}, {3.6569800420167007`*^9, 3.656980042142832*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]], 
       LineBox[{{-13.815510274069974`, 0.}, {-13.81124385995431, 
        0.}, {-13.806977445838644`, 0.}, {-13.798444617607313`, 
        0.}, {-13.78137896114465, 0.}, {-13.747247648219329`, 
        0.}, {-13.678985022368682`, 0.}, {-13.674718608253016`, 
        0.}, {-13.67045219413735, 0.}, {-13.66191936590602, 
        0.}, {-13.644853709443359`, 0.}, {-13.610722396518035`, 
        0.}, {-13.60645598240237, 0.}, {-13.602189568286704`, 
        0.}, {-13.593656740055374`, 0.}, {-13.58939032593971, 0.}}], 
       LineBox[CompressedData["
1:eJxFkosvFAAcx+24ke2SRcnr1Fr0SxEq4VdEqCRdXZLzOHfnlFcvkVJiGLOG
5RGHIk7Krukhj/hJ51KLmrTe3Y1JkZgOo5G2tr7bZ58/4PNdGRbLETE0NDRg
gb8uk/s+DBkH0vi34wXOwe9+AjlG8Z1r+XMu0pQM9rkfQA2C4sUlt8zwc0yv
0nQYKFLxbZVeEaCPV6QgdBBo5lP6RLChE6baN6xmDADV1IqtVYmu2MTWHKxU
AZmxNoyI9D3Qaro44utHoNuJpelJ0j0YMjC4NvM90I2K1if51/dhwUu7YXgL
1Odhk5P6YT9q3XwWHdMLtJlp6OW29BCqAmZOqruAukpKjyr6gtHI09OhUAFk
q/Txi0wLRT+7PLWjHKjy8UAVt4yPrbqQcJ6AXtz/IZPJBaiejNtq3gok7Ujm
LX8lROv+9pm2ZqCOX2fHel6LUNDDauE3AmU6jXYY94RjcXNAkmYDkLlLwSKL
VjG+klZtq7oHJLzPmZKtjUCdK+PznvVAbezTj4Jmxbg9GduHZEAT4wq3yQdi
PBOVmZJVB3Ssy167hSfGusN97ta3gBjTgSFzI+E44LGS2V0D9L7HaIlxRDia
bIzujK0G4rpqzp/tFiHHrDFD/wbQQdbu/kILEWYuYu66ex2onsuY+x0sRFL7
6XLLgTblW77bkSXAKZXk+aQEKL87mWVQGYYbuoeyi4qBCg0r9NbX8lHU5ODr
VATE8XLXCroWipLqZL2P+UCiNh9HFisEdS8a5bFzgdS8nWtO7D2CbpHCA+2X
gSjX+5RS7o8J/ncMBNlAUTZXmVqWXBy08S6szljoFW/C4PH2oZnplcPeaUBP
h8embe/twoM6yhXfU4DS1wXWaKvdsUMZL1l/Aah83mB0i8QWrSzSsqbOAV36
cjRnVr4M4+o73+xI/P/HP0MaO4o=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQLcP/YzKvndYBBiho8GNtum6N4D/pFSpYaInge5yV
j8s2R/DX8Oj6mJoi+AI+Vlb/jRD8G6dCxCbrIfiZJzrP7VJF8LsOf7bjEkHw
z+w8Lr/ygyacn/e0XKPuHYIvKKhhGPwGwQ/L6HD6+xzBfyDmmRp4H8H/Unxq
1c+zCL6M3llTr9UIfs6iS96vUxF8N+VUwezzGnB+ar4P+zcnBP+bVpfmVAcE
v+PZcW8TOwR/VazzhCJLBP+Dt5Xke30Ev4m9wrpPF8EHAHa3WGg=
        "]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[{{0.004596618208028753, 0.}, {0.00937100124497588, 0.}, {
        0.014145384281923006`, 0.}, {0.018919767318870132`, 0.}, {
        0.02369415035581726, 0.}, {0.028468533392764388`, 0.}, {
        0.03801729946665864, 0.}, {0.057114831614447144`, 0.}, {
        0.06188921465139427, 0.}, {0.0666635976883414, 0.}, {
        0.07621236376223565, 0.}, {0.08098674679918277, 0.}, {
        0.0857611298361299, 0.}, {0.09053551287307704, 0.}, {
        0.09530989591002416, 0.}}]}, {}}, {{}, {}, {}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-13.815510557964274`, Automatic}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.25}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-13.815510274069974`, 
        0.09530989591002416}, {-1.1129817557349512`*^-13, 
        0.20130980826428754`}}, {{-13.815510274069974`, 
        0.09530989591002416}, {0., 0.20130980826428754`}}}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)dN/dx \"", 
         TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-13.815510557964274`, 0.09531017980432493}, {0, 0.25}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"n=0\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.33333333333333337`, 0.33333333333333337`, 
                   0.33333333333333337`], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.639076611805574*^9, 3.6390766683190613`*^9}, 
   3.6390767190461483`*^9, {3.6445839842947693`*^9, 3.644584014261587*^9}, 
   3.644586407561598*^9, 3.656974333286442*^9, {3.656974662384239*^9, 
   3.65697467701595*^9}, 3.656974857335136*^9, 3.6569749073246927`*^9, 
   3.656980043778796*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{799, 730},
WindowMargins->{{Automatic, -11}, {31, Automatic}},
FrontEndVersion->"10.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 23, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 149, 2, 92, "Title"],
Cell[CellGroupData[{
Cell[754, 28, 617, 10, 69, "Subsection"],
Cell[1374, 40, 406, 10, 68, "Text"],
Cell[1783, 52, 7800, 226, 1041, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9620, 283, 356, 11, 68, "Section"],
Cell[9979, 296, 447, 13, 51, "Text"],
Cell[CellGroupData[{
Cell[10451, 313, 16703, 473, 897, "Input"],
Cell[27157, 788, 113654, 2001, 257, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140860, 2795, 408, 12, 68, "Section"],
Cell[141271, 2809, 739, 20, 70, "Text"],
Cell[CellGroupData[{
Cell[142035, 2833, 17232, 490, 897, "Input"],
Cell[159270, 3325, 177300, 3048, 257, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[336619, 6379, 414, 10, 103, "Section"],
Cell[337036, 6391, 459, 11, 53, "Text"],
Cell[CellGroupData[{
Cell[337520, 6406, 16437, 470, 999, "Input"],
Cell[353960, 6878, 125456, 2208, 257, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[479465, 9092, 455, 12, 68, "Section"],
Cell[479923, 9106, 1072, 26, 127, "Text"],
Cell[CellGroupData[{
Cell[481020, 9136, 4447, 133, 329, "Input"],
Cell[485470, 9271, 25653, 459, 257, "Output"]
}, Open  ]],
Cell[511138, 9733, 588, 17, 57, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511763, 9755, 510, 12, 68, "Section"],
Cell[512276, 9769, 1210, 29, 95, "Text"],
Cell[CellGroupData[{
Cell[513511, 9802, 4486, 132, 290, "Input"],
Cell[518000, 9936, 28189, 504, 257, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
